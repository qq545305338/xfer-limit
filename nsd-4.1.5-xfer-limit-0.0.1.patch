diff -Naur nsd-4.1.5/.gitignore nsd-4.1.5-xfer-limit-p0.0.1/.gitignore
--- nsd-4.1.5/.gitignore	1970-01-01 00:00:00.000000000 +0000
+++ nsd-4.1.5-xfer-limit-p0.0.1/.gitignore	2015-09-28 09:05:48.000000000 +0000
@@ -0,0 +1,18 @@
+*~
+*.o
+nsd
+Makefile
+config.h
+config.log
+config.status
+nsd-checkconf
+nsd-checkconf.8
+nsd-checkzone
+nsd-checkzone.8
+nsd-control
+nsd-control-setup.sh
+nsd-control.8
+nsd.8
+nsd.conf.5
+nsd.conf.sample
+
diff -Naur nsd-4.1.5/buffer.h nsd-4.1.5-xfer-limit-p0.0.1/buffer.h
--- nsd-4.1.5/buffer.h	2006-02-07 13:48:16.000000000 +0000
+++ nsd-4.1.5-xfer-limit-p0.0.1/buffer.h	2015-09-28 09:05:48.000000000 +0000
@@ -315,6 +315,20 @@
 }
 
 static inline void
+buffer_write_u64_at(buffer_type *buffer, size_t at, uint64_t data)
+{
+	assert(buffer_available_at(buffer, at, sizeof(data)));
+	write_uint64(buffer->_data + at, data);
+}
+
+static inline void
+buffer_write_u64(buffer_type *buffer, uint64_t data)
+{
+	buffer_write_u64_at(buffer, buffer->_position, data);
+	buffer->_position += sizeof(data);
+}
+
+static inline void
 buffer_read_at(buffer_type *buffer, size_t at, void *data, size_t count)
 {
 	assert(buffer_available_at(buffer, at, count));
@@ -373,6 +387,21 @@
 	return result;
 }
 
+static inline uint32_t
+buffer_read_u64_at(buffer_type *buffer, size_t at)
+{
+	assert(buffer_available_at(buffer, at, sizeof(uint64_t)));
+	return read_uint64(buffer->_data + at);
+}
+
+static inline uint64_t
+buffer_read_u64(buffer_type *buffer)
+{
+	uint64_t result = buffer_read_u64_at(buffer, buffer->_position);
+	buffer->_position += sizeof(uint64_t);
+	return result;
+}
+
 /*
  * Print to the buffer, increasing the capacity if required using
  * buffer_reserve(). The buffer's position is set to the terminating
diff -Naur nsd-4.1.5/configlexer.c nsd-4.1.5-xfer-limit-p0.0.1/configlexer.c
--- nsd-4.1.5/configlexer.c	2015-09-21 09:21:02.000000000 +0000
+++ nsd-4.1.5-xfer-limit-p0.0.1/configlexer.c	2015-09-28 09:05:48.000000000 +0000
@@ -9,7 +9,7 @@
 #define FLEX_SCANNER
 #define YY_FLEX_MAJOR_VERSION 2
 #define YY_FLEX_MINOR_VERSION 5
-#define YY_FLEX_SUBMINOR_VERSION 37
+#define YY_FLEX_SUBMINOR_VERSION 39
 #if YY_FLEX_SUBMINOR_VERSION > 0
 #define FLEX_BETA
 #endif
@@ -142,7 +142,15 @@
 
 /* Size of default input buffer. */
 #ifndef YY_BUF_SIZE
+#ifdef __ia64__
+/* On IA-64, the buffer size is 16k, not 8k.
+ * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
+ * Ditto for the __ia64__ case accordingly.
+ */
+#define YY_BUF_SIZE 32768
+#else
 #define YY_BUF_SIZE 16384
+#endif /* __ia64__ */
 #endif
 
 /* The state buf must be large enough to hold one state per character in the main buffer.
@@ -168,6 +176,7 @@
 #define EOB_ACT_LAST_MATCH 2
 
     #define YY_LESS_LINENO(n)
+    #define YY_LINENO_REWIND_TO(ptr)
     
 /* Return all but the first "n" matched characters back to the input stream. */
 #define yyless(n) \
@@ -362,8 +371,8 @@
 	*yy_cp = '\0'; \
 	(yy_c_buf_p) = yy_cp;
 
-#define YY_NUM_RULES 87
-#define YY_END_OF_BUFFER 88
+#define YY_NUM_RULES 88
+#define YY_END_OF_BUFFER 89
 /* This struct is not used in this scanner,
    but its presence is necessary. */
 struct yy_trans_info
@@ -371,81 +380,82 @@
 	flex_int32_t yy_verify;
 	flex_int32_t yy_nxt;
 	};
-static yyconst flex_int16_t yy_accept[666] =
+static yyconst flex_int16_t yy_accept[680] =
     {   0,
-        1,    1,   75,   75,   79,   79,   83,   83,   88,   86,
-        1,   73,   74,    2,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   87,   75,   76,   87,   77,   87,   82,   79,   80,
-       81,   87,   83,   84,   85,   87,   86,    0,    1,    2,
-        2,    2,    2,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   75,    0,   82,    0,
-       79,   83,    0,   86,   86,   86,   86,   86,   86,   86,
-
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   61,
-       86,   86,   86,   86,   86,   86,   60,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   47,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,    4,   86,   16,
-
-       86,   86,   86,   25,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   37,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   28,   86,   86,   86,   86,   12,   13,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-
-       86,   42,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   49,   86,    3,   86,   86,
-       86,   86,   86,   86,   86,   86,   34,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   78,   86,   86,   86,   86,   86,   86,   86,   86,
-       17,   86,   86,   50,   24,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   14,   86,
-       32,   86,   15,   86,   86,   86,   86,   10,   11,   86,
-
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   62,   64,   86,   86,   86,   86,   86,   86,
-       86,   86,   29,   86,   86,   33,   38,   86,   86,   30,
-       86,   48,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,    6,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   26,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   19,   86,   86,   36,   86,   86,   86,
-       39,   86,   86,   86,   86,   86,   86,   86,    8,   86,
-       86,    5,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   27,
-
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   44,   86,   41,   72,   86,   86,   86,   86,   86,
-       86,   86,   86,   21,   86,   86,   86,   86,   86,   40,
-       86,   86,   86,   86,   55,    9,   86,   86,   86,   86,
-       86,   43,   86,   86,   86,   86,   86,   86,   86,   18,
-       86,   86,   86,   86,   86,   31,   86,   86,   86,   86,
-       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       63,   86,   68,   86,   86,   86,   86,   86,   86,   86,
-       86,   53,   86,   86,   86,    7,   22,   23,   71,   86,
-
-       52,   86,   86,   86,   86,   86,   86,   86,   86,   86,
-       86,   86,   86,   86,   51,   86,   86,   86,   86,   86,
-       56,   20,   86,   69,   70,   86,   86,   86,   58,   86,
-       86,   86,   86,   57,   86,   86,   59,   54,   86,   86,
-       86,   86,   86,   86,   45,   86,   86,   86,   86,   46,
-       86,   86,   86,   35,   86,   86,   86,   86,   86,   86,
-       65,   66,   86,   67,    0
+        1,    1,   76,   76,   80,   80,   84,   84,   89,   87,
+        1,   74,   75,    2,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   88,   76,   77,   88,   78,   88,   83,   80,   81,
+       82,   88,   84,   85,   86,   88,   87,    0,    1,    2,
+        2,    2,    2,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   76,    0,   83,
+        0,   80,   84,    0,   87,   87,   87,   87,   87,   87,
+
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   62,   87,   87,   87,   87,   87,   87,   61,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   48,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+
+        4,   87,   16,   87,   87,   87,   25,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   37,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   28,   87,   87,   87,
+       87,   12,   13,   87,   87,   87,   87,   87,   87,   87,
+
+       87,   87,   87,   87,   87,   87,   43,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       50,   87,    3,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   34,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   79,   87,   87,
+       87,   87,   87,   87,   87,   87,   17,   87,   87,   51,
+       24,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   14,   87,   32,   87,   15,
+
+       87,   87,   87,   87,   10,   11,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   63,
+       65,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       29,   87,   87,   33,   38,   87,   87,   30,   87,   49,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+        6,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   26,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   19,   87,   87,   36,   87,   87,   87,   39,
+       87,   87,   87,   87,   87,   87,   87,    8,   87,   87,
+        5,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   27,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   45,   87,   42,   73,   87,   87,   87,   87,   87,
+       87,   87,   87,   87,   21,   87,   87,   87,   87,   87,
+       40,   87,   87,   87,   87,   56,    9,   87,   87,   87,
+       87,   87,   44,   87,   87,   87,   87,   87,   87,   87,
+       18,   87,   87,   87,   87,   87,   87,   31,   87,   87,
+       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
+       87,   87,   64,   87,   69,   87,   87,   87,   87,   87,
+
+       87,   87,   87,   87,   54,   87,   87,   87,    7,   22,
+       23,   72,   87,   53,   87,   87,   87,   87,   87,   41,
+       87,   87,   87,   87,   87,   87,   87,   87,   52,   87,
+       87,   87,   87,   87,   57,   20,   87,   70,   71,   87,
+       87,   87,   59,   87,   87,   87,   87,   58,   87,   87,
+       60,   55,   87,   87,   87,   87,   87,   87,   46,   87,
+       87,   87,   87,   47,   87,   87,   87,   35,   87,   87,
+       87,   87,   87,   87,   66,   67,   87,   68,    0
     } ;
 
 static yyconst flex_int32_t yy_ec[256] =
@@ -491,163 +501,165 @@
         1
     } ;
 
-static yyconst flex_int16_t yy_base[675] =
+static yyconst flex_int16_t yy_base[689] =
     {   0,
-        0,    0,   59,   62,   66,   70,   73,   76, 1868, 1831,
-       80, 1869, 1869,   83,   63,   79,   89,   71,  110,   96,
-       81,  116,  106,  136,  141,  128,  115,  157,  143,   78,
-      151,   87, 1830, 1869, 1869, 1869,  144, 1829, 1862, 1869,
-     1869,  194, 1827, 1869, 1869,  198, 1825,  202,  139,    0,
-      208,    0,    0,  188,  172,  189,  192,  190,  210,  201,
-      131,  213,  159,  221,  231,  187,  215,  230,  200,  235,
-      227,  232,  245,  237,  241,  253,  256,  248,  280,  261,
-      274,  275,  279,  277,  281,  291, 1817,  298, 1799,  319,
-     1832, 1796,  324,  282,  307,  308,  312,  309,  330,  316,
-
-      323,  318,  332,  333,  334,  335,  349,  315,  351,  366,
-      182,  372,  362,  361,  369,  374,  360,  376,  364,  359,
-      375,  371,  385,  397,  387,  395,  393,  399,  419, 1795,
-      405,  424,  416,  423,  413,  238, 1790,  421,  415,  425,
-      436,  431,  440,  462,  441,  444,  448,  467,  451,  458,
-      459,  478,  479, 1789,  461,  474,  482,  486,  489,  481,
-      491,  493,  501,  494,  497,  505,  506,  509,  529,  519,
-      528,  517,  537,  531,  534,  552,  565,  559,  570,  543,
-      566,  574,  584,  577,  591,  572,  590,  600,  589,  601,
-      606,  598,  609,  603,  613,  614,  617, 1787,  612, 1786,
-
-      632,  625,  634, 1784,  643,  648,  637,  631,  659,  635,
-      651,  671,  657,  667,  649,  669,  670,  644,  679,  693,
-      681,  672,  691,  685, 1777,  692,  695,  705,  697,  721,
-      703,  725,  714,  726,  728,  733,  737,  740,  727,  744,
-      742,  750,  748,  762,  766,  752,  753,  768,  776,  789,
-      771,  772,  786,  790,  793,  782,  799,  779,  783,  805,
-      803,  809,  811,  800,  836,  815,  812,  835,  830,  831,
-      838,  844,  837,  845,  841,  833,  846,  864,  868,  856,
-      866, 1713,  886,  882,  870,  883, 1691, 1683,  872,  869,
-      900,  896,  898,  902,  892,  897,  891,  914,  906,  907,
-
-      917, 1648,  924,  935,  936,  941,  942,  944,  922,  937,
-      956,  947,  953,  949,  940, 1639,  966, 1605,  963,  961,
-      971,  975,  978,  967,  970,  989, 1582,  998,  991,  982,
-      992,  993, 1007,  997, 1040, 1021, 1018, 1026, 1009, 1028,
-     1015, 1565, 1033, 1014, 1031, 1034, 1051, 1044, 1047, 1064,
-     1509, 1058, 1070, 1475, 1350, 1056, 1054, 1060, 1059, 1072,
-     1090, 1095, 1082, 1097, 1099, 1096, 1098, 1102, 1108, 1087,
-     1091, 1100, 1110, 1094, 1116, 1131, 1135, 1133, 1143, 1128,
-     1145, 1132, 1138, 1150, 1154, 1157, 1158, 1134, 1335, 1161,
-     1319, 1142, 1243, 1177, 1162, 1164, 1184, 1223, 1188, 1189,
-
-     1194, 1196, 1176, 1190, 1192, 1187, 1201, 1205, 1203, 1191,
-     1204, 1225, 1183, 1175, 1217, 1218, 1216, 1213, 1222, 1241,
-     1249, 1227, 1168, 1250, 1251, 1126, 1124, 1258, 1248, 1076,
-     1256, 1069, 1261, 1253, 1254, 1263, 1246, 1244, 1269, 1281,
-     1274, 1273,  965, 1293, 1279, 1280, 1283, 1284, 1287, 1290,
-     1291, 1306, 1294,  930, 1310, 1309, 1314, 1321, 1329, 1320,
-     1328, 1318, 1342,  923, 1340, 1334,  918, 1344, 1355, 1345,
-      875, 1357, 1349, 1359, 1360, 1367, 1324, 1361,  860, 1379,
-     1371,  859, 1386, 1385, 1387, 1397, 1383, 1376, 1401, 1393,
-     1408, 1414, 1419, 1420, 1406, 1411, 1431, 1416, 1432,  827,
-
-     1430, 1439, 1433, 1440, 1426, 1442, 1452, 1449, 1434, 1451,
-     1437, 1461, 1471, 1472, 1476, 1469, 1458, 1460, 1480, 1490,
-     1486,  797, 1478,  788,  729, 1488, 1493, 1477, 1502, 1504,
-     1500, 1514, 1507,  718, 1505, 1508, 1520, 1532, 1526,  715,
-     1535, 1533, 1536, 1534,  633,  594, 1528, 1525, 1551, 1552,
-     1539,  588, 1549, 1561, 1564, 1567, 1579, 1584, 1571,  587,
-     1574, 1575, 1577, 1591, 1570,  515, 1593, 1598, 1595, 1608,
-     1602, 1603, 1618, 1622, 1623, 1625, 1620, 1627, 1614, 1615,
-      508, 1619,  504, 1621, 1645, 1635, 1631, 1646, 1655, 1657,
-     1662,  499, 1663, 1665, 1667,  488,  453,  452,  408, 1674,
-
-      407, 1479, 1658, 1676, 1682, 1668, 1678, 1685, 1679, 1695,
-     1696, 1693, 1701, 1707,  398, 1709, 1699, 1703, 1711, 1715,
-      348,  317, 1717,  313,  306, 1723, 1718, 1720,  197, 1729,
-     1737, 1740, 1743,  194, 1727, 1741,  184,  154, 1728, 1746,
-     1749, 1739, 1760, 1758,  144, 1754, 1757, 1769, 1770,  142,
-     1763, 1772, 1780,  140, 1773, 1785, 1788, 1794, 1800, 1783,
-       85,   82, 1801,   65, 1869, 1838, 1842, 1846,   92, 1850,
-     1854,   82, 1856, 1858
+        0,    0,   59,   62,   66,   70,   73,   76, 1884, 1847,
+       80, 1910, 1910,   83,   63,   79,   89,   71,  110,   96,
+       81,  116,  106,  136,  141,  156,  115,  160,  128,   78,
+      143,   87, 1846, 1910, 1910, 1910,  144, 1843, 1876, 1910,
+     1910,  200, 1840, 1910, 1910,  153, 1839,  204,  139,    0,
+      208,    0,    0,  182,  179,  171,  194,  187,  210,  203,
+      213,  214,  211,  222,  224,  202,  220,  205,  228,  240,
+      236,  237,  253,  242,  244,  260,  267,  263,  275,  239,
+      268,  262,  281,  286,  282,  288,  284, 1838,  179, 1833,
+      332, 1862, 1822,  266,  295,  302,  294,  315,  313,  318,
+
+      310,  327,  325,  335,  336,  337,  338,  346,  341,  353,
+      372,  352,  371,  375,  367,  378,  374,  364,  379,  368,
+      363,  398,  394,  397,  403,  360,  400,  401,  413,  402,
+      399, 1820,  419,  428,  427,  429,  420,  439, 1803,  438,
+      432,  448,  444,  453,  454,  470,  447,  462,  455,  464,
+      467,  457,  475,  494,  502, 1772,  481,  477,  504,  499,
+      506,  495,  508,  507,  511,  510,  498,  518,  522,  525,
+      541,  535,  542,  544,  543,  561,  549,  546,  585,  596,
+      548,  574,  573,  579,  597,  582,  586,  611,  604,  606,
+      609,  610,  622,  628,  618,  621,  633,  640,  637,  632,
+
+     1771,  641, 1756,  644,  651,  650, 1753,  652,  657,  655,
+      659,  678,  669,  679,  681,  685,  670,  686,  687,  683,
+      688,  697,  699,  719,  704,  709,  712,  714, 1725,  723,
+      724,  735,  718,  740,  601,  725,  738,  743,  749,  742,
+      770,  766,  757,  767,  773,  761,  764,  780,  783,  781,
+      784,  789,  790,  808,  799,  800,  814,  817,  792,  804,
+      810,  811,  820,  816,  806,  838,  842,  829,  856,  843,
+      839,  840,  854,  850,  863,  861,  866,  868,  872,  880,
+      877,  874,  889,  873,  885,  888, 1723,  896,  899,  898,
+      905, 1712, 1667,  901,  909,  923,  916,  921,  911,  915,
+
+      922,  927,  930,  945,  932,  934, 1565,  947,  957,  961,
+      965,  960,  967,  953,  964,  969,  976,  977,  959,  973,
+     1400,  991, 1369,  972,  979,  993,  995, 1004, 1008,  996,
+     1000, 1018, 1350, 1019, 1010,  999, 1014, 1031, 1022, 1027,
+     1070, 1051, 1048, 1056, 1040, 1060, 1050, 1322, 1057, 1045,
+     1066, 1061, 1064, 1076, 1077, 1071, 1270, 1088, 1101, 1208,
+     1203, 1086, 1090, 1087, 1089, 1098, 1120, 1121, 1111, 1123,
+     1125, 1124, 1126, 1127, 1119, 1130, 1141, 1115, 1147, 1138,
+     1118, 1148, 1143, 1163, 1164, 1171, 1154, 1175, 1159, 1168,
+     1173, 1166, 1169, 1186, 1192, 1201, 1188, 1197, 1174, 1158,
+
+     1209, 1211, 1195, 1214, 1044, 1041, 1219, 1223, 1221, 1205,
+     1216, 1220, 1217, 1227, 1228, 1229, 1242, 1243, 1235, 1021,
+     1005, 1249, 1245, 1246, 1239, 1248, 1255, 1276, 1280, 1259,
+      971, 1278, 1281,  949,  887, 1283, 1285,  848, 1287,  837,
+     1293, 1289, 1274, 1296, 1284, 1288, 1299, 1298, 1304, 1307,
+      818, 1301, 1311, 1313, 1314, 1317, 1319, 1321, 1324, 1327,
+     1338,  807, 1343, 1342, 1348, 1337, 1357, 1351, 1358, 1354,
+     1376, 1378,  758, 1383, 1368,  747, 1375, 1385, 1382,  671,
+     1384, 1374, 1380, 1401, 1410, 1392, 1402,  660, 1404, 1412,
+      624, 1418, 1411, 1413, 1429, 1416, 1426, 1434, 1433, 1435,
+
+     1451, 1448, 1449, 1447, 1444, 1466, 1446, 1458, 1455,  623,
+     1469, 1467, 1471, 1477, 1470, 1481, 1488, 1494, 1472, 1490,
+     1482, 1496, 1500, 1505, 1512, 1493, 1498, 1504, 1509, 1510,
+     1516,  578, 1519,  571,  555, 1528, 1531, 1520, 1522, 1544,
+     1540, 1542, 1546, 1536,  539, 1545, 1548, 1549, 1561, 1562,
+      530, 1563, 1575, 1577, 1572,  528,  520, 1568, 1567, 1587,
+     1591, 1588,  512, 1593, 1589, 1595, 1599, 1602, 1627, 1607,
+      496, 1594, 1612, 1619, 1626, 1634, 1620,  492, 1630, 1631,
+     1643, 1646, 1633, 1636, 1648, 1650, 1651, 1654, 1658, 1668,
+     1655, 1656,  488, 1666,  476, 1660, 1680, 1687, 1669, 1677,
+
+     1681, 1693, 1694, 1690,  409, 1697, 1703, 1699,  407,  406,
+      393,  373, 1709,  369, 1705, 1715, 1717, 1716, 1728,  366,
+     1730, 1727, 1733, 1737, 1738, 1735, 1741, 1745,  362, 1747,
+     1744, 1749, 1743, 1748,  328,  320, 1754,  289,  204, 1774,
+     1752, 1757,  198, 1779, 1780, 1782, 1786,  154, 1769, 1783,
+      151,  144, 1790, 1788, 1794, 1810, 1773, 1796,  142, 1797,
+     1817, 1816, 1802,  140, 1812, 1813, 1814,  102, 1827, 1829,
+     1836, 1834, 1841, 1830,   85,   82, 1844,   65, 1910, 1885,
+     1889, 1893,   92, 1897, 1901,   82, 1903, 1905
     } ;
 
-static yyconst flex_int16_t yy_def[675] =
+static yyconst flex_int16_t yy_def[689] =
     {   0,
-      665,    1,  666,  666,  667,  667,  668,  668,  665,  669,
-      665,  665,  665,  670,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  671,  665,  665,  665,  671,  672,  665,  665,
-      665,  672,  673,  665,  665,  673,  669,  669,  665,  674,
-      670,  674,  670,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  671,  671,  672,  672,
-      665,  673,  673,  669,  669,  669,  669,  669,  669,  669,
-
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
-      669,  669,  669,  669,    0,  665,  665,  665,  665,  665,
-      665,  665,  665,  665
+      679,    1,  680,  680,  681,  681,  682,  682,  679,  683,
+      679,  679,  679,  684,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  685,  679,  679,  679,  685,  686,  679,  679,
+      679,  686,  687,  679,  679,  687,  683,  683,  679,  688,
+      684,  688,  684,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  685,  685,  686,
+      686,  679,  687,  687,  683,  683,  683,  683,  683,  683,
+
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
+      683,  683,  683,  683,  683,  683,  683,  683,    0,  679,
+      679,  679,  679,  679,  679,  679,  679,  679
     } ;
 
-static yyconst flex_int16_t yy_nxt[1931] =
+static yyconst flex_int16_t yy_nxt[1972] =
     {   0,
        10,   11,   12,   12,   13,   14,   10,   10,   10,   10,
        15,   10,   16,   17,   10,   10,   10,   18,   19,   20,
@@ -657,213 +669,218 @@
        24,   10,   25,   26,   27,   28,   29,   10,   30,   10,
        31,   34,   35,   36,   34,   35,   36,   39,   40,   40,
        41,   39,   40,   40,   41,   44,   44,   45,   44,   44,
-       45,   49,   89,   54,   52,   50,   52,   52,   47,   62,
-       47,   47,   47,   85,   37,   55,   56,   37,   48,   58,
+       45,   49,   90,   54,   52,   50,   52,   52,   47,   62,
+       47,   47,   47,   86,   37,   55,   56,   37,   48,   58,
 
        48,   42,   57,   59,   67,   42,   48,   60,   46,   54,
-       66,   46,   61,   48,   48,   62,   48,   48,   53,   85,
-       48,   55,   56,   63,   48,   58,   68,   81,   57,   59,
-       67,   48,   64,   60,   65,   71,   66,  102,   61,   69,
-       49,   48,   79,   70,   50,   48,   72,   87,   87,   63,
-       48,   48,   68,   81,   73,   76,   80,   84,   64,   74,
-       65,   71,   75,   48,   77,   69,   48,   78,   79,   70,
-       82,   48,   72,  104,   86,   48,   48,   48,   48,   48,
-       73,   76,   80,   84,   83,   74,   48,   96,   75,   48,
-       77,  154,   48,   78,   48,   89,   82,   89,   89,  104,
-
-       86,   92,   92,   47,   94,   47,   47,   48,   95,   52,
-       83,   52,   52,   96,   98,   97,  101,   48,   99,   48,
-      111,  100,   48,   48,   48,   48,  103,   48,  114,   48,
-       94,  112,   48,  105,   95,   48,   48,  107,  108,  109,
-       98,   97,  101,   53,   99,   48,  111,  100,   48,  106,
-       48,  113,  103,  115,  114,  116,   48,  112,  118,  105,
-      117,  110,   48,  119,  120,   48,   48,   48,  125,  179,
-       48,  128,   48,   48,  121,  106,   48,  113,  122,  115,
-       48,  116,  123,   48,  118,  124,  117,  110,   48,  119,
-      120,   48,  126,  131,  125,  179,   48,  128,  129,  130,
-
-      121,   87,   87,  132,  122,  135,  127,  133,  123,   48,
-       48,  124,   48,  134,   48,   48,   48,   48,  126,  131,
-       89,  150,   89,   89,  129,  130,   48,   92,   92,  132,
-      136,  135,  127,  133,  137,  138,  143,  139,  142,  134,
-      140,   48,   48,   48,   48,  141,  144,   48,   48,  147,
-       48,   48,   48,   48,  146,  145,  136,  151,   48,  148,
-      137,  138,  143,  139,  142,   48,  140,   48,   48,   48,
-       48,  141,  144,  152,  153,  147,  157,  149,  155,  158,
-      146,  145,  159,   48,   48,  148,   48,  156,  161,  164,
-      160,  162,  163,  169,   48,   48,   48,   48,  165,   48,
-
-      166,   48,  157,  149,   48,  158,   48,   48,  159,   48,
-       48,   48,  167,  156,  161,  164,  160,  162,  163,  168,
-       48,  170,   48,  171,  165,  173,  166,  172,   48,  176,
-       48,  174,   48,   48,   48,  175,  182,  177,  167,  178,
-       48,  181,   48,   48,  180,  168,  184,  170,   48,  171,
-       48,   48,  183,  172,   48,  176,   48,  174,   48,   48,
-       48,  175,  182,  177,  185,  178,   48,  181,  186,  187,
-      180,   48,  184,  188,  189,   48,   48,  191,  183,   48,
-      190,  192,  193,   48,  194,  195,   48,   48,   48,  196,
-      185,  198,  197,   48,   48,  187,   48,   48,  200,  188,
-
-      189,  199,   48,  191,  201,  202,  190,  192,  193,   48,
-      204,  203,  205,   48,   48,  196,   48,   48,  197,  207,
-      208,   48,  209,   48,   48,  206,   48,  199,   48,   48,
-      201,  202,   48,  214,   48,  216,   48,  203,  205,   48,
-       48,   48,  215,   48,   48,  207,  208,  210,  209,  217,
-       48,  206,   48,  220,   48,  211,  212,  221,  222,  214,
-      213,  216,  218,   48,   48,  219,   48,  223,  215,   48,
-      224,  231,   48,  210,  225,  217,  230,  229,   48,  220,
-      226,  211,  212,  221,  233,  227,  213,   48,  218,  232,
-      234,  219,  228,  223,   48,  235,  224,  231,  236,  237,
-
-       48,   48,  238,  229,  241,   48,  226,   48,  239,   48,
-      233,  227,   48,  240,  242,  232,  243,  246,  228,   48,
-      244,  235,   48,   48,   48,   48,   48,  247,  238,   48,
-      241,  245,  248,   48,  239,   48,   48,  249,   48,  240,
-      242,   48,  243,  246,   48,  250,  244,   48,   48,   48,
-      251,  252,   48,  247,  253,  257,  254,  245,  248,  259,
-       48,  260,  255,  249,  256,  258,   48,   48,   48,   48,
-       48,  250,   48,  268,  263,  265,  251,  252,   48,   48,
-      253,  257,  254,   48,   48,  259,   48,  260,  255,  261,
-      256,  262,   48,  267,   48,  264,  266,  269,  272,  268,
-
-      263,  265,   48,  270,   48,   48,   48,   48,  271,  273,
-      275,  274,  282,  276,   48,  261,   48,  262,  277,  267,
-       48,  264,  266,  269,  272,  279,   48,   48,   48,  270,
-       48,  280,   48,  278,  271,  273,  275,  274,   48,  276,
-       48,  284,  287,  281,  277,  283,  288,  285,  286,   48,
-       48,  279,  292,   48,  289,  290,   48,  280,  291,  278,
-       48,   48,   48,   48,   48,  297,  298,  284,   48,  281,
-      294,  283,   48,  285,  286,   48,  293,   48,  292,   48,
-      289,  290,  295,   48,  291,   48,  296,   48,   48,  299,
-      300,  297,  298,  303,  304,  301,  294,   48,  302,  307,
-
-      305,   48,  293,   48,  306,  310,   48,   48,  295,  316,
-      308,   48,  296,  311,   48,  299,  300,   48,   48,  303,
-      304,   48,  309,   48,   48,   48,  305,  314,   48,  315,
-      306,  310,   48,  312,   48,   48,  308,  313,   48,  311,
-       48,  320,  317,  319,   48,  318,   48,   48,  309,  321,
-       48,  322,  323,  314,  327,  315,  324,  326,  325,  312,
-      329,  328,   48,  313,  330,   48,   48,  320,   48,  319,
-       48,   48,   48,   48,  331,  321,   48,  322,  323,   48,
-       48,   48,  324,  326,  325,  332,  329,  328,  333,  334,
-      330,   48,  335,  337,   48,   48,  336,  338,  339,   48,
-
-      331,   48,  340,   48,   48,   48,  341,   48,  343,  342,
-       48,  332,  344,  348,  333,  334,  351,   48,   48,  337,
-      350,   48,  336,  338,  339,  346,   48,   48,  340,  345,
-      347,   48,   48,   48,  343,   48,  349,   48,  344,  348,
-      353,   48,   48,  352,  354,  355,  350,  356,  359,   48,
-      358,  346,   48,   48,  357,  345,  347,   48,   48,   48,
-      360,  363,  349,  361,  362,   48,  353,  364,  366,  352,
-       48,   48,   48,  365,  359,   48,   48,   48,  367,   48,
-      357,  369,   48,  370,   48,  368,  360,  363,   48,  372,
-      375,   48,  373,  364,  366,  374,   48,  371,   48,  365,
-
-       48,   48,   48,  376,  367,   48,   48,  369,  379,  370,
-       48,  368,  377,   48,  381,  372,  375,   48,  373,  378,
-      380,  374,  382,  371,   48,  383,   48,   48,   48,  376,
-      389,  390,   48,   48,  379,  391,  392,  393,  377,  394,
-      381,  396,   48,  398,   48,  378,  380,  395,  382,   48,
-       48,  383,  384,   48,  385,  397,   48,  390,  386,  387,
-      399,   48,  392,   48,  388,  394,   48,  396,   48,   48,
-      402,  400,  403,  395,  401,   48,  404,  406,  384,   48,
-      385,  397,   48,  409,  386,  387,   48,  408,  405,   48,
-      388,   48,  407,   48,   48,   48,  410,  400,  403,   48,
-
-      401,  411,  412,  406,   48,   48,  413,   48,  414,  409,
-      415,   48,  416,  408,  405,  420,  418,   48,  407,  423,
-      419,  417,   48,  422,  421,   48,   48,  424,  412,   48,
-       48,   48,   48,   48,   48,   48,  415,   48,  416,  425,
-      426,  420,  418,   48,  427,   48,  419,  417,  429,  422,
-      421,   48,  430,  424,  432,  431,  434,  439,  433,   48,
-      441,   48,  428,   48,  435,  425,   48,   48,   48,   48,
-       48,  443,  438,   48,  429,  440,  436,   48,   48,  437,
-       48,  431,  434,  439,  433,   48,  441,  442,  428,   48,
-      435,  444,   48,   48,  445,  446,   48,   48,  438,   48,
-
-      447,  440,  436,   48,  449,  437,  448,  451,  450,  452,
-       48,   48,   48,  442,  454,  456,  453,  444,   48,   48,
-      445,  455,   48,   48,   48,   48,   48,   48,  457,   48,
-      449,   48,  448,  451,  450,  452,   48,  459,   48,   48,
-       48,  456,  453,  458,  460,  461,  462,  455,   48,  463,
-      464,   48,   48,   48,  457,  465,  466,   48,   48,  467,
-       48,  468,   48,  459,  469,  471,  470,  472,  473,  458,
-      460,  461,  462,  475,  476,  463,   48,  477,   48,   48,
-      474,   48,  466,   48,   48,   48,   48,  468,   48,   48,
-      479,   48,  470,   48,  473,  478,   48,  480,   48,  475,
-
-      476,  481,  482,  477,   48,  483,  474,  484,   48,   48,
-      485,  486,  488,  487,   48,   48,   48,  489,   48,   48,
-      491,  478,   48,  480,  499,   48,   48,  481,   48,   48,
-      512,  483,  492,  484,  490,  493,  485,  486,  488,  487,
-      494,   48,  495,  489,   48,   48,  491,  496,  497,   48,
-      498,  500,  501,   48,   48,   48,   48,  503,  492,   48,
-      490,  493,  502,   48,   48,  506,  494,  504,  495,   48,
-       48,  510,  507,  496,  497,   48,  498,   48,  501,   48,
-       48,  511,  508,  503,   48,   48,  505,  509,  502,  513,
-       48,  506,   48,  504,   48,   48,   48,  510,  507,  515,
-
-      516,  514,   48,  517,  521,  518,   48,  511,  508,  519,
-      522,   48,  505,  509,   48,  513,  520,  524,   48,  523,
-       48,   48,   48,  525,  528,  515,  516,  514,   48,  517,
-      521,  518,   48,  526,  527,  519,   48,  530,  529,  535,
-      541,   48,  520,   48,  531,  523,   48,  532,  534,   48,
-      528,   48,  537,  533,   48,   48,  538,  536,  540,  526,
-      527,   48,  539,  543,  529,   48,   48,   48,   48,   48,
-      531,  542,   48,  532,   48,   48,  544,   48,  537,  533,
-      545,  546,  538,  536,   48,  617,   48,   48,  539,  543,
-      547,  548,  549,   48,  550,   48,   48,  542,  551,  552,
-
-      553,  554,  544,  555,   48,  557,   48,   48,  556,  560,
-       48,   48,   48,   48,   48,   48,  547,  548,  549,  559,
-      550,   48,  564,   48,  551,   48,  553,  554,   48,  555,
-      558,  557,  561,  563,  556,   48,  562,   48,  565,   48,
-       48,  566,   48,   48,   48,  559,  567,  569,  564,   48,
-      568,  570,  571,  573,  572,   48,  558,  576,  561,  563,
-       48,   48,  562,   48,  565,  574,  575,   48,   48,   48,
-       48,   48,  567,  569,   48,  577,  568,  570,  571,  573,
-      572,  578,  579,  576,   48,  580,   48,   48,  581,  584,
-      582,  574,  575,  583,  585,  587,   48,  586,  589,   48,
-
-       48,  577,   48,  588,  592,   48,   48,  578,  579,   48,
-       48,  580,   48,  590,   48,  584,  591,   48,  593,   48,
-      585,  587,  594,  586,  589,  595,   48,  596,   48,  588,
-       48,  597,  598,   48,  599,  600,  601,   48,   48,  590,
-       48,  605,  591,   48,  593,  604,  602,  603,  594,   48,
-       48,  595,  608,   48,   48,   48,   48,   48,   48,  606,
-       48,  600,   48,  607,  618,  609,   48,  605,  611,  610,
-       48,  604,  602,  603,   48,  613,  615,  621,  608,  614,
-       48,   48,  612,   48,  616,  606,  619,  622,  624,  607,
-       48,  609,   48,   48,  611,  610,  620,   48,   48,  623,
-
-       48,  613,   48,   48,  625,  614,  626,  627,  612,   48,
-      616,   48,  619,   48,   48,  628,  629,   48,   48,  631,
-       48,  630,  620,  632,  634,  623,   48,  637,   48,  638,
-       48,   48,  626,  627,   48,  636,   48,  645,   48,  633,
-      635,  628,   48,  639,   48,  631,   48,  630,   48,  632,
-       48,  640,   48,   48,  641,   48,  643,  642,   48,  648,
-      644,  636,   48,   48,   48,  633,  635,  650,  646,  639,
-      651,  647,   48,  652,   48,   48,   48,  640,   48,  654,
-      641,   48,  643,  642,   48,  648,  644,  653,  649,   48,
-      658,  655,   48,   48,  646,   48,  651,  647,   48,  652,
-
-      656,  657,  659,  661,   48,   48,  660,   48,   48,  662,
-      664,  663,   48,  653,  649,   48,  658,  655,   48,   48,
-       48,   48,   48,   48,   48,   48,  656,  657,  659,   48,
-       48,   93,  660,   91,   90,   48,   48,  663,   33,   33,
-       33,   33,   38,   38,   38,   38,   43,   43,   43,   43,
-       51,   51,   88,   51,   87,   87,   92,   92,   52,   52,
-       48,   52,   93,   91,   90,   88,   48,  665,    9,  665,
-      665,  665,  665,  665,  665,  665,  665,  665,  665,  665,
-      665,  665,  665,  665,  665,  665,  665,  665,  665,  665,
-      665,  665,  665,  665,  665,  665,  665,  665,  665,  665,
-
-      665,  665,  665,  665,  665,  665,  665,  665,  665,  665,
-      665,  665,  665,  665,  665,  665,  665,  665,  665,  665,
-      665,  665,  665,  665,  665,  665,  665,  665,  665,  665
+       66,   46,   61,   48,   48,   62,   48,   48,   53,   86,
+       48,   55,   56,   63,   48,   58,   68,   82,   57,   59,
+       67,   48,   64,   60,   65,   71,   66,   48,   61,   69,
+       49,   48,   85,   70,   50,   48,   72,   88,   88,   63,
+       48,   48,   68,   82,   73,   76,   93,   93,   64,   74,
+       65,   71,   75,   48,   77,   69,   87,   78,   85,   70,
+       79,   48,   72,   83,   80,   48,   48,   48,   48,   48,
+       73,   76,   88,   88,   81,   74,   48,   84,   75,   48,
+       77,   48,   87,   78,   97,   48,   79,   98,   95,   83,
+
+       80,   90,   96,   90,   90,   47,   48,   47,   47,   52,
+       81,   52,   52,   84,   48,  100,   99,   48,  102,  103,
+       97,  101,   48,   98,   95,  105,  114,  104,   96,   48,
+      108,  109,  110,   48,  106,  112,  113,   48,   48,   48,
+       48,  100,   99,   53,  102,   48,   48,  101,   48,   48,
+      107,  105,  114,  104,  111,   48,  115,   48,  116,   48,
+      106,  112,  113,   48,  117,  118,  119,  121,  120,   93,
+       93,   48,   48,  129,   48,   48,  107,   48,  130,   48,
+      111,  122,  115,  126,  116,  123,  131,  127,   48,  124,
+      117,  118,  119,  121,  120,   48,  125,   48,   48,  129,
+
+      133,  128,   48,   48,  130,  132,  136,  122,  134,  126,
+       48,  123,  131,  127,  135,  124,   48,   48,  137,   48,
+      139,   48,  125,   48,   48,  138,  133,  128,  142,   48,
+       48,  132,  136,   90,  134,   90,   90,   48,  140,  143,
+      135,  141,  144,  145,  137,   48,  139,  152,   48,  146,
+       48,  138,  149,   48,  142,   48,  150,  148,  147,  153,
+       48,  156,   48,   48,  140,  143,  171,  141,  144,  145,
+       48,   48,   48,   48,  151,  146,   48,  157,  149,  154,
+      155,   48,  150,  148,  147,  160,  158,   48,   48,  159,
+      162,  161,  163,  166,  164,   48,  165,   48,   48,   48,
+
+      151,   48,   48,   48,   48,  176,   48,   48,   48,   48,
+       48,  160,  158,   48,   48,  159,  162,  161,  163,  166,
+      164,  167,  165,  168,  169,  170,  172,  174,   48,   48,
+      175,  173,   48,   48,   48,   48,   48,   48,   48,  178,
+      179,   48,   48,  180,   48,  177,  181,  167,   48,  168,
+      169,  170,  172,  174,   48,   48,  175,  173,  184,  185,
+      186,  183,   48,   48,   48,  178,  179,   48,  187,  180,
+      182,  177,  181,   48,   48,  190,  189,  193,  188,   48,
+      195,  192,   48,   48,  184,  185,  186,  183,   48,   48,
+       48,  191,   48,  194,  187,  200,  182,   48,  196,   48,
+
+      197,  190,   48,  193,  188,   48,  195,  192,  198,  199,
+       48,   48,   48,  201,  202,  203,   48,  191,  204,  194,
+      207,  200,  205,   48,  196,  206,  209,   48,  208,   48,
+       48,   48,  210,   48,   48,  199,  211,   48,  212,   48,
+      202,   48,   48,   48,  204,   48,   48,   48,  205,  217,
+      219,  206,  209,   48,  208,   48,  218,   48,  210,  213,
+       48,  220,  211,   48,  212,   48,  233,  214,  215,  225,
+       48,  224,  216,  221,   48,  217,   48,   48,   48,   48,
+      234,   48,  218,   48,   48,  213,  222,  220,  238,  223,
+       48,  226,  233,  214,  215,  225,   48,  224,  216,  221,
+
+      227,  235,  236,  228,  239,  229,   48,  237,   48,   48,
+      287,  230,  222,   48,   48,  223,  231,   48,  240,  241,
+       48,   48,  244,  232,  243,  245,  227,  235,  236,  228,
+      239,   48,   48,  237,  242,  246,   48,  230,  247,   48,
+      248,   48,  231,  249,   48,   48,   48,  250,  244,  232,
+      243,  245,  253,   48,  251,  252,   48,   48,   48,   48,
+      242,  246,  255,   48,  247,  258,  248,   48,   48,  249,
+      257,  259,   48,  250,  254,   48,   48,  256,  253,   48,
+      251,  252,  260,  261,  262,   48,   48,   48,  255,  264,
+       48,  258,   48,  263,   48,   48,  257,  259,  268,  265,
+
+      254,  266,  267,  256,   48,   48,   48,  270,  260,  261,
+      271,  272,  269,   48,   48,  264,   48,  274,   48,  263,
+       48,   48,   48,   48,  268,  265,  273,  266,  267,  275,
+      278,  276,   48,  270,   48,  277,  271,  272,  269,   48,
+      279,  280,  281,  274,   48,  288,  284,   48,  282,   48,
+      285,  292,  273,   48,   48,  275,  278,  276,   48,   48,
+       48,  277,  286,  283,  290,  289,  279,  280,  281,  291,
+       48,  288,  284,   48,  282,   48,  285,   48,   48,  293,
+      294,  296,   48,  297,   48,  295,  299,  298,  286,  283,
+      290,  289,   48,   48,  302,  291,   48,  303,  312,   48,
+
+      300,   48,   48,  301,  305,   48,  294,  296,   48,  297,
+      304,  295,  299,  298,  306,   48,   48,  307,   48,   48,
+      302,  308,  309,  303,   48,   48,  300,   48,  310,  301,
+      305,  311,  313,  314,   48,   48,  304,  315,  321,   48,
+      318,   48,   48,   48,  317,   48,   48,  308,  309,   48,
+      316,   48,   48,   48,  310,   48,  319,  311,  313,  314,
+      320,  324,  322,  315,   48,  323,  318,  325,  327,  326,
+      317,  328,   48,   48,   48,   48,  316,   48,   48,  330,
+      331,  333,  319,   48,  329,   48,  320,  324,  332,   48,
+      338,   48,  336,  325,  327,  326,   48,  328,   48,  337,
+
+      334,   48,  341,   48,  335,  330,  331,   48,   48,   48,
+      329,  340,   48,  342,  332,   48,  338,  339,  336,  344,
+       48,  343,   48,   48,   48,  337,  334,  345,  349,  347,
+      335,   48,  348,   48,   48,  350,   48,  340,  351,  342,
+       48,  357,  346,  339,   48,  344,   48,  343,  352,  354,
+       48,   48,  355,  345,  349,  353,   48,   48,   48,  356,
+      358,  350,   48,  359,  351,   48,  360,   48,  346,   48,
+      361,  362,  363,  364,  352,  354,  367,  368,  355,  365,
+       48,  353,   48,  371,   48,  356,  358,  366,   48,  359,
+      369,  370,   48,  375,   48,   48,   48,  376,  363,   48,
+
+       48,  372,   48,  373,   48,  365,   48,   48,   48,  371,
+      374,   48,   48,  366,   48,  377,  369,  370,  379,  375,
+      382,  378,  380,  376,  381,  386,   48,  372,   48,  373,
+       48,   48,  383,  384,   48,   48,  374,  389,  385,   48,
+       48,  377,  387,   48,  379,   48,  382,  378,  380,   48,
+      381,  386,  388,   48,   48,  390,   48,   48,  383,  384,
+      396,  397,   48,  389,  385,  398,   48,  399,  387,  400,
+      405,  402,  403,  406,  401,   48,   48,  409,  388,   48,
+       48,  390,  391,   48,  392,   48,   48,  397,  393,  394,
+      404,   48,   48,  399,  395,   48,   48,  402,  403,   48,
+
+      401,   48,  410,  407,  408,   48,   48,  411,  391,  416,
+      392,   48,   48,  413,  393,  394,  404,  415,  412,  414,
+      395,   48,   48,   48,   48,   48,  417,  418,  410,  407,
+      408,  419,  420,   48,  421,  416,   48,  426,  422,  413,
+      423,  425,  427,  415,  412,  414,   48,  431,  429,  424,
+       48,  432,  434,   48,   48,   48,   48,  419,   48,   48,
+       48,   48,   48,  426,  422,   48,  423,  425,  427,  428,
+      430,  433,  435,   48,  429,  424,   48,  432,   48,  437,
+      438,  439,   48,   48,  440,  441,  442,  443,  444,   48,
+      436,  445,  449,   48,   48,  428,  430,  433,   48,   48,
+
+      446,   48,  448,   48,   48,  437,   48,  439,   48,   48,
+       48,  441,  442,  443,  444,  447,  436,  445,  449,  450,
+      451,   48,  452,   48,  453,  454,  446,   48,  448,  455,
+       48,  456,   48,  457,  458,  459,   48,  462,   48,  460,
+       48,  447,  461,   48,   48,  450,   48,  463,  452,   48,
+      453,   48,   48,  466,   48,   48,   48,  456,   48,  457,
+      458,  459,   48,   48,   48,  460,  464,  465,  461,  467,
+       48,  468,  470,  463,   48,  469,  471,   48,   48,  466,
+       48,   48,  472,   48,   48,  473,  474,  476,  475,  478,
+       48,  477,  464,  465,   48,  467,  480,  468,  470,  481,
+
+      483,  469,  471,  479,  482,   48,  484,  488,  472,   48,
+      491,   48,  485,   48,  475,   48,   48,  477,   48,   48,
+       48,  486,   48,   48,   48,  487,  483,  489,   48,  479,
+      482,   48,  484,   48,   48,  490,   48,  492,  485,   48,
+      493,  494,   48,  497,  495,  496,   48,  486,   48,   48,
+      498,  487,   48,  489,   48,  499,   48,   48,  504,   48,
+      508,  490,   48,  492,  500,  501,  493,  494,  502,  497,
+      495,  496,   48,   48,  503,  505,  498,   48,   48,  506,
+      507,  499,  509,   48,  504,   48,   48,  510,  513,   48,
+      500,  501,   48,   48,  502,  511,  512,  514,  522,  517,
+
+      503,  505,  516,   48,   48,  506,  507,  518,  519,   48,
+       48,   48,  520,   48,  513,   48,  515,   48,   48,   48,
+       48,  511,  512,  514,  521,  517,  524,   48,  516,  527,
+      523,  528,  526,  518,  519,   48,   48,   48,  520,   48,
+      525,  529,  515,  532,  534,   48,   48,   48,   48,  530,
+      521,   48,  524,   48,  531,  527,  523,  528,  526,  533,
+      535,   48,  536,  537,   48,  538,  525,  529,   48,   48,
+       48,  539,  540,  542,  541,  530,  545,  546,  552,   48,
+      531,   48,   48,   48,   48,  533,   48,  543,  536,  537,
+       48,  538,  544,   48,  547,  549,  548,  539,  550,  542,
+
+      541,   48,   48,  551,   48,   48,   48,   48,  554,  556,
+      553,  555,   48,  543,  557,  559,   48,   48,  544,  563,
+      547,  549,  548,   48,  550,   48,  558,  562,   48,   48,
+      564,   48,  560,   48,  554,   48,  553,  555,  561,   48,
+       48,  559,  565,  566,   48,   48,  567,   48,  568,  571,
+      569,   48,  558,  562,   48,   48,  564,   48,  560,  570,
+      572,  573,  576,   48,  561,  574,   48,  577,  565,  566,
+      578,   48,  567,  575,  568,   48,  569,   48,  580,   48,
+       48,   48,  579,   48,   48,  570,  572,  573,  576,  581,
+      583,  574,  582,  577,  584,  585,   48,   48,   48,  575,
+
+       48,  586,   48,   48,  580,  587,  588,   48,  579,  590,
+       48,  593,   48,  591,  597,  581,  583,  592,  582,  589,
+      584,  585,   48,   48,   48,  596,   48,  586,   48,   48,
+       48,  587,  588,  594,   48,  590,  595,   48,  598,  591,
+      597,  599,   48,  592,  600,  589,  601,   48,  602,  604,
+      603,  596,  605,  607,   48,   48,  606,  609,  608,  610,
+      611,   48,   48,  612,  598,   48,   48,  599,   48,   48,
+      600,   48,  601,  613,  602,  604,  603,  614,   48,  607,
+      618,   48,  606,   48,  608,   48,   48,  615,  616,   48,
+       48,   48,  617,   48,  619,   48,  620,  621,  622,  613,
+
+      623,   48,   48,   48,   48,  625,  618,  624,  629,  627,
+      626,  631,   48,  615,  616,   48,   48,  628,  617,  630,
+      619,  632,   48,  621,  622,   48,  623,  633,   48,   48,
+      634,  625,   48,  624,   48,  627,  626,  635,   48,  636,
+       48,  637,  638,  628,   48,  630,  639,   48,  640,  641,
+       48,   48,   48,  633,  643,  642,  634,  648,   48,  644,
+       48,  651,   48,   48,  645,   48,  652,  637,   48,  646,
+       48,  647,   48,   48,  640,  641,   48,  649,   48,   48,
+       48,  642,   48,   48,   48,  644,  650,   48,   48,   48,
+      645,   48,   48,  653,  654,  646,  655,  647,  657,  659,
+
+      656,  663,  658,  649,   48,  664,   48,   48,   48,   48,
+      660,  668,  650,  665,   48,   48,  661,   48,   48,  653,
+      654,   48,  655,   48,  657,   48,  656,  663,  658,   48,
+      662,   48,   48,  666,  667,  671,  660,   48,   48,  665,
+      669,  670,  661,  675,  672,   48,  673,   48,   48,   48,
+      676,   48,   48,  678,  674,   48,  662,   94,  677,  666,
+      667,  671,   48,   92,   48,   48,  669,  670,   91,   48,
+      672,   48,  673,   89,   48,   94,   48,   92,   91,   48,
+      674,   89,   48,  679,  677,   33,   33,   33,   33,   38,
+       38,   38,   38,   43,   43,   43,   43,   51,   51,  679,
+
+       51,   88,   88,   93,   93,   52,   52,  679,   52,    9,
+      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
+      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
+      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
+      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
+      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
+      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
+      679
     } ;
 
-static yyconst flex_int16_t yy_chk[1931] =
+static yyconst flex_int16_t yy_chk[1972] =
     {   0,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
@@ -873,210 +890,215 @@
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    3,    3,    3,    4,    4,    4,    5,    5,    5,
         5,    6,    6,    6,    6,    7,    7,    7,    8,    8,
-        8,   11,  672,   15,   14,   11,   14,   14,   32,   18,
-       32,   32,  669,   30,    3,   15,   16,    4,   15,   17,
+        8,   11,  686,   15,   14,   11,   14,   14,   32,   18,
+       32,   32,  683,   30,    3,   15,   16,    4,   15,   17,
 
-      664,    5,   16,   17,   21,    6,   18,   17,    7,   15,
-       20,    8,   17,   30,   16,   18,   21,  662,   14,   30,
-      661,   15,   16,   19,   17,   17,   22,   27,   16,   17,
-       21,   20,   19,   17,   19,   23,   20,   61,   17,   22,
-       49,   23,   26,   22,   49,   19,   24,   37,   37,   19,
-       27,   22,   22,   27,   24,   25,   26,   29,   19,   24,
-       19,   23,   24,   26,   25,   22,   61,   25,   26,   22,
-       28,   24,   24,   63,   31,  654,   25,  650,   29,  645,
-       24,   25,   26,   29,   28,   24,   31,   55,   24,  638,
-       25,  111,   28,   25,   63,   42,   28,   42,   42,   63,
-
-       31,   46,   46,   48,   54,   48,   48,   55,   54,   51,
-       28,   51,   51,   55,   57,   56,   60,  111,   58,  637,
-       66,   59,   66,   54,   56,   58,   62,   57,   69,  634,
-       54,   67,  629,   64,   54,   69,   60,   65,   65,   65,
-       57,   56,   60,   51,   58,   59,   66,   59,   62,   64,
-       67,   68,   62,   70,   69,   71,   64,   67,   73,   64,
-       72,   65,   71,   74,   75,   68,   65,   72,   78,  136,
-       70,   80,   74,  136,   76,   64,   75,   68,   76,   70,
-       73,   71,   76,   78,   73,   77,   72,   65,   76,   74,
-       75,   77,   79,   83,   78,  136,   80,   80,   81,   82,
-
-       76,   88,   88,   84,   76,   94,   79,   85,   76,   81,
-       82,   77,   84,   86,   83,   79,   85,   94,   79,   83,
-       90,  108,   90,   90,   81,   82,   86,   93,   93,   84,
-       95,   94,   79,   85,   96,   97,  102,   98,  101,   86,
-       99,  625,   95,   96,   98,  100,  103,   97,  624,  106,
-      108,  100,  622,  102,  105,  104,   95,  109,  101,  107,
-       96,   97,  102,   98,  101,   99,   99,  103,  104,  105,
-      106,  100,  103,  110,  110,  106,  113,  107,  112,  114,
-      105,  104,  115,  621,  107,  107,  109,  112,  117,  120,
-      116,  118,  119,  125,  120,  117,  114,  113,  121,  119,
-
-      122,  110,  113,  107,  115,  114,  122,  112,  115,  116,
-      121,  118,  123,  112,  117,  120,  116,  118,  119,  124,
-      123,  126,  125,  127,  121,  129,  122,  128,  127,  133,
-      126,  131,  124,  615,  128,  132,  140,  134,  123,  135,
-      131,  139,  601,  599,  138,  124,  142,  126,  135,  127,
-      139,  133,  141,  128,  129,  133,  138,  131,  134,  132,
-      140,  132,  140,  134,  143,  135,  142,  139,  144,  145,
-      138,  141,  142,  146,  147,  143,  145,  149,  141,  146,
-      148,  150,  151,  147,  152,  153,  149,  598,  597,  155,
-      143,  157,  156,  150,  151,  145,  155,  144,  159,  146,
-
-      147,  158,  148,  149,  160,  161,  148,  150,  151,  156,
-      163,  162,  164,  152,  153,  155,  160,  157,  156,  166,
-      167,  158,  168,  596,  159,  165,  161,  158,  162,  164,
-      160,  161,  165,  170,  592,  172,  163,  162,  164,  583,
-      166,  167,  171,  581,  168,  166,  167,  169,  168,  173,
-      566,  165,  172,  174,  170,  169,  169,  175,  176,  170,
-      169,  172,  173,  171,  169,  173,  174,  176,  171,  175,
-      176,  180,  173,  169,  177,  173,  179,  178,  180,  174,
-      177,  169,  169,  175,  182,  177,  169,  176,  173,  181,
-      183,  173,  177,  176,  178,  184,  176,  180,  185,  185,
-
-      177,  181,  186,  178,  189,  179,  177,  186,  187,  182,
-      182,  177,  184,  188,  190,  181,  191,  194,  177,  183,
-      192,  184,  560,  552,  189,  187,  185,  195,  186,  546,
-      189,  193,  196,  192,  187,  188,  190,  197,  194,  188,
-      190,  191,  191,  194,  193,  199,  192,  199,  195,  196,
-      201,  202,  197,  195,  203,  208,  205,  193,  196,  210,
-      202,  211,  206,  197,  207,  209,  208,  201,  545,  203,
-      210,  199,  207,  218,  213,  215,  201,  202,  205,  218,
-      203,  208,  205,  206,  215,  210,  211,  211,  206,  212,
-      207,  212,  213,  217,  209,  214,  216,  219,  222,  218,
-
-      213,  215,  214,  220,  216,  217,  212,  222,  221,  223,
-      226,  224,  231,  227,  219,  212,  221,  212,  228,  217,
-      224,  214,  216,  219,  222,  229,  223,  226,  220,  220,
-      227,  230,  229,  228,  221,  223,  226,  224,  231,  227,
-      228,  233,  236,  230,  228,  232,  237,  234,  235,  233,
-      540,  229,  241,  534,  238,  239,  230,  230,  240,  228,
-      232,  234,  239,  235,  525,  246,  247,  233,  236,  230,
-      243,  232,  237,  234,  235,  238,  242,  241,  241,  240,
-      238,  239,  244,  243,  240,  242,  245,  246,  247,  248,
-      249,  246,  247,  251,  252,  250,  243,  244,  250,  255,
-
-      253,  245,  242,  248,  254,  258,  251,  252,  244,  264,
-      256,  249,  245,  259,  258,  248,  249,  256,  259,  251,
-      252,  253,  257,  524,  250,  254,  253,  262,  255,  263,
-      254,  258,  522,  260,  257,  264,  256,  261,  261,  259,
-      260,  267,  265,  266,  262,  265,  263,  267,  257,  268,
-      266,  269,  270,  262,  274,  263,  271,  273,  272,  260,
-      276,  275,  500,  261,  277,  269,  270,  267,  276,  266,
-      268,  265,  273,  271,  278,  268,  275,  269,  270,  272,
-      274,  277,  271,  273,  272,  279,  276,  275,  280,  281,
-      277,  280,  283,  285,  482,  479,  284,  286,  289,  278,
-
-      278,  281,  290,  279,  290,  285,  291,  289,  292,  291,
-      471,  279,  293,  297,  280,  281,  300,  284,  286,  285,
-      299,  283,  284,  286,  289,  295,  297,  295,  290,  294,
-      296,  292,  296,  293,  292,  291,  298,  294,  293,  297,
-      303,  299,  300,  301,  304,  305,  299,  306,  309,  298,
-      308,  295,  301,  467,  307,  294,  296,  309,  464,  303,
-      310,  312,  298,  311,  311,  454,  303,  313,  315,  301,
-      304,  305,  310,  314,  309,  315,  306,  307,  317,  308,
-      307,  319,  312,  320,  314,  317,  310,  312,  313,  322,
-      325,  311,  323,  313,  315,  324,  320,  321,  319,  314,
-
-      443,  317,  324,  326,  317,  325,  321,  319,  330,  320,
-      322,  317,  328,  323,  332,  322,  325,  330,  323,  329,
-      331,  324,  333,  321,  326,  334,  329,  331,  332,  326,
-      336,  337,  334,  328,  330,  338,  339,  340,  328,  341,
-      332,  344,  333,  346,  339,  329,  331,  343,  333,  344,
-      341,  334,  335,  337,  335,  345,  336,  337,  335,  335,
-      347,  338,  339,  340,  335,  341,  345,  344,  343,  346,
-      350,  348,  352,  343,  349,  335,  353,  357,  335,  348,
-      335,  345,  349,  360,  335,  335,  347,  359,  356,  357,
-      335,  356,  358,  352,  359,  358,  361,  348,  352,  350,
-
-      349,  362,  363,  357,  432,  353,  364,  360,  365,  360,
-      366,  430,  367,  359,  356,  370,  368,  363,  358,  373,
-      369,  367,  370,  372,  371,  361,  371,  374,  363,  374,
-      362,  366,  364,  367,  365,  372,  366,  368,  367,  375,
-      376,  370,  368,  369,  377,  373,  369,  367,  378,  372,
-      371,  375,  379,  374,  381,  380,  383,  388,  382,  427,
-      392,  426,  377,  380,  384,  375,  376,  382,  378,  388,
-      377,  395,  387,  383,  378,  390,  385,  392,  379,  386,
-      381,  380,  383,  388,  382,  384,  392,  394,  377,  385,
-      384,  396,  386,  387,  397,  400,  390,  395,  387,  396,
-
-      401,  390,  385,  423,  403,  386,  402,  405,  404,  406,
-      414,  403,  394,  394,  408,  410,  407,  396,  413,  397,
-      397,  409,  406,  399,  400,  404,  410,  405,  411,  401,
-      403,  402,  402,  405,  404,  406,  407,  415,  409,  411,
-      408,  410,  407,  412,  416,  417,  418,  409,  418,  419,
-      420,  417,  415,  416,  411,  421,  422,  419,  398,  424,
-      412,  425,  422,  415,  428,  431,  429,  433,  434,  412,
-      416,  417,  418,  436,  437,  419,  420,  438,  393,  438,
-      435,  437,  422,  429,  421,  424,  425,  425,  434,  435,
-      440,  431,  429,  428,  434,  439,  433,  441,  436,  436,
-
-      437,  442,  444,  438,  439,  445,  435,  446,  442,  441,
-      447,  448,  450,  449,  445,  446,  440,  451,  447,  448,
-      453,  439,  449,  441,  462,  450,  451,  442,  444,  453,
-      477,  445,  455,  446,  452,  456,  447,  448,  450,  449,
-      457,  452,  458,  451,  456,  455,  453,  459,  460,  457,
-      461,  463,  465,  462,  391,  460,  458,  468,  455,  477,
-      452,  456,  466,  461,  459,  470,  457,  469,  458,  466,
-      389,  475,  472,  459,  460,  465,  461,  463,  465,  468,
-      470,  476,  473,  468,  473,  355,  469,  474,  466,  478,
-      469,  470,  472,  469,  474,  475,  478,  475,  472,  481,
-
-      483,  480,  476,  484,  488,  485,  481,  476,  473,  486,
-      489,  488,  469,  474,  480,  478,  487,  491,  487,  490,
-      484,  483,  485,  492,  495,  481,  483,  480,  490,  484,
-      488,  485,  486,  493,  494,  486,  489,  497,  496,  503,
-      509,  495,  487,  491,  498,  490,  496,  499,  502,  492,
-      495,  498,  505,  501,  493,  494,  506,  504,  508,  493,
-      494,  505,  507,  511,  496,  501,  497,  499,  503,  509,
-      498,  510,  511,  499,  502,  504,  512,  506,  505,  501,
-      513,  514,  506,  504,  508,  602,  510,  507,  507,  511,
-      515,  516,  517,  517,  518,  518,  512,  510,  519,  520,
-
-      521,  523,  512,  526,  516,  528,  513,  514,  527,  531,
-      354,  515,  528,  523,  602,  519,  515,  516,  517,  530,
-      518,  521,  536,  526,  519,  520,  521,  523,  527,  526,
-      529,  528,  532,  535,  527,  531,  533,  529,  537,  530,
-      535,  538,  533,  536,  351,  530,  539,  542,  536,  532,
-      541,  543,  544,  548,  547,  537,  529,  551,  532,  535,
-      548,  539,  533,  547,  537,  549,  550,  538,  542,  544,
-      541,  543,  539,  542,  551,  553,  541,  543,  544,  548,
-      547,  554,  555,  551,  553,  556,  549,  550,  557,  559,
-      558,  549,  550,  558,  561,  563,  554,  562,  565,  555,
-
-      342,  553,  556,  564,  569,  565,  559,  554,  555,  561,
-      562,  556,  563,  567,  557,  559,  568,  327,  570,  558,
-      561,  563,  571,  562,  565,  572,  564,  573,  567,  564,
-      569,  574,  575,  568,  576,  577,  578,  571,  572,  567,
-      318,  584,  568,  570,  570,  582,  579,  580,  571,  579,
-      580,  572,  587,  573,  582,  577,  584,  574,  575,  585,
-      576,  577,  578,  586,  603,  588,  587,  584,  590,  589,
-      586,  582,  579,  580,  316,  593,  595,  606,  587,  594,
-      585,  588,  591,  302,  600,  585,  604,  607,  609,  586,
-      589,  588,  590,  603,  590,  589,  605,  591,  593,  608,
-
-      594,  593,  595,  606,  610,  594,  611,  612,  591,  600,
-      600,  604,  604,  607,  609,  613,  614,  605,  288,  617,
-      608,  616,  605,  618,  620,  608,  287,  627,  612,  628,
-      610,  611,  611,  612,  617,  626,  613,  639,  618,  619,
-      623,  613,  614,  630,  616,  617,  619,  616,  282,  618,
-      620,  631,  623,  627,  632,  628,  635,  633,  626,  642,
-      636,  626,  635,  639,  630,  619,  623,  644,  640,  630,
-      646,  641,  631,  647,  642,  632,  636,  631,  633,  649,
-      632,  640,  635,  633,  641,  642,  636,  648,  643,  646,
-      655,  651,  647,  644,  640,  643,  646,  641,  651,  647,
-
-      652,  653,  656,  658,  648,  649,  657,  652,  655,  659,
-      663,  660,  225,  648,  643,  653,  655,  651,  660,  204,
-      656,  200,  198,  657,  154,  137,  652,  653,  656,  658,
-      130,   92,  657,   91,   89,  659,  663,  660,  666,  666,
-      666,  666,  667,  667,  667,  667,  668,  668,  668,  668,
-      670,  670,   87,  670,  671,  671,  673,  673,  674,  674,
-       47,  674,   43,   39,   38,   33,   10,    9,  665,  665,
-      665,  665,  665,  665,  665,  665,  665,  665,  665,  665,
-      665,  665,  665,  665,  665,  665,  665,  665,  665,  665,
-      665,  665,  665,  665,  665,  665,  665,  665,  665,  665,
-
-      665,  665,  665,  665,  665,  665,  665,  665,  665,  665,
-      665,  665,  665,  665,  665,  665,  665,  665,  665,  665,
-      665,  665,  665,  665,  665,  665,  665,  665,  665,  665
+      678,    5,   16,   17,   21,    6,   18,   17,    7,   15,
+       20,    8,   17,   30,   16,   18,   21,  676,   14,   30,
+      675,   15,   16,   19,   17,   17,   22,   27,   16,   17,
+       21,   20,   19,   17,   19,   23,   20,  668,   17,   22,
+       49,   23,   29,   22,   49,   19,   24,   37,   37,   19,
+       27,   22,   22,   27,   24,   25,   46,   46,   19,   24,
+       19,   23,   24,   29,   25,   22,   31,   25,   29,   22,
+       26,   24,   24,   28,   26,  664,   25,  659,   31,  652,
+       24,   25,   89,   89,   26,   24,  651,   28,   24,  648,
+       25,   26,   31,   25,   55,   28,   26,   56,   54,   28,
+
+       26,   42,   54,   42,   42,   48,   56,   48,   48,   51,
+       26,   51,   51,   28,   55,   58,   57,   54,   60,   61,
+       55,   59,   58,   56,   54,   63,   68,   62,   54,   57,
+       65,   65,   65,  643,   64,   66,   67,   66,   60,  639,
+       68,   58,   57,   51,   60,   59,   63,   59,   61,   62,
+       64,   63,   68,   62,   65,   67,   69,   64,   70,   65,
+       64,   66,   67,   69,   71,   72,   73,   75,   74,   94,
+       94,   71,   72,   80,   80,   70,   64,   74,   81,   75,
+       65,   76,   69,   78,   70,   76,   82,   79,   73,   76,
+       71,   72,   73,   75,   74,   76,   77,   82,   78,   80,
+
+       84,   79,   77,   81,   81,   83,   87,   76,   85,   78,
+       79,   76,   82,   79,   86,   76,   83,   85,   95,   87,
+       97,   84,   77,   86,  638,   96,   84,   79,  100,   97,
+       95,   83,   87,   91,   85,   91,   91,   96,   98,  101,
+       86,   99,  102,  103,   95,  101,   97,  109,   99,  104,
+       98,   96,  107,  100,  100,  636,  108,  106,  105,  110,
+      103,  112,  102,  635,   98,  101,  126,   99,  102,  103,
+      104,  105,  106,  107,  108,  104,  109,  113,  107,  111,
+      111,  108,  108,  106,  105,  115,  113,  112,  110,  114,
+      117,  116,  118,  121,  119,  126,  120,  629,  121,  118,
+
+      108,  620,  115,  120,  614,  131,  113,  111,  612,  117,
+      114,  115,  113,  116,  119,  114,  117,  116,  118,  121,
+      119,  122,  120,  123,  124,  125,  127,  129,  611,  123,
+      130,  128,  124,  122,  131,  127,  128,  130,  125,  134,
+      135,  610,  609,  136,  605,  133,  137,  122,  129,  123,
+      124,  125,  127,  129,  133,  137,  130,  128,  141,  142,
+      143,  140,  135,  134,  136,  134,  135,  141,  144,  136,
+      138,  133,  137,  140,  138,  147,  146,  150,  145,  143,
+      152,  149,  147,  142,  141,  142,  143,  140,  144,  145,
+      149,  148,  152,  151,  144,  158,  138,  148,  153,  150,
+
+      154,  147,  151,  150,  145,  146,  152,  149,  155,  157,
+      153,  595,  158,  159,  160,  161,  157,  148,  162,  151,
+      165,  158,  163,  593,  153,  164,  167,  578,  166,  154,
+      162,  571,  168,  167,  160,  157,  169,  155,  170,  159,
+      160,  161,  164,  163,  162,  166,  165,  563,  163,  172,
+      174,  164,  167,  168,  166,  557,  173,  169,  168,  171,
+      170,  175,  169,  556,  170,  551,  181,  171,  171,  178,
+      172,  177,  171,  176,  545,  172,  171,  173,  175,  174,
+      182,  178,  173,  181,  177,  171,  176,  175,  186,  176,
+      535,  179,  181,  171,  171,  178,  176,  177,  171,  176,
+
+      179,  183,  184,  179,  187,  180,  534,  185,  183,  182,
+      235,  180,  176,  532,  184,  176,  180,  186,  188,  188,
+      179,  187,  191,  180,  190,  192,  179,  183,  184,  179,
+      187,  180,  185,  185,  189,  193,  235,  180,  194,  189,
+      195,  190,  180,  196,  191,  192,  188,  197,  191,  180,
+      190,  192,  200,  195,  198,  199,  196,  193,  510,  491,
+      189,  193,  204,  194,  194,  208,  195,  200,  197,  196,
+      206,  209,  199,  197,  202,  198,  202,  205,  200,  204,
+      198,  199,  210,  211,  212,  206,  205,  208,  204,  214,
+      210,  208,  209,  213,  211,  488,  206,  209,  217,  215,
+
+      202,  215,  216,  205,  213,  217,  480,  219,  210,  211,
+      220,  221,  218,  212,  214,  214,  215,  223,  220,  213,
+      216,  218,  219,  221,  217,  215,  222,  215,  216,  224,
+      227,  225,  222,  219,  223,  226,  220,  221,  218,  225,
+      228,  230,  231,  223,  226,  236,  233,  227,  232,  228,
+      234,  240,  222,  233,  224,  224,  227,  225,  230,  231,
+      236,  226,  234,  232,  238,  237,  228,  230,  231,  239,
+      232,  236,  233,  237,  232,  234,  234,  240,  238,  241,
+      242,  244,  476,  245,  239,  243,  247,  246,  234,  232,
+      238,  237,  243,  473,  250,  239,  246,  251,  259,  247,
+
+      248,  242,  244,  249,  253,  241,  242,  244,  245,  245,
+      252,  243,  247,  246,  254,  248,  250,  254,  249,  251,
+      250,  255,  256,  251,  252,  253,  248,  259,  257,  249,
+      253,  258,  260,  261,  255,  256,  252,  262,  268,  260,
+      265,  265,  462,  254,  264,  261,  262,  255,  256,  257,
+      263,  264,  258,  451,  257,  263,  266,  258,  260,  261,
+      267,  270,  269,  262,  268,  269,  265,  271,  273,  272,
+      264,  274,  440,  266,  271,  272,  263,  267,  270,  276,
+      277,  279,  266,  438,  275,  274,  267,  270,  278,  273,
+      284,  269,  282,  271,  273,  272,  276,  274,  275,  283,
+
+      280,  277,  288,  278,  281,  276,  277,  279,  284,  282,
+      275,  286,  281,  289,  278,  280,  284,  285,  282,  291,
+      285,  290,  435,  286,  283,  283,  280,  294,  297,  296,
+      281,  288,  296,  290,  289,  298,  294,  286,  299,  289,
+      291,  305,  295,  285,  295,  291,  299,  290,  300,  302,
+      300,  297,  303,  294,  297,  301,  298,  301,  296,  304,
+      306,  298,  302,  308,  299,  303,  309,  305,  295,  306,
+      310,  311,  312,  313,  300,  302,  316,  316,  303,  314,
+      304,  301,  308,  319,  434,  304,  306,  315,  314,  308,
+      317,  318,  309,  324,  319,  312,  310,  325,  312,  315,
+
+      311,  320,  313,  322,  316,  314,  431,  324,  320,  319,
+      322,  317,  318,  315,  325,  326,  317,  318,  328,  324,
+      331,  327,  329,  325,  330,  336,  322,  320,  326,  322,
+      327,  330,  332,  334,  336,  331,  322,  339,  335,  328,
+      421,  326,  337,  329,  328,  335,  331,  327,  329,  337,
+      330,  336,  338,  332,  334,  340,  420,  339,  332,  334,
+      342,  343,  340,  339,  335,  344,  338,  345,  337,  346,
+      352,  349,  350,  353,  347,  345,  406,  356,  338,  405,
+      350,  340,  341,  343,  341,  347,  342,  343,  341,  341,
+      351,  344,  349,  345,  341,  346,  352,  349,  350,  353,
+
+      347,  351,  358,  354,  355,  341,  356,  359,  341,  366,
+      341,  354,  355,  363,  341,  341,  351,  365,  362,  364,
+      341,  362,  364,  358,  365,  363,  367,  368,  358,  354,
+      355,  369,  370,  366,  371,  366,  359,  375,  372,  363,
+      373,  374,  376,  365,  362,  364,  369,  380,  378,  373,
+      378,  381,  383,  381,  375,  367,  368,  369,  370,  372,
+      371,  373,  374,  375,  372,  376,  373,  374,  376,  377,
+      379,  382,  384,  380,  378,  373,  377,  381,  383,  385,
+      386,  387,  379,  382,  388,  389,  390,  391,  392,  387,
+      384,  393,  399,  400,  389,  377,  379,  382,  384,  385,
+
+      394,  392,  397,  390,  393,  385,  386,  387,  391,  399,
+      388,  389,  390,  391,  392,  395,  384,  393,  399,  401,
+      402,  394,  403,  397,  404,  407,  394,  395,  397,  408,
+      403,  409,  398,  410,  411,  412,  396,  415,  361,  413,
+      410,  395,  414,  360,  401,  401,  402,  416,  403,  404,
+      404,  411,  413,  419,  407,  412,  409,  409,  408,  410,
+      411,  412,  414,  415,  416,  413,  417,  418,  414,  422,
+      419,  423,  425,  416,  425,  424,  426,  417,  418,  419,
+      423,  424,  427,  426,  422,  428,  429,  432,  430,  436,
+      427,  433,  417,  418,  430,  422,  439,  423,  425,  441,
+
+      443,  424,  426,  437,  442,  357,  444,  448,  427,  443,
+      452,  428,  445,  432,  430,  429,  433,  433,  436,  445,
+      437,  446,  439,  446,  442,  447,  443,  449,  441,  437,
+      442,  444,  444,  448,  447,  450,  452,  453,  445,  449,
+      454,  455,  450,  458,  456,  457,  453,  446,  454,  455,
+      459,  447,  456,  449,  457,  460,  458,  348,  466,  459,
+      470,  450,  460,  453,  461,  463,  454,  455,  464,  458,
+      456,  457,  466,  461,  465,  467,  459,  464,  463,  468,
+      469,  460,  471,  465,  466,  333,  468,  472,  477,  470,
+      461,  463,  467,  469,  464,  474,  475,  478,  486,  481,
+
+      465,  467,  479,  475,  323,  468,  469,  482,  483,  482,
+      477,  471,  484,  472,  477,  483,  478,  479,  474,  481,
+      478,  474,  475,  478,  485,  481,  489,  486,  479,  493,
+      487,  494,  492,  482,  483,  321,  484,  487,  484,  489,
+      490,  495,  478,  498,  500,  485,  493,  490,  494,  496,
+      485,  496,  489,  492,  497,  493,  487,  494,  492,  499,
+      501,  497,  502,  503,  495,  504,  490,  495,  499,  498,
+      500,  505,  506,  508,  507,  496,  512,  513,  519,  505,
+      497,  507,  504,  502,  503,  499,  501,  509,  502,  503,
+      509,  504,  511,  508,  514,  516,  515,  505,  517,  508,
+
+      507,  506,  512,  518,  511,  515,  513,  519,  521,  523,
+      520,  522,  514,  509,  524,  526,  516,  521,  511,  530,
+      514,  516,  515,  517,  517,  520,  525,  529,  526,  518,
+      531,  522,  527,  527,  521,  523,  520,  522,  528,  528,
+      524,  526,  533,  536,  529,  530,  537,  525,  538,  541,
+      539,  531,  525,  529,  533,  538,  531,  539,  527,  540,
+      542,  543,  547,  536,  528,  544,  537,  548,  533,  536,
+      549,  544,  537,  546,  538,  541,  539,  542,  552,  540,
+      546,  543,  550,  547,  548,  540,  542,  543,  547,  553,
+      555,  544,  554,  548,  558,  559,  549,  550,  552,  546,
+
+      307,  560,  559,  558,  552,  561,  562,  555,  550,  565,
+      553,  568,  554,  566,  572,  553,  555,  567,  554,  564,
+      558,  559,  560,  562,  565,  570,  561,  560,  564,  572,
+      566,  561,  562,  569,  567,  565,  569,  568,  573,  566,
+      572,  574,  570,  567,  575,  564,  576,  573,  577,  580,
+      579,  570,  581,  583,  574,  577,  582,  585,  584,  586,
+      587,  575,  569,  588,  573,  579,  580,  574,  583,  576,
+      575,  584,  576,  589,  577,  580,  579,  590,  581,  583,
+      596,  582,  582,  585,  584,  586,  587,  591,  592,  588,
+      591,  592,  594,  589,  597,  596,  598,  599,  600,  589,
+
+      601,  594,  293,  590,  599,  603,  596,  602,  608,  606,
+      604,  615,  600,  591,  592,  597,  601,  607,  594,  613,
+      597,  616,  598,  599,  600,  604,  601,  617,  602,  603,
+      618,  603,  606,  602,  608,  606,  604,  619,  607,  621,
+      615,  622,  623,  607,  613,  613,  624,  292,  625,  626,
+      616,  618,  617,  617,  628,  627,  618,  634,  287,  630,
+      229,  641,  622,  619,  631,  621,  642,  622,  623,  632,
+      626,  633,  624,  625,  625,  626,  627,  637,  633,  631,
+      628,  627,  630,  634,  632,  630,  640,  641,  207,  637,
+      631,  203,  642,  644,  645,  632,  646,  633,  649,  653,
+
+      647,  657,  650,  637,  649,  658,  201,  156,  657,  640,
+      654,  663,  640,  660,  644,  645,  655,  646,  650,  644,
+      645,  647,  646,  654,  649,  653,  647,  657,  650,  655,
+      656,  658,  660,  661,  662,  667,  654,  663,  139,  660,
+      665,  666,  655,  672,  669,  656,  670,  665,  666,  667,
+      673,  662,  661,  677,  671,  132,  656,   93,  674,  661,
+      662,  667,  669,   92,  670,  674,  665,  666,   90,  672,
+      669,  671,  670,   88,   47,   43,  673,   39,   38,  677,
+      671,   33,   10,    9,  674,  680,  680,  680,  680,  681,
+      681,  681,  681,  682,  682,  682,  682,  684,  684,    0,
+
+      684,  685,  685,  687,  687,  688,  688,    0,  688,  679,
+      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
+      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
+      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
+      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
+      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
+      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
+      679
     } ;
 
 static yy_state_type yy_last_accepting_state;
@@ -1095,8 +1117,8 @@
 #define YY_MORE_ADJ (yy_more_len)
 #define YY_RESTORE_YY_MORE_OFFSET
 char *yytext;
-#line 1 "configlexer.lex"
-#line 2 "configlexer.lex"
+#line 1 "./configlexer.lex"
+#line 2 "./configlexer.lex"
 /*
  * configlexer.lex - lexical analyzer for NSD config file
  *
@@ -1268,7 +1290,7 @@
 #endif
 
 #define YY_NO_INPUT 1
-#line 176 "configlexer.lex"
+#line 176 "./configlexer.lex"
 #ifndef YY_NO_UNPUT
 #define YY_NO_UNPUT 1
 #endif
@@ -1276,7 +1298,7 @@
 #define YY_NO_INPUT 1
 #endif
 
-#line 1279 "<stdout>"
+#line 1301 "<stdout>"
 
 #define INITIAL 0
 #define quotedstring 1
@@ -1358,7 +1380,12 @@
 
 /* Amount of stuff to slurp up with each read. */
 #ifndef YY_READ_BUF_SIZE
+#ifdef __ia64__
+/* On IA-64, the buffer size is 16k, not 8k */
+#define YY_READ_BUF_SIZE 16384
+#else
 #define YY_READ_BUF_SIZE 8192
+#endif /* __ia64__ */
 #endif
 
 /* Copy whatever the last rule matched to the standard output. */
@@ -1459,10 +1486,6 @@
 	register char *yy_cp, *yy_bp;
 	register int yy_act;
     
-#line 194 "configlexer.lex"
-
-#line 1464 "<stdout>"
-
 	if ( !(yy_init) )
 		{
 		(yy_init) = 1;
@@ -1489,6 +1512,11 @@
 		yy_load_buffer_state( );
 		}
 
+	{
+#line 194 "./configlexer.lex"
+
+#line 1518 "<stdout>"
+
 	while ( 1 )		/* loops until end-of-file is reached */
 		{
 		(yy_more_len) = 0;
@@ -1511,7 +1539,7 @@
 yy_match:
 		do
 			{
-			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
+			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
 			if ( yy_accept[yy_current_state] )
 				{
 				(yy_last_accepting_state) = yy_current_state;
@@ -1520,13 +1548,13 @@
 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
 				{
 				yy_current_state = (int) yy_def[yy_current_state];
-				if ( yy_current_state >= 666 )
+				if ( yy_current_state >= 680 )
 					yy_c = yy_meta[(unsigned int) yy_c];
 				}
 			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
 			++yy_cp;
 			}
-		while ( yy_base[yy_current_state] != 1869 );
+		while ( yy_base[yy_current_state] != 1910 );
 
 yy_find_action:
 		yy_act = yy_accept[yy_current_state];
@@ -1552,397 +1580,402 @@
 
 case 1:
 YY_RULE_SETUP
-#line 195 "configlexer.lex"
+#line 195 "./configlexer.lex"
 { LEXOUT(("SP ")); /* ignore */ }
 	YY_BREAK
 case 2:
 YY_RULE_SETUP
-#line 196 "configlexer.lex"
+#line 196 "./configlexer.lex"
 { LEXOUT(("comment(%s) ", yytext)); /* ignore */ }
 	YY_BREAK
 case 3:
 YY_RULE_SETUP
-#line 197 "configlexer.lex"
+#line 197 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_SERVER;}
 	YY_BREAK
 case 4:
 YY_RULE_SETUP
-#line 198 "configlexer.lex"
+#line 198 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_NAME;}
 	YY_BREAK
 case 5:
 YY_RULE_SETUP
-#line 199 "configlexer.lex"
+#line 199 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_IP_ADDRESS;}
 	YY_BREAK
 case 6:
 YY_RULE_SETUP
-#line 200 "configlexer.lex"
+#line 200 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_IP_ADDRESS;}
 	YY_BREAK
 case 7:
 YY_RULE_SETUP
-#line 201 "configlexer.lex"
+#line 201 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_IP_TRANSPARENT;}
 	YY_BREAK
 case 8:
 YY_RULE_SETUP
-#line 202 "configlexer.lex"
+#line 202 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_DEBUG_MODE;}
 	YY_BREAK
 case 9:
 YY_RULE_SETUP
-#line 203 "configlexer.lex"
+#line 203 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_HIDE_VERSION;}
 	YY_BREAK
 case 10:
 YY_RULE_SETUP
-#line 204 "configlexer.lex"
+#line 204 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_IP4_ONLY;}
 	YY_BREAK
 case 11:
 YY_RULE_SETUP
-#line 205 "configlexer.lex"
+#line 205 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_IP6_ONLY;}
 	YY_BREAK
 case 12:
 YY_RULE_SETUP
-#line 206 "configlexer.lex"
+#line 206 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_DO_IP4;}
 	YY_BREAK
 case 13:
 YY_RULE_SETUP
-#line 207 "configlexer.lex"
+#line 207 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_DO_IP6;}
 	YY_BREAK
 case 14:
 YY_RULE_SETUP
-#line 208 "configlexer.lex"
+#line 208 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_DATABASE;}
 	YY_BREAK
 case 15:
 YY_RULE_SETUP
-#line 209 "configlexer.lex"
+#line 209 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_IDENTITY;}
 	YY_BREAK
 case 16:
 YY_RULE_SETUP
-#line 210 "configlexer.lex"
+#line 210 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_NSID;}
 	YY_BREAK
 case 17:
 YY_RULE_SETUP
-#line 211 "configlexer.lex"
+#line 211 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_LOGFILE;}
 	YY_BREAK
 case 18:
 YY_RULE_SETUP
-#line 212 "configlexer.lex"
+#line 212 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_SERVER_COUNT;}
 	YY_BREAK
 case 19:
 YY_RULE_SETUP
-#line 213 "configlexer.lex"
+#line 213 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_TCP_COUNT;}
 	YY_BREAK
 case 20:
 YY_RULE_SETUP
-#line 214 "configlexer.lex"
+#line 214 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_TCP_QUERY_COUNT;}
 	YY_BREAK
 case 21:
 YY_RULE_SETUP
-#line 215 "configlexer.lex"
+#line 215 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_TCP_TIMEOUT;}
 	YY_BREAK
 case 22:
 YY_RULE_SETUP
-#line 216 "configlexer.lex"
+#line 216 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_IPV4_EDNS_SIZE;}
 	YY_BREAK
 case 23:
 YY_RULE_SETUP
-#line 217 "configlexer.lex"
+#line 217 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_IPV6_EDNS_SIZE;}
 	YY_BREAK
 case 24:
 YY_RULE_SETUP
-#line 218 "configlexer.lex"
+#line 218 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_PIDFILE;}
 	YY_BREAK
 case 25:
 YY_RULE_SETUP
-#line 219 "configlexer.lex"
+#line 219 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_PORT;}
 	YY_BREAK
 case 26:
 YY_RULE_SETUP
-#line 220 "configlexer.lex"
+#line 220 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_REUSEPORT;}
 	YY_BREAK
 case 27:
 YY_RULE_SETUP
-#line 221 "configlexer.lex"
+#line 221 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_STATISTICS;}
 	YY_BREAK
 case 28:
 YY_RULE_SETUP
-#line 222 "configlexer.lex"
+#line 222 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_CHROOT;}
 	YY_BREAK
 case 29:
 YY_RULE_SETUP
-#line 223 "configlexer.lex"
+#line 223 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_USERNAME;}
 	YY_BREAK
 case 30:
 YY_RULE_SETUP
-#line 224 "configlexer.lex"
+#line 224 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_ZONESDIR;}
 	YY_BREAK
 case 31:
 YY_RULE_SETUP
-#line 225 "configlexer.lex"
+#line 225 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_ZONELISTFILE;}
 	YY_BREAK
 case 32:
 YY_RULE_SETUP
-#line 226 "configlexer.lex"
+#line 226 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_DIFFFILE;}
 	YY_BREAK
 case 33:
 YY_RULE_SETUP
-#line 227 "configlexer.lex"
+#line 227 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_XFRDFILE;}
 	YY_BREAK
 case 34:
 YY_RULE_SETUP
-#line 228 "configlexer.lex"
+#line 228 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_XFRDIR;}
 	YY_BREAK
 case 35:
 YY_RULE_SETUP
-#line 229 "configlexer.lex"
+#line 229 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_XFRD_RELOAD_TIMEOUT;}
 	YY_BREAK
 case 36:
 YY_RULE_SETUP
-#line 230 "configlexer.lex"
+#line 230 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_VERBOSITY;}
 	YY_BREAK
 case 37:
 YY_RULE_SETUP
-#line 231 "configlexer.lex"
+#line 231 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_ZONE;}
 	YY_BREAK
 case 38:
 YY_RULE_SETUP
-#line 232 "configlexer.lex"
+#line 232 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_ZONEFILE;}
 	YY_BREAK
 case 39:
 YY_RULE_SETUP
-#line 233 "configlexer.lex"
+#line 233 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_ZONESTATS;}
 	YY_BREAK
 case 40:
 YY_RULE_SETUP
-#line 234 "configlexer.lex"
+#line 234 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); return VAR_ALLOW_NOTIFY;}
 	YY_BREAK
 case 41:
 YY_RULE_SETUP
-#line 235 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_REQUEST_XFR;}
+#line 235 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_SIZE_LIMIT_XFR;}
 	YY_BREAK
 case 42:
 YY_RULE_SETUP
-#line 236 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_NOTIFY;}
+#line 236 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_REQUEST_XFR;}
 	YY_BREAK
 case 43:
 YY_RULE_SETUP
-#line 237 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_NOTIFY_RETRY;}
+#line 237 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_NOTIFY;}
 	YY_BREAK
 case 44:
 YY_RULE_SETUP
-#line 238 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_PROVIDE_XFR;}
+#line 238 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_NOTIFY_RETRY;}
 	YY_BREAK
 case 45:
 YY_RULE_SETUP
-#line 239 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_OUTGOING_INTERFACE;}
+#line 239 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_PROVIDE_XFR;}
 	YY_BREAK
 case 46:
 YY_RULE_SETUP
-#line 240 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_ALLOW_AXFR_FALLBACK;}
+#line 240 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_OUTGOING_INTERFACE;}
 	YY_BREAK
 case 47:
 YY_RULE_SETUP
-#line 241 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_KEY;}
+#line 241 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_ALLOW_AXFR_FALLBACK;}
 	YY_BREAK
 case 48:
 YY_RULE_SETUP
-#line 242 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_ALGORITHM;}
+#line 242 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_KEY;}
 	YY_BREAK
 case 49:
 YY_RULE_SETUP
-#line 243 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_SECRET;}
+#line 243 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_ALGORITHM;}
 	YY_BREAK
 case 50:
 YY_RULE_SETUP
-#line 244 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_PATTERN;}
+#line 244 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_SECRET;}
 	YY_BREAK
 case 51:
 YY_RULE_SETUP
-#line 245 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_INCLUDEPATTERN;}
+#line 245 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_PATTERN;}
 	YY_BREAK
 case 52:
 YY_RULE_SETUP
-#line 246 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_REMOTE_CONTROL;}
+#line 246 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_INCLUDEPATTERN;}
 	YY_BREAK
 case 53:
 YY_RULE_SETUP
-#line 247 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_CONTROL_ENABLE;}
+#line 247 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_REMOTE_CONTROL;}
 	YY_BREAK
 case 54:
 YY_RULE_SETUP
-#line 248 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_CONTROL_INTERFACE;}
+#line 248 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_CONTROL_ENABLE;}
 	YY_BREAK
 case 55:
 YY_RULE_SETUP
-#line 249 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_CONTROL_PORT;}
+#line 249 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_CONTROL_INTERFACE;}
 	YY_BREAK
 case 56:
 YY_RULE_SETUP
-#line 250 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_SERVER_KEY_FILE;}
+#line 250 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_CONTROL_PORT;}
 	YY_BREAK
 case 57:
 YY_RULE_SETUP
-#line 251 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_SERVER_CERT_FILE;}
+#line 251 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_SERVER_KEY_FILE;}
 	YY_BREAK
 case 58:
 YY_RULE_SETUP
-#line 252 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_CONTROL_KEY_FILE;}
+#line 252 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_SERVER_CERT_FILE;}
 	YY_BREAK
 case 59:
 YY_RULE_SETUP
-#line 253 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_CONTROL_CERT_FILE;}
+#line 253 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_CONTROL_KEY_FILE;}
 	YY_BREAK
 case 60:
 YY_RULE_SETUP
-#line 254 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_AXFR;}
+#line 254 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_CONTROL_CERT_FILE;}
 	YY_BREAK
 case 61:
 YY_RULE_SETUP
-#line 255 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_UDP;}
+#line 255 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_AXFR;}
 	YY_BREAK
 case 62:
 YY_RULE_SETUP
-#line 256 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_RRL_SIZE;}
+#line 256 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_UDP;}
 	YY_BREAK
 case 63:
 YY_RULE_SETUP
-#line 257 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_RRL_RATELIMIT;}
+#line 257 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_RRL_SIZE;}
 	YY_BREAK
 case 64:
 YY_RULE_SETUP
-#line 258 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_RRL_SLIP;}
+#line 258 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_RRL_RATELIMIT;}
 	YY_BREAK
 case 65:
 YY_RULE_SETUP
-#line 259 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_RRL_IPV4_PREFIX_LENGTH;}
+#line 259 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_RRL_SLIP;}
 	YY_BREAK
 case 66:
 YY_RULE_SETUP
-#line 260 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_RRL_IPV6_PREFIX_LENGTH;}
+#line 260 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_RRL_IPV4_PREFIX_LENGTH;}
 	YY_BREAK
 case 67:
 YY_RULE_SETUP
-#line 261 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_RRL_WHITELIST_RATELIMIT;}
+#line 261 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_RRL_IPV6_PREFIX_LENGTH;}
 	YY_BREAK
 case 68:
 YY_RULE_SETUP
-#line 262 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_RRL_WHITELIST;}
+#line 262 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_RRL_WHITELIST_RATELIMIT;}
 	YY_BREAK
 case 69:
 YY_RULE_SETUP
-#line 263 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_ZONEFILES_CHECK;}
+#line 263 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_RRL_WHITELIST;}
 	YY_BREAK
 case 70:
 YY_RULE_SETUP
-#line 264 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_ZONEFILES_WRITE;}
+#line 264 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_ZONEFILES_CHECK;}
 	YY_BREAK
 case 71:
 YY_RULE_SETUP
-#line 265 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_LOG_TIME_ASCII;}
+#line 265 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_ZONEFILES_WRITE;}
 	YY_BREAK
 case 72:
 YY_RULE_SETUP
-#line 266 "configlexer.lex"
-{ LEXOUT(("v(%s) ", yytext)); return VAR_ROUND_ROBIN;}
+#line 266 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_LOG_TIME_ASCII;}
 	YY_BREAK
 case 73:
-/* rule 73 can match eol */
 YY_RULE_SETUP
-#line 267 "configlexer.lex"
+#line 267 "./configlexer.lex"
+{ LEXOUT(("v(%s) ", yytext)); return VAR_ROUND_ROBIN;}
+	YY_BREAK
+case 74:
+/* rule 74 can match eol */
+YY_RULE_SETUP
+#line 268 "./configlexer.lex"
 { LEXOUT(("NL\n")); cfg_parser->line++;}
 	YY_BREAK
 /* Quoted strings. Strip leading and ending quotes */
-case 74:
+case 75:
 YY_RULE_SETUP
-#line 270 "configlexer.lex"
+#line 271 "./configlexer.lex"
 { BEGIN(quotedstring); LEXOUT(("QS ")); }
 	YY_BREAK
 case YY_STATE_EOF(quotedstring):
-#line 271 "configlexer.lex"
+#line 272 "./configlexer.lex"
 {
         yyerror("EOF inside quoted string");
         BEGIN(INITIAL);
 }
 	YY_BREAK
-case 75:
+case 76:
 YY_RULE_SETUP
-#line 275 "configlexer.lex"
+#line 276 "./configlexer.lex"
 { LEXOUT(("STR(%s) ", yytext)); yymore(); }
 	YY_BREAK
-case 76:
-/* rule 76 can match eol */
+case 77:
+/* rule 77 can match eol */
 YY_RULE_SETUP
-#line 276 "configlexer.lex"
+#line 277 "./configlexer.lex"
 { cfg_parser->line++; yymore(); }
 	YY_BREAK
-case 77:
+case 78:
 YY_RULE_SETUP
-#line 277 "configlexer.lex"
+#line 278 "./configlexer.lex"
 {
         LEXOUT(("QE "));
         BEGIN(INITIAL);
@@ -1952,37 +1985,37 @@
 }
 	YY_BREAK
 /* include: directive */
-case 78:
+case 79:
 YY_RULE_SETUP
-#line 286 "configlexer.lex"
+#line 287 "./configlexer.lex"
 { LEXOUT(("v(%s) ", yytext)); BEGIN(include); }
 	YY_BREAK
 case YY_STATE_EOF(include):
-#line 287 "configlexer.lex"
+#line 288 "./configlexer.lex"
 {
         yyerror("EOF inside include directive");
         BEGIN(INITIAL);
 }
 	YY_BREAK
-case 79:
+case 80:
 YY_RULE_SETUP
-#line 291 "configlexer.lex"
+#line 292 "./configlexer.lex"
 { LEXOUT(("ISP ")); /* ignore */ }
 	YY_BREAK
-case 80:
-/* rule 80 can match eol */
+case 81:
+/* rule 81 can match eol */
 YY_RULE_SETUP
-#line 292 "configlexer.lex"
+#line 293 "./configlexer.lex"
 { LEXOUT(("NL\n")); cfg_parser->line++;}
 	YY_BREAK
-case 81:
+case 82:
 YY_RULE_SETUP
-#line 293 "configlexer.lex"
+#line 294 "./configlexer.lex"
 { LEXOUT(("IQS ")); BEGIN(include_quoted); }
 	YY_BREAK
-case 82:
+case 83:
 YY_RULE_SETUP
-#line 294 "configlexer.lex"
+#line 295 "./configlexer.lex"
 {
 	LEXOUT(("Iunquotedstr(%s) ", yytext));
 	config_start_include_glob(yytext);
@@ -1990,26 +2023,26 @@
 }
 	YY_BREAK
 case YY_STATE_EOF(include_quoted):
-#line 299 "configlexer.lex"
+#line 300 "./configlexer.lex"
 {
         yyerror("EOF inside quoted string");
         BEGIN(INITIAL);
 }
 	YY_BREAK
-case 83:
+case 84:
 YY_RULE_SETUP
-#line 303 "configlexer.lex"
+#line 304 "./configlexer.lex"
 { LEXOUT(("ISTR(%s) ", yytext)); yymore(); }
 	YY_BREAK
-case 84:
-/* rule 84 can match eol */
+case 85:
+/* rule 85 can match eol */
 YY_RULE_SETUP
-#line 304 "configlexer.lex"
+#line 305 "./configlexer.lex"
 { cfg_parser->line++; yymore(); }
 	YY_BREAK
-case 85:
+case 86:
 YY_RULE_SETUP
-#line 305 "configlexer.lex"
+#line 306 "./configlexer.lex"
 {
 	LEXOUT(("IQE "));
 	yytext[yyleng - 1] = '\0';
@@ -2018,7 +2051,7 @@
 }
 	YY_BREAK
 case YY_STATE_EOF(INITIAL):
-#line 311 "configlexer.lex"
+#line 312 "./configlexer.lex"
 {
 	yy_set_bol(1); /* Set beginning of line, so "^" rules match.  */
 	if (!config_include_stack) {
@@ -2029,18 +2062,18 @@
 	}
 }
 	YY_BREAK
-case 86:
+case 87:
 YY_RULE_SETUP
-#line 321 "configlexer.lex"
+#line 322 "./configlexer.lex"
 { LEXOUT(("unquotedstr(%s) ", yytext)); 
 			yylval.str = region_strdup(cfg_parser->opt->region, yytext); return STRING; }
 	YY_BREAK
-case 87:
+case 88:
 YY_RULE_SETUP
-#line 324 "configlexer.lex"
+#line 325 "./configlexer.lex"
 ECHO;
 	YY_BREAK
-#line 2043 "<stdout>"
+#line 2076 "<stdout>"
 
 	case YY_END_OF_BUFFER:
 		{
@@ -2169,6 +2202,7 @@
 			"fatal flex scanner internal error--no action found" );
 	} /* end of action switch */
 		} /* end of scanning one token */
+	} /* end of user's declarations */
 } /* end of yylex */
 
 /* yy_get_next_buffer - try to read in a new buffer
@@ -2330,7 +2364,7 @@
 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
 			{
 			yy_current_state = (int) yy_def[yy_current_state];
-			if ( yy_current_state >= 666 )
+			if ( yy_current_state >= 680 )
 				yy_c = yy_meta[(unsigned int) yy_c];
 			}
 		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
@@ -2358,11 +2392,11 @@
 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
 		{
 		yy_current_state = (int) yy_def[yy_current_state];
-		if ( yy_current_state >= 666 )
+		if ( yy_current_state >= 680 )
 			yy_c = yy_meta[(unsigned int) yy_c];
 		}
 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
-	yy_is_jam = (yy_current_state == 665);
+	yy_is_jam = (yy_current_state == 679);
 
 		return yy_is_jam ? 0 : yy_current_state;
 }
@@ -2995,7 +3029,7 @@
 
 #define YYTABLES_NAME "yytables"
 
-#line 324 "configlexer.lex"
+#line 324 "./configlexer.lex"
 
 
 
diff -Naur nsd-4.1.5/configlexer.lex nsd-4.1.5-xfer-limit-p0.0.1/configlexer.lex
--- nsd-4.1.5/configlexer.lex	2015-08-14 14:30:46.000000000 +0000
+++ nsd-4.1.5-xfer-limit-p0.0.1/configlexer.lex	2015-09-28 09:05:48.000000000 +0000
@@ -232,6 +232,7 @@
 zonefile{COLON}		{ LEXOUT(("v(%s) ", yytext)); return VAR_ZONEFILE;}
 zonestats{COLON}	{ LEXOUT(("v(%s) ", yytext)); return VAR_ZONESTATS;}
 allow-notify{COLON}	{ LEXOUT(("v(%s) ", yytext)); return VAR_ALLOW_NOTIFY;}
+size-limit-xfr{COLON}	{ LEXOUT(("v(%s) ", yytext)); return VAR_SIZE_LIMIT_XFR;}
 request-xfr{COLON}	{ LEXOUT(("v(%s) ", yytext)); return VAR_REQUEST_XFR;}
 notify{COLON}		{ LEXOUT(("v(%s) ", yytext)); return VAR_NOTIFY;}
 notify-retry{COLON}	{ LEXOUT(("v(%s) ", yytext)); return VAR_NOTIFY_RETRY;}
diff -Naur nsd-4.1.5/configparser.c nsd-4.1.5-xfer-limit-p0.0.1/configparser.c
--- nsd-4.1.5/configparser.c	2015-09-21 09:21:02.000000000 +0000
+++ nsd-4.1.5-xfer-limit-p0.0.1/configparser.c	2015-09-28 09:05:48.000000000 +0000
@@ -1,19 +1,19 @@
-/* A Bison parser, made by GNU Bison 2.7.  */
+/* A Bison parser, made by GNU Bison 3.0.2.  */
 
 /* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2012 Free Software Foundation, Inc.
-   
+
+   Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.
+
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
-   
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
 
@@ -26,7 +26,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +44,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.7"
+#define YYBISON_VERSION "3.0.2"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -62,8 +62,7 @@
 
 
 /* Copy the first part of user declarations.  */
-/* Line 371 of yacc.c  */
-#line 10 "configparser.y"
+#line 10 "./configparser.y" /* yacc.c:339  */
 
 #include "config.h"
 
@@ -96,14 +95,13 @@
 #endif
 
 
-/* Line 371 of yacc.c  */
-#line 101 "configparser.c"
+#line 99 "configparser.c" /* yacc.c:339  */
 
-# ifndef YY_NULL
+# ifndef YY_NULLPTR
 #  if defined __cplusplus && 201103L <= __cplusplus
-#   define YY_NULL nullptr
+#   define YY_NULLPTR nullptr
 #  else
-#   define YY_NULL 0
+#   define YY_NULLPTR 0
 #  endif
 # endif
 
@@ -119,7 +117,7 @@
    by #include "configparser.h".  */
 #ifndef YY_YY_CONFIGPARSER_H_INCLUDED
 # define YY_YY_CONFIGPARSER_H_INCLUDED
-/* Enabling traces.  */
+/* Debug traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
 #endif
@@ -127,90 +125,90 @@
 extern int yydebug;
 #endif
 
-/* Tokens.  */
+/* Token type.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     SPACE = 258,
-     LETTER = 259,
-     NEWLINE = 260,
-     COMMENT = 261,
-     COLON = 262,
-     ANY = 263,
-     ZONESTR = 264,
-     STRING = 265,
-     VAR_SERVER = 266,
-     VAR_NAME = 267,
-     VAR_IP_ADDRESS = 268,
-     VAR_IP_TRANSPARENT = 269,
-     VAR_DEBUG_MODE = 270,
-     VAR_IP4_ONLY = 271,
-     VAR_IP6_ONLY = 272,
-     VAR_DATABASE = 273,
-     VAR_IDENTITY = 274,
-     VAR_NSID = 275,
-     VAR_LOGFILE = 276,
-     VAR_SERVER_COUNT = 277,
-     VAR_TCP_COUNT = 278,
-     VAR_PIDFILE = 279,
-     VAR_PORT = 280,
-     VAR_STATISTICS = 281,
-     VAR_CHROOT = 282,
-     VAR_USERNAME = 283,
-     VAR_ZONESDIR = 284,
-     VAR_XFRDFILE = 285,
-     VAR_DIFFFILE = 286,
-     VAR_XFRD_RELOAD_TIMEOUT = 287,
-     VAR_TCP_QUERY_COUNT = 288,
-     VAR_TCP_TIMEOUT = 289,
-     VAR_IPV4_EDNS_SIZE = 290,
-     VAR_IPV6_EDNS_SIZE = 291,
-     VAR_DO_IP4 = 292,
-     VAR_DO_IP6 = 293,
-     VAR_ZONEFILE = 294,
-     VAR_ZONE = 295,
-     VAR_ALLOW_NOTIFY = 296,
-     VAR_REQUEST_XFR = 297,
-     VAR_NOTIFY = 298,
-     VAR_PROVIDE_XFR = 299,
-     VAR_NOTIFY_RETRY = 300,
-     VAR_OUTGOING_INTERFACE = 301,
-     VAR_ALLOW_AXFR_FALLBACK = 302,
-     VAR_KEY = 303,
-     VAR_ALGORITHM = 304,
-     VAR_SECRET = 305,
-     VAR_AXFR = 306,
-     VAR_UDP = 307,
-     VAR_VERBOSITY = 308,
-     VAR_HIDE_VERSION = 309,
-     VAR_PATTERN = 310,
-     VAR_INCLUDEPATTERN = 311,
-     VAR_ZONELISTFILE = 312,
-     VAR_REMOTE_CONTROL = 313,
-     VAR_CONTROL_ENABLE = 314,
-     VAR_CONTROL_INTERFACE = 315,
-     VAR_CONTROL_PORT = 316,
-     VAR_SERVER_KEY_FILE = 317,
-     VAR_SERVER_CERT_FILE = 318,
-     VAR_CONTROL_KEY_FILE = 319,
-     VAR_CONTROL_CERT_FILE = 320,
-     VAR_XFRDIR = 321,
-     VAR_RRL_SIZE = 322,
-     VAR_RRL_RATELIMIT = 323,
-     VAR_RRL_SLIP = 324,
-     VAR_RRL_IPV4_PREFIX_LENGTH = 325,
-     VAR_RRL_IPV6_PREFIX_LENGTH = 326,
-     VAR_RRL_WHITELIST_RATELIMIT = 327,
-     VAR_RRL_WHITELIST = 328,
-     VAR_ZONEFILES_CHECK = 329,
-     VAR_ZONEFILES_WRITE = 330,
-     VAR_LOG_TIME_ASCII = 331,
-     VAR_ROUND_ROBIN = 332,
-     VAR_ZONESTATS = 333,
-     VAR_REUSEPORT = 334
-   };
+  enum yytokentype
+  {
+    SPACE = 258,
+    LETTER = 259,
+    NEWLINE = 260,
+    COMMENT = 261,
+    COLON = 262,
+    ANY = 263,
+    ZONESTR = 264,
+    STRING = 265,
+    VAR_SERVER = 266,
+    VAR_NAME = 267,
+    VAR_IP_ADDRESS = 268,
+    VAR_IP_TRANSPARENT = 269,
+    VAR_DEBUG_MODE = 270,
+    VAR_IP4_ONLY = 271,
+    VAR_IP6_ONLY = 272,
+    VAR_DATABASE = 273,
+    VAR_IDENTITY = 274,
+    VAR_NSID = 275,
+    VAR_LOGFILE = 276,
+    VAR_SERVER_COUNT = 277,
+    VAR_TCP_COUNT = 278,
+    VAR_PIDFILE = 279,
+    VAR_PORT = 280,
+    VAR_STATISTICS = 281,
+    VAR_CHROOT = 282,
+    VAR_USERNAME = 283,
+    VAR_ZONESDIR = 284,
+    VAR_XFRDFILE = 285,
+    VAR_DIFFFILE = 286,
+    VAR_XFRD_RELOAD_TIMEOUT = 287,
+    VAR_TCP_QUERY_COUNT = 288,
+    VAR_TCP_TIMEOUT = 289,
+    VAR_IPV4_EDNS_SIZE = 290,
+    VAR_IPV6_EDNS_SIZE = 291,
+    VAR_DO_IP4 = 292,
+    VAR_DO_IP6 = 293,
+    VAR_ZONEFILE = 294,
+    VAR_ZONE = 295,
+    VAR_ALLOW_NOTIFY = 296,
+    VAR_REQUEST_XFR = 297,
+    VAR_NOTIFY = 298,
+    VAR_PROVIDE_XFR = 299,
+    VAR_SIZE_LIMIT_XFR = 300,
+    VAR_NOTIFY_RETRY = 301,
+    VAR_OUTGOING_INTERFACE = 302,
+    VAR_ALLOW_AXFR_FALLBACK = 303,
+    VAR_KEY = 304,
+    VAR_ALGORITHM = 305,
+    VAR_SECRET = 306,
+    VAR_AXFR = 307,
+    VAR_UDP = 308,
+    VAR_VERBOSITY = 309,
+    VAR_HIDE_VERSION = 310,
+    VAR_PATTERN = 311,
+    VAR_INCLUDEPATTERN = 312,
+    VAR_ZONELISTFILE = 313,
+    VAR_REMOTE_CONTROL = 314,
+    VAR_CONTROL_ENABLE = 315,
+    VAR_CONTROL_INTERFACE = 316,
+    VAR_CONTROL_PORT = 317,
+    VAR_SERVER_KEY_FILE = 318,
+    VAR_SERVER_CERT_FILE = 319,
+    VAR_CONTROL_KEY_FILE = 320,
+    VAR_CONTROL_CERT_FILE = 321,
+    VAR_XFRDIR = 322,
+    VAR_RRL_SIZE = 323,
+    VAR_RRL_RATELIMIT = 324,
+    VAR_RRL_SLIP = 325,
+    VAR_RRL_IPV4_PREFIX_LENGTH = 326,
+    VAR_RRL_IPV6_PREFIX_LENGTH = 327,
+    VAR_RRL_WHITELIST_RATELIMIT = 328,
+    VAR_RRL_WHITELIST = 329,
+    VAR_ZONEFILES_CHECK = 330,
+    VAR_ZONEFILES_WRITE = 331,
+    VAR_LOG_TIME_ASCII = 332,
+    VAR_ROUND_ROBIN = 333,
+    VAR_ZONESTATS = 334,
+    VAR_REUSEPORT = 335
+  };
 #endif
 /* Tokens.  */
 #define SPACE 258
@@ -255,83 +253,68 @@
 #define VAR_REQUEST_XFR 297
 #define VAR_NOTIFY 298
 #define VAR_PROVIDE_XFR 299
-#define VAR_NOTIFY_RETRY 300
-#define VAR_OUTGOING_INTERFACE 301
-#define VAR_ALLOW_AXFR_FALLBACK 302
-#define VAR_KEY 303
-#define VAR_ALGORITHM 304
-#define VAR_SECRET 305
-#define VAR_AXFR 306
-#define VAR_UDP 307
-#define VAR_VERBOSITY 308
-#define VAR_HIDE_VERSION 309
-#define VAR_PATTERN 310
-#define VAR_INCLUDEPATTERN 311
-#define VAR_ZONELISTFILE 312
-#define VAR_REMOTE_CONTROL 313
-#define VAR_CONTROL_ENABLE 314
-#define VAR_CONTROL_INTERFACE 315
-#define VAR_CONTROL_PORT 316
-#define VAR_SERVER_KEY_FILE 317
-#define VAR_SERVER_CERT_FILE 318
-#define VAR_CONTROL_KEY_FILE 319
-#define VAR_CONTROL_CERT_FILE 320
-#define VAR_XFRDIR 321
-#define VAR_RRL_SIZE 322
-#define VAR_RRL_RATELIMIT 323
-#define VAR_RRL_SLIP 324
-#define VAR_RRL_IPV4_PREFIX_LENGTH 325
-#define VAR_RRL_IPV6_PREFIX_LENGTH 326
-#define VAR_RRL_WHITELIST_RATELIMIT 327
-#define VAR_RRL_WHITELIST 328
-#define VAR_ZONEFILES_CHECK 329
-#define VAR_ZONEFILES_WRITE 330
-#define VAR_LOG_TIME_ASCII 331
-#define VAR_ROUND_ROBIN 332
-#define VAR_ZONESTATS 333
-#define VAR_REUSEPORT 334
-
-
+#define VAR_SIZE_LIMIT_XFR 300
+#define VAR_NOTIFY_RETRY 301
+#define VAR_OUTGOING_INTERFACE 302
+#define VAR_ALLOW_AXFR_FALLBACK 303
+#define VAR_KEY 304
+#define VAR_ALGORITHM 305
+#define VAR_SECRET 306
+#define VAR_AXFR 307
+#define VAR_UDP 308
+#define VAR_VERBOSITY 309
+#define VAR_HIDE_VERSION 310
+#define VAR_PATTERN 311
+#define VAR_INCLUDEPATTERN 312
+#define VAR_ZONELISTFILE 313
+#define VAR_REMOTE_CONTROL 314
+#define VAR_CONTROL_ENABLE 315
+#define VAR_CONTROL_INTERFACE 316
+#define VAR_CONTROL_PORT 317
+#define VAR_SERVER_KEY_FILE 318
+#define VAR_SERVER_CERT_FILE 319
+#define VAR_CONTROL_KEY_FILE 320
+#define VAR_CONTROL_CERT_FILE 321
+#define VAR_XFRDIR 322
+#define VAR_RRL_SIZE 323
+#define VAR_RRL_RATELIMIT 324
+#define VAR_RRL_SLIP 325
+#define VAR_RRL_IPV4_PREFIX_LENGTH 326
+#define VAR_RRL_IPV6_PREFIX_LENGTH 327
+#define VAR_RRL_WHITELIST_RATELIMIT 328
+#define VAR_RRL_WHITELIST 329
+#define VAR_ZONEFILES_CHECK 330
+#define VAR_ZONEFILES_WRITE 331
+#define VAR_LOG_TIME_ASCII 332
+#define VAR_ROUND_ROBIN 333
+#define VAR_ZONESTATS 334
+#define VAR_REUSEPORT 335
 
+/* Value type.  */
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
-typedef union YYSTYPE
+typedef union YYSTYPE YYSTYPE;
+union YYSTYPE
 {
-/* Line 387 of yacc.c  */
-#line 42 "configparser.y"
+#line 42 "./configparser.y" /* yacc.c:355  */
 
 	char*	str;
 
-
-/* Line 387 of yacc.c  */
-#line 307 "configparser.c"
-} YYSTYPE;
+#line 303 "configparser.c" /* yacc.c:355  */
+};
 # define YYSTYPE_IS_TRIVIAL 1
-# define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
 #endif
 
+
 extern YYSTYPE yylval;
 
-#ifdef YYPARSE_PARAM
-#if defined __STDC__ || defined __cplusplus
-int yyparse (void *YYPARSE_PARAM);
-#else
-int yyparse ();
-#endif
-#else /* ! YYPARSE_PARAM */
-#if defined __STDC__ || defined __cplusplus
 int yyparse (void);
-#else
-int yyparse ();
-#endif
-#endif /* ! YYPARSE_PARAM */
 
 #endif /* !YY_YY_CONFIGPARSER_H_INCLUDED  */
 
 /* Copy the second part of user declarations.  */
 
-/* Line 390 of yacc.c  */
-#line 335 "configparser.c"
+#line 318 "configparser.c" /* yacc.c:358  */
 
 #ifdef short
 # undef short
@@ -345,11 +328,8 @@
 
 #ifdef YYTYPE_INT8
 typedef YYTYPE_INT8 yytype_int8;
-#elif (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
-typedef signed char yytype_int8;
 #else
-typedef short int yytype_int8;
+typedef signed char yytype_int8;
 #endif
 
 #ifdef YYTYPE_UINT16
@@ -369,8 +349,7 @@
 #  define YYSIZE_T __SIZE_TYPE__
 # elif defined size_t
 #  define YYSIZE_T size_t
-# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
+# elif ! defined YYSIZE_T
 #  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
 #  define YYSIZE_T size_t
 # else
@@ -392,6 +371,33 @@
 # endif
 #endif
 
+#ifndef YY_ATTRIBUTE
+# if (defined __GNUC__                                               \
+      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
+     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
+#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
+# else
+#  define YY_ATTRIBUTE(Spec) /* empty */
+# endif
+#endif
+
+#ifndef YY_ATTRIBUTE_PURE
+# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
+#endif
+
+#ifndef YY_ATTRIBUTE_UNUSED
+# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
+#endif
+
+#if !defined _Noreturn \
+     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
+# if defined _MSC_VER && 1200 <= _MSC_VER
+#  define _Noreturn __declspec (noreturn)
+# else
+#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
+# endif
+#endif
+
 /* Suppress unused-variable warnings by "using" E.  */
 #if ! defined lint || defined __GNUC__
 # define YYUSE(E) ((void) (E))
@@ -399,23 +405,25 @@
 # define YYUSE(E) /* empty */
 #endif
 
-/* Identity function, used to suppress warnings about constant conditions.  */
-#ifndef lint
-# define YYID(N) (N)
+#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
+/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
+# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
+    _Pragma ("GCC diagnostic push") \
+    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
+    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
+# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
+    _Pragma ("GCC diagnostic pop")
 #else
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
-static int
-YYID (int yyi)
-#else
-static int
-YYID (yyi)
-    int yyi;
+# define YY_INITIAL_VALUE(Value) Value
 #endif
-{
-  return yyi;
-}
+#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
+# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
+# define YY_IGNORE_MAYBE_UNINITIALIZED_END
 #endif
+#ifndef YY_INITIAL_VALUE
+# define YY_INITIAL_VALUE(Value) /* Nothing. */
+#endif
+
 
 #if ! defined yyoverflow || YYERROR_VERBOSE
 
@@ -434,8 +442,7 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
+#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
       /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
 #     ifndef EXIT_SUCCESS
@@ -447,8 +454,8 @@
 # endif
 
 # ifdef YYSTACK_ALLOC
-   /* Pacify GCC's `empty if-body' warning.  */
-#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
+   /* Pacify GCC's 'empty if-body' warning.  */
+#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
 #  ifndef YYSTACK_ALLOC_MAXIMUM
     /* The OS might guarantee only one guard page at the bottom of the stack,
        and a page size can be as small as 4096 bytes.  So we cannot safely
@@ -464,7 +471,7 @@
 #  endif
 #  if (defined __cplusplus && ! defined EXIT_SUCCESS \
        && ! ((defined YYMALLOC || defined malloc) \
-	     && (defined YYFREE || defined free)))
+             && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
 #   ifndef EXIT_SUCCESS
 #    define EXIT_SUCCESS 0
@@ -472,15 +479,13 @@
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
+#   if ! defined malloc && ! defined EXIT_SUCCESS
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
+#   if ! defined free && ! defined EXIT_SUCCESS
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
@@ -490,7 +495,7 @@
 
 #if (! defined yyoverflow \
      && (! defined __cplusplus \
-	 || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))
+         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))
 
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
@@ -515,16 +520,16 @@
    elements in the stack, and YYPTR gives the new location of the
    stack.  Advance YYPTR to a properly aligned location for the next
    stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
+# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
+    do                                                                  \
+      {                                                                 \
+        YYSIZE_T yynewbytes;                                            \
+        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
+        Stack = &yyptr->Stack_alloc;                                    \
+        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+        yyptr += yynewbytes / sizeof (*yyptr);                          \
+      }                                                                 \
+    while (0)
 
 #endif
 
@@ -543,7 +548,7 @@
           for (yyi = 0; yyi < (Count); yyi++)   \
             (Dst)[yyi] = (Src)[yyi];            \
         }                                       \
-      while (YYID (0))
+      while (0)
 #  endif
 # endif
 #endif /* !YYCOPY_NEEDED */
@@ -551,25 +556,27 @@
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  2
 /* YYLAST -- Last index in YYTABLE.  */
-#define YYLAST   159
+#define YYLAST   166
 
 /* YYNTOKENS -- Number of terminals.  */
-#define YYNTOKENS  80
+#define YYNTOKENS  81
 /* YYNNTS -- Number of nonterminals.  */
-#define YYNNTS  84
+#define YYNNTS  85
 /* YYNRULES -- Number of rules.  */
-#define YYNRULES  156
-/* YYNRULES -- Number of states.  */
-#define YYNSTATES  232
+#define YYNRULES  158
+/* YYNSTATES -- Number of states.  */
+#define YYNSTATES  235
 
-/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
+/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
+   by yylex, with out-of-bounds checking.  */
 #define YYUNDEFTOK  2
-#define YYMAXUTOK   334
+#define YYMAXUTOK   335
 
-#define YYTRANSLATE(YYX)						\
+#define YYTRANSLATE(YYX)                                                \
   ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)
 
-/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
+/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
+   as returned by yylex, without out-of-bounds checking.  */
 static const yytype_uint8 yytranslate[] =
 {
        0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
@@ -605,78 +612,11 @@
       45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
       55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
       65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
-      75,    76,    77,    78,    79
+      75,    76,    77,    78,    79,    80
 };
 
 #if YYDEBUG
-/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
-   YYRHS.  */
-static const yytype_uint16 yyprhs[] =
-{
-       0,     0,     3,     4,     7,    10,    13,    16,    19,    22,
-      24,    27,    28,    30,    32,    34,    36,    38,    40,    42,
-      44,    46,    48,    50,    52,    54,    56,    58,    60,    62,
-      64,    66,    68,    70,    72,    74,    76,    78,    80,    82,
-      84,    86,    88,    90,    92,    94,    96,    98,   100,   102,
-     104,   106,   108,   110,   113,   116,   119,   122,   125,   128,
-     131,   134,   137,   140,   143,   146,   149,   152,   155,   158,
-     161,   164,   167,   170,   173,   176,   179,   182,   185,   188,
-     191,   194,   197,   200,   203,   206,   209,   212,   215,   218,
-     221,   224,   227,   230,   233,   235,   238,   239,   241,   243,
-     245,   247,   249,   251,   253,   256,   259,   262,   265,   268,
-     271,   274,   276,   279,   281,   283,   285,   287,   289,   291,
-     293,   295,   297,   299,   301,   303,   305,   307,   310,   313,
-     315,   318,   320,   322,   324,   327,   330,   333,   337,   340,
-     343,   347,   351,   355,   358,   362,   365,   368,   371,   373,
-     376,   378,   380,   382,   384,   387,   390
-};
-
-/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
-static const yytype_int16 yyrhs[] =
-{
-      81,     0,    -1,    -1,    81,    82,    -1,    83,    84,    -1,
-     143,   144,    -1,   158,   159,    -1,   137,   138,    -1,   127,
-     128,    -1,    11,    -1,    84,    85,    -1,    -1,    86,    -1,
-      87,    -1,    88,    -1,    91,    -1,    92,    -1,    96,    -1,
-      97,    -1,    98,    -1,    99,    -1,   102,    -1,   103,    -1,
-     104,    -1,   105,    -1,   106,    -1,   107,    -1,   108,    -1,
-     109,    -1,   112,    -1,   113,    -1,   114,    -1,   115,    -1,
-     116,    -1,   117,    -1,   118,    -1,    89,    -1,    90,    -1,
-     110,    -1,   111,    -1,   119,    -1,   120,    -1,   121,    -1,
-     122,    -1,   123,    -1,   124,    -1,   125,    -1,    93,    -1,
-      94,    -1,   126,    -1,   100,    -1,   101,    -1,    95,    -1,
-      13,    10,    -1,    14,    10,    -1,    15,    10,    -1,    53,
-      10,    -1,    54,    10,    -1,    16,    10,    -1,    17,    10,
-      -1,    37,    10,    -1,    38,    10,    -1,    79,    10,    -1,
-      18,    10,    -1,    19,    10,    -1,    20,    10,    -1,    21,
-      10,    -1,    76,    10,    -1,    77,    10,    -1,    22,    10,
-      -1,    23,    10,    -1,    24,    10,    -1,    25,    10,    -1,
-      26,    10,    -1,    27,    10,    -1,    28,    10,    -1,    29,
-      10,    -1,    57,    10,    -1,    66,    10,    -1,    31,    10,
-      -1,    30,    10,    -1,    32,    10,    -1,    33,    10,    -1,
-      34,    10,    -1,    35,    10,    -1,    36,    10,    -1,    67,
-      10,    -1,    68,    10,    -1,    69,    10,    -1,    70,    10,
-      -1,    71,    10,    -1,    72,    10,    -1,    74,    10,    -1,
-      75,    10,    -1,    58,    -1,   128,   129,    -1,    -1,   130,
-      -1,   132,    -1,   131,    -1,   133,    -1,   134,    -1,   135,
-      -1,   136,    -1,    59,    10,    -1,    61,    10,    -1,    60,
-      10,    -1,    62,    10,    -1,    63,    10,    -1,    64,    10,
-      -1,    65,    10,    -1,    55,    -1,   138,   139,    -1,   139,
-      -1,   141,    -1,   140,    -1,   147,    -1,   149,    -1,   150,
-      -1,   152,    -1,   153,    -1,   154,    -1,   155,    -1,   156,
-      -1,   142,    -1,   157,    -1,   148,    -1,    12,    10,    -1,
-      56,    10,    -1,    40,    -1,   144,   145,    -1,   145,    -1,
-     146,    -1,   140,    -1,    12,    10,    -1,    39,    10,    -1,
-      78,    10,    -1,    41,    10,    10,    -1,    42,   151,    -1,
-      10,    10,    -1,    51,    10,    10,    -1,    52,    10,    10,
-      -1,    43,    10,    10,    -1,    45,    10,    -1,    44,    10,
-      10,    -1,    46,    10,    -1,    47,    10,    -1,    73,    10,
-      -1,    48,    -1,   159,   160,    -1,   160,    -1,   161,    -1,
-     162,    -1,   163,    -1,    12,    10,    -1,    49,    10,    -1,
-      50,    10,    -1
-};
-
-/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
+  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
 static const yytype_uint16 yyrline[] =
 {
        0,    73,    73,    73,    74,    74,    75,    75,    76,    79,
@@ -691,10 +631,10 @@
      432,   442,   450,   458,   467,   472,   473,   474,   474,   474,
      475,   475,   475,   476,   478,   486,   494,   504,   510,   516,
      522,   530,   564,   564,   565,   565,   566,   566,   566,   567,
-     567,   567,   568,   568,   568,   569,   569,   570,   582,   593,
-     630,   630,   631,   631,   632,   652,   661,   670,   681,   685,
-     697,   710,   724,   737,   748,   759,   771,   782,   792,   804,
-     804,   805,   805,   805,   806,   820,   831
+     567,   567,   568,   568,   568,   569,   569,   569,   570,   582,
+     593,   630,   630,   631,   631,   632,   652,   661,   670,   681,
+     685,   693,   705,   718,   732,   745,   756,   767,   779,   790,
+     800,   812,   812,   813,   813,   813,   814,   828,   839
 };
 #endif
 
@@ -713,10 +653,10 @@
   "VAR_XFRD_RELOAD_TIMEOUT", "VAR_TCP_QUERY_COUNT", "VAR_TCP_TIMEOUT",
   "VAR_IPV4_EDNS_SIZE", "VAR_IPV6_EDNS_SIZE", "VAR_DO_IP4", "VAR_DO_IP6",
   "VAR_ZONEFILE", "VAR_ZONE", "VAR_ALLOW_NOTIFY", "VAR_REQUEST_XFR",
-  "VAR_NOTIFY", "VAR_PROVIDE_XFR", "VAR_NOTIFY_RETRY",
-  "VAR_OUTGOING_INTERFACE", "VAR_ALLOW_AXFR_FALLBACK", "VAR_KEY",
-  "VAR_ALGORITHM", "VAR_SECRET", "VAR_AXFR", "VAR_UDP", "VAR_VERBOSITY",
-  "VAR_HIDE_VERSION", "VAR_PATTERN", "VAR_INCLUDEPATTERN",
+  "VAR_NOTIFY", "VAR_PROVIDE_XFR", "VAR_SIZE_LIMIT_XFR",
+  "VAR_NOTIFY_RETRY", "VAR_OUTGOING_INTERFACE", "VAR_ALLOW_AXFR_FALLBACK",
+  "VAR_KEY", "VAR_ALGORITHM", "VAR_SECRET", "VAR_AXFR", "VAR_UDP",
+  "VAR_VERBOSITY", "VAR_HIDE_VERSION", "VAR_PATTERN", "VAR_INCLUDEPATTERN",
   "VAR_ZONELISTFILE", "VAR_REMOTE_CONTROL", "VAR_CONTROL_ENABLE",
   "VAR_CONTROL_INTERFACE", "VAR_CONTROL_PORT", "VAR_SERVER_KEY_FILE",
   "VAR_SERVER_CERT_FILE", "VAR_CONTROL_KEY_FILE", "VAR_CONTROL_CERT_FILE",
@@ -746,17 +686,17 @@
   "contents_pattern", "content_pattern", "zone_config_item",
   "pattern_name", "include_pattern", "zonestart", "contents_zone",
   "content_zone", "zone_name", "zone_zonefile", "zone_zonestats",
-  "zone_allow_notify", "zone_request_xfr", "zone_request_xfr_data",
-  "zone_notify", "zone_notify_retry", "zone_provide_xfr",
-  "zone_outgoing_interface", "zone_allow_axfr_fallback",
-  "zone_rrl_whitelist", "keystart", "contents_key", "content_key",
-  "key_name", "key_algorithm", "key_secret", YY_NULL
+  "zone_allow_notify", "zone_request_xfr", "zone_size_limit_xfr",
+  "zone_request_xfr_data", "zone_notify", "zone_notify_retry",
+  "zone_provide_xfr", "zone_outgoing_interface",
+  "zone_allow_axfr_fallback", "zone_rrl_whitelist", "keystart",
+  "contents_key", "content_key", "key_name", "key_algorithm", "key_secret", YY_NULLPTR
 };
 #endif
 
 # ifdef YYPRINT
-/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
-   token YYLEX-NUM.  */
+/* YYTOKNUM[NUM] -- (External) token number corresponding to the
+   (internal) symbol number NUM (which must be that of a token).  */
 static const yytype_uint16 yytoknum[] =
 {
        0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
@@ -766,246 +706,237 @@
      295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
-     325,   326,   327,   328,   329,   330,   331,   332,   333,   334
+     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
+     335
 };
 # endif
 
-/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
-static const yytype_uint8 yyr1[] =
-{
-       0,    80,    81,    81,    82,    82,    82,    82,    82,    83,
-      84,    84,    85,    85,    85,    85,    85,    85,    85,    85,
-      85,    85,    85,    85,    85,    85,    85,    85,    85,    85,
-      85,    85,    85,    85,    85,    85,    85,    85,    85,    85,
-      85,    85,    85,    85,    85,    85,    85,    85,    85,    85,
-      85,    85,    85,    86,    87,    88,    89,    90,    91,    92,
-      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
-     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
-     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
-     123,   124,   125,   126,   127,   128,   128,   129,   129,   129,
-     129,   129,   129,   129,   130,   131,   132,   133,   134,   135,
-     136,   137,   138,   138,   139,   139,   140,   140,   140,   140,
-     140,   140,   140,   140,   140,   140,   140,   141,   142,   143,
-     144,   144,   145,   145,   146,   147,   148,   149,   150,   151,
-     151,   151,   152,   153,   154,   155,   156,   157,   158,   159,
-     159,   160,   160,   160,   161,   162,   163
-};
+#define YYPACT_NINF -34
 
-/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
-static const yytype_uint8 yyr2[] =
+#define yypact_value_is_default(Yystate) \
+  (!!((Yystate) == (-34)))
+
+#define YYTABLE_NINF -1
+
+#define yytable_value_is_error(Yytable_value) \
+  0
+
+  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
+     STATE-NUM.  */
+static const yytype_int16 yypact[] =
 {
-       0,     2,     0,     2,     2,     2,     2,     2,     2,     1,
-       2,     0,     1,     1,     1,     1,     1,     1,     1,     1,
-       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
-       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
-       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
-       1,     1,     1,     2,     2,     2,     2,     2,     2,     2,
-       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
-       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
-       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
-       2,     2,     2,     2,     1,     2,     0,     1,     1,     1,
-       1,     1,     1,     1,     2,     2,     2,     2,     2,     2,
-       2,     1,     2,     1,     1,     1,     1,     1,     1,     1,
-       1,     1,     1,     1,     1,     1,     1,     2,     2,     1,
-       2,     1,     1,     1,     2,     2,     2,     3,     2,     2,
-       3,     3,     3,     2,     3,     2,     2,     2,     1,     2,
-       1,     1,     1,     1,     2,     2,     2
+     -34,    36,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,
+     -34,    27,    66,    32,   -13,   -33,    24,    25,    30,    28,
+      33,    38,    39,    40,    41,    42,    43,    67,    69,    27,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,
+     -34,   -34,   -34,   -34,   -34,    76,   -34,    66,   -34,   -34,
+      77,    78,    79,    32,   -34,   -34,   -34,   -34,    80,    81,
+      83,    84,    86,    87,    88,    89,    90,    92,    93,    94,
+     105,   106,   107,   108,   109,   110,   111,   112,   114,   115,
+     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
+     126,   127,   128,   129,   131,   132,   133,   134,   136,   -34,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,
+     -34,   137,   138,   139,   140,   141,   142,   143,   -34,   -34,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   144,   145,
+     146,   147,   -34,   148,   149,   -34,   -34,   -34,   -34,   -34,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   150,
+     151,   -34,   -34,   -34,   -34
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
-   means the default is an error.  */
+  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
+     Performed when YYTABLE does not specify something else to do.  Zero
+     means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
-       2,     0,     1,     9,   129,   148,   111,    94,     3,    11,
+       2,     0,     1,     9,   130,   150,   111,    94,     3,    11,
       96,     0,     0,     0,     4,     8,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     7,   113,
-     115,   114,   124,   116,   126,   117,   118,   119,   120,   121,
-     122,   123,   125,     0,   133,     5,   131,   132,     0,     0,
-       0,     6,   150,   151,   152,   153,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     7,
+     113,   115,   114,   124,   116,   126,   117,   118,   127,   119,
+     120,   121,   122,   123,   125,     0,   134,     5,   132,   133,
+       0,     0,     0,     6,   152,   153,   154,   155,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,    10,    12,    13,
-      14,    36,    37,    15,    16,    47,    48,    52,    17,    18,
-      19,    20,    50,    51,    21,    22,    23,    24,    25,    26,
-      27,    28,    38,    39,    29,    30,    31,    32,    33,    34,
-      35,    40,    41,    42,    43,    44,    45,    46,    49,     0,
-       0,     0,     0,     0,     0,     0,    95,    97,    99,    98,
-     100,   101,   102,   103,   127,   135,     0,     0,     0,     0,
-     138,     0,     0,   143,   145,   146,   128,   147,   136,   112,
-     134,   130,   154,   155,   156,   149,    53,    54,    55,    58,
-      59,    63,    64,    65,    66,    69,    70,    71,    72,    73,
-      74,    75,    76,    80,    79,    81,    82,    83,    84,    85,
-      60,    61,    56,    57,    77,    78,    86,    87,    88,    89,
-      90,    91,    92,    93,    67,    68,    62,   104,   106,   105,
-     107,   108,   109,   110,   137,   139,     0,     0,   142,   144,
-     140,   141
-};
-
-/* YYDEFGOTO[NTERM-NUM].  */
-static const yytype_int16 yydefgoto[] =
-{
-      -1,     1,     8,     9,    14,    97,    98,    99,   100,   101,
-     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
-     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
-     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
-     132,   133,   134,   135,   136,   137,   138,    10,    15,   146,
-     147,   148,   149,   150,   151,   152,   153,    11,    28,    29,
-      30,    31,    32,    12,    45,    46,    47,    33,    34,    35,
-      36,   160,    37,    38,    39,    40,    41,    42,    13,    51,
-      52,    53,    54,    55
+       0,     0,     0,     0,     0,     0,     0,     0,     0,    10,
+      12,    13,    14,    36,    37,    15,    16,    47,    48,    52,
+      17,    18,    19,    20,    50,    51,    21,    22,    23,    24,
+      25,    26,    27,    28,    38,    39,    29,    30,    31,    32,
+      33,    34,    35,    40,    41,    42,    43,    44,    45,    46,
+      49,     0,     0,     0,     0,     0,     0,     0,    95,    97,
+      99,    98,   100,   101,   102,   103,   128,   136,     0,     0,
+       0,     0,   139,     0,     0,   140,   145,   147,   148,   129,
+     149,   137,   112,   135,   131,   156,   157,   158,   151,    53,
+      54,    55,    58,    59,    63,    64,    65,    66,    69,    70,
+      71,    72,    73,    74,    75,    76,    80,    79,    81,    82,
+      83,    84,    85,    60,    61,    56,    57,    77,    78,    86,
+      87,    88,    89,    90,    91,    92,    93,    67,    68,    62,
+     104,   106,   105,   107,   108,   109,   110,   138,   141,     0,
+       0,   144,   146,   142,   143
 };
 
-/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
-   STATE-NUM.  */
-#define YYPACT_NINF -32
-static const yytype_int16 yypact[] =
+  /* YYPGOTO[NTERM-NUM].  */
+static const yytype_int8 yypgoto[] =
 {
-     -32,    35,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
-     -32,    26,    64,    31,   -13,   -31,    16,    29,    32,    27,
-      37,    38,    39,    40,    41,    42,    67,    74,    26,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
-     -32,   -32,   -32,    75,   -32,    64,   -32,   -32,    76,    77,
-      78,    31,   -32,   -32,   -32,   -32,    79,    81,    82,    84,
-      85,    86,    87,    88,    90,    91,    92,   102,   103,   104,
-     105,   106,   107,   108,   109,   111,   112,   113,   114,   115,
-     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
-     126,   128,   129,   130,   131,   133,   134,   -32,   -32,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   135,
-     136,   137,   138,   139,   140,   141,   -32,   -32,   -32,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   142,   143,   144,   145,
-     -32,   146,   147,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   148,   149,   -32,   -32,
-     -32,   -32
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,     8,
+      14,   -34,   -34,   -34,   -34,    -1,   -34,   -34,   -34,   -34,
+     -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,   -34,
+     -34,   113,   -34,   -34,   -34
 };
 
-/* YYPGOTO[NTERM-NUM].  */
-static const yytype_int8 yypgoto[] =
+  /* YYDEFGOTO[NTERM-NUM].  */
+static const yytype_int16 yydefgoto[] =
 {
-     -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,     8,
-      15,   -32,   -32,   -32,   -32,     0,   -32,   -32,   -32,   -32,
-     -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
-      23,   -32,   -32,   -32
+      -1,     1,     8,     9,    14,    99,   100,   101,   102,   103,
+     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
+     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
+     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
+     134,   135,   136,   137,   138,   139,   140,    10,    15,   148,
+     149,   150,   151,   152,   153,   154,   155,    11,    29,    30,
+      31,    32,    33,    12,    47,    48,    49,    34,    35,    36,
+      37,    38,   162,    39,    40,    41,    42,    43,    44,    13,
+      53,    54,    55,    56,    57
 };
 
-/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
-   positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
-#define YYTABLE_NINF -1
+  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
+     positive, shift that token.  If negative, reduce the rule whose
+     number is the opposite.  If YYTABLE_NINF, syntax error.  */
 static const yytype_uint8 yytable[] =
 {
-      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
-      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
-      76,    77,    78,    79,    80,    81,   154,    44,   139,   140,
-     141,   142,   143,   144,   145,     2,   169,   157,    16,   155,
-      82,    83,   156,    48,    84,   171,     3,   161,   162,   163,
-     164,   165,   166,    85,    86,    87,    88,    89,    90,    91,
-      44,    92,    93,    94,    95,    17,    96,    18,    19,    20,
-      21,    22,    23,    24,   175,     4,    43,   167,   158,   159,
-      49,    50,    25,     5,   168,   170,   172,   173,   174,   176,
-       6,   177,   178,     7,   179,   180,   181,   182,   183,    26,
-     184,   185,   186,    17,    27,    18,    19,    20,    21,    22,
-      23,    24,   187,   188,   189,   190,   191,   192,   193,   194,
-      25,   195,   196,   197,   198,   199,   200,   201,   202,   203,
-     204,   205,   206,   207,   208,   209,   210,    26,   211,   212,
-     213,   214,    27,   215,   216,   217,   218,   219,   220,   221,
-     222,   223,   224,   225,   226,   227,   228,   229,   230,   231
+      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
+      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
+      78,    79,    80,    81,    82,    83,    46,   141,   142,   143,
+     144,   145,   146,   147,   156,   157,     2,   172,   159,    16,
+     158,    84,    85,   163,    50,    86,   174,     3,   164,   165,
+     166,   167,   168,   169,    87,    88,    89,    90,    91,    92,
+      93,    46,    94,    95,    96,    97,    17,    98,    18,    19,
+      20,    21,    22,    23,    24,    25,     4,   170,    45,   171,
+     160,   161,    51,    52,    26,     5,   173,   175,   176,   177,
+     179,   180,     6,   181,   182,     7,   183,   184,   185,   186,
+     187,    27,   188,   189,   190,    17,    28,    18,    19,    20,
+      21,    22,    23,    24,    25,   191,   192,   193,   194,   195,
+     196,   197,   198,    26,   199,   200,   201,   202,   203,   204,
+     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
+      27,   215,   216,   217,   218,    28,   219,   220,   221,   222,
+     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
+     233,   234,     0,     0,     0,     0,   178
 };
 
-#define yypact_value_is_default(Yystate) \
-  (!!((Yystate) == (-32)))
-
-#define yytable_value_is_error(Yytable_value) \
-  YYID (0)
-
-static const yytype_uint8 yycheck[] =
+static const yytype_int8 yycheck[] =
 {
       13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
       23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
-      33,    34,    35,    36,    37,    38,    10,    12,    59,    60,
-      61,    62,    63,    64,    65,     0,    28,    10,    12,    10,
-      53,    54,    10,    12,    57,    45,    11,    10,    10,    10,
-      10,    10,    10,    66,    67,    68,    69,    70,    71,    72,
-      45,    74,    75,    76,    77,    39,    79,    41,    42,    43,
-      44,    45,    46,    47,    51,    40,    12,    10,    51,    52,
-      49,    50,    56,    48,    10,    10,    10,    10,    10,    10,
-      55,    10,    10,    58,    10,    10,    10,    10,    10,    73,
-      10,    10,    10,    39,    78,    41,    42,    43,    44,    45,
-      46,    47,    10,    10,    10,    10,    10,    10,    10,    10,
-      56,    10,    10,    10,    10,    10,    10,    10,    10,    10,
-      10,    10,    10,    10,    10,    10,    10,    73,    10,    10,
-      10,    10,    78,    10,    10,    10,    10,    10,    10,    10,
-      10,    10,    10,    10,    10,    10,    10,    10,    10,    10
+      33,    34,    35,    36,    37,    38,    12,    60,    61,    62,
+      63,    64,    65,    66,    10,    10,     0,    29,    10,    12,
+      10,    54,    55,    10,    12,    58,    47,    11,    10,    10,
+      10,    10,    10,    10,    67,    68,    69,    70,    71,    72,
+      73,    47,    75,    76,    77,    78,    39,    80,    41,    42,
+      43,    44,    45,    46,    47,    48,    40,    10,    12,    10,
+      52,    53,    50,    51,    57,    49,    10,    10,    10,    10,
+      10,    10,    56,    10,    10,    59,    10,    10,    10,    10,
+      10,    74,    10,    10,    10,    39,    79,    41,    42,    43,
+      44,    45,    46,    47,    48,    10,    10,    10,    10,    10,
+      10,    10,    10,    57,    10,    10,    10,    10,    10,    10,
+      10,    10,    10,    10,    10,    10,    10,    10,    10,    10,
+      74,    10,    10,    10,    10,    79,    10,    10,    10,    10,
+      10,    10,    10,    10,    10,    10,    10,    10,    10,    10,
+      10,    10,    -1,    -1,    -1,    -1,    53
 };
 
-/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
-   symbol of state STATE-NUM.  */
+  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
+     symbol of state STATE-NUM.  */
 static const yytype_uint8 yystos[] =
 {
-       0,    81,     0,    11,    40,    48,    55,    58,    82,    83,
-     127,   137,   143,   158,    84,   128,    12,    39,    41,    42,
-      43,    44,    45,    46,    47,    56,    73,    78,   138,   139,
-     140,   141,   142,   147,   148,   149,   150,   152,   153,   154,
-     155,   156,   157,    12,   140,   144,   145,   146,    12,    49,
-      50,   159,   160,   161,   162,   163,    13,    14,    15,    16,
-      17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
-      27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
-      37,    38,    53,    54,    57,    66,    67,    68,    69,    70,
-      71,    72,    74,    75,    76,    77,    79,    85,    86,    87,
-      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
-      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
-     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
-     118,   119,   120,   121,   122,   123,   124,   125,   126,    59,
-      60,    61,    62,    63,    64,    65,   129,   130,   131,   132,
-     133,   134,   135,   136,    10,    10,    10,    10,    51,    52,
-     151,    10,    10,    10,    10,    10,    10,    10,    10,   139,
-      10,   145,    10,    10,    10,   160,    10,    10,    10,    10,
+       0,    82,     0,    11,    40,    49,    56,    59,    83,    84,
+     128,   138,   144,   160,    85,   129,    12,    39,    41,    42,
+      43,    44,    45,    46,    47,    48,    57,    74,    79,   139,
+     140,   141,   142,   143,   148,   149,   150,   151,   152,   154,
+     155,   156,   157,   158,   159,    12,   141,   145,   146,   147,
+      12,    50,    51,   161,   162,   163,   164,   165,    13,    14,
+      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
+      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
+      35,    36,    37,    38,    54,    55,    58,    67,    68,    69,
+      70,    71,    72,    73,    75,    76,    77,    78,    80,    86,
+      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
+      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
+     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
+     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
+     127,    60,    61,    62,    63,    64,    65,    66,   130,   131,
+     132,   133,   134,   135,   136,   137,    10,    10,    10,    10,
+      52,    53,   153,    10,    10,    10,    10,    10,    10,    10,
+      10,    10,   140,    10,   146,    10,    10,    10,   162,    10,
       10,    10,    10,    10,    10,    10,    10,    10,    10,    10,
       10,    10,    10,    10,    10,    10,    10,    10,    10,    10,
       10,    10,    10,    10,    10,    10,    10,    10,    10,    10,
       10,    10,    10,    10,    10,    10,    10,    10,    10,    10,
       10,    10,    10,    10,    10,    10,    10,    10,    10,    10,
-      10,    10
+      10,    10,    10,    10,    10
 };
 
-#define yyerrok		(yyerrstatus = 0)
-#define yyclearin	(yychar = YYEMPTY)
-#define YYEMPTY		(-2)
-#define YYEOF		0
-
-#define YYACCEPT	goto yyacceptlab
-#define YYABORT		goto yyabortlab
-#define YYERROR		goto yyerrorlab
-
-
-/* Like YYERROR except do call yyerror.  This remains here temporarily
-   to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
-
-#define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
+  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
+static const yytype_uint8 yyr1[] =
+{
+       0,    81,    82,    82,    83,    83,    83,    83,    83,    84,
+      85,    85,    86,    86,    86,    86,    86,    86,    86,    86,
+      86,    86,    86,    86,    86,    86,    86,    86,    86,    86,
+      86,    86,    86,    86,    86,    86,    86,    86,    86,    86,
+      86,    86,    86,    86,    86,    86,    86,    86,    86,    86,
+      86,    86,    86,    87,    88,    89,    90,    91,    92,    93,
+      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
+     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
+     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
+     124,   125,   126,   127,   128,   129,   129,   130,   130,   130,
+     130,   130,   130,   130,   131,   132,   133,   134,   135,   136,
+     137,   138,   139,   139,   140,   140,   141,   141,   141,   141,
+     141,   141,   141,   141,   141,   141,   141,   141,   142,   143,
+     144,   145,   145,   146,   146,   147,   148,   149,   150,   151,
+     152,   153,   153,   153,   154,   155,   156,   157,   158,   159,
+     160,   161,   161,   162,   162,   162,   163,   164,   165
+};
+
+  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
+static const yytype_uint8 yyr2[] =
+{
+       0,     2,     0,     2,     2,     2,     2,     2,     2,     1,
+       2,     0,     1,     1,     1,     1,     1,     1,     1,     1,
+       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
+       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
+       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
+       1,     1,     1,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     1,     2,     0,     1,     1,     1,
+       1,     1,     1,     1,     2,     2,     2,     2,     2,     2,
+       2,     1,     2,     1,     1,     1,     1,     1,     1,     1,
+       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
+       1,     2,     1,     1,     1,     2,     2,     2,     3,     2,
+       2,     2,     3,     3,     3,     2,     3,     2,     2,     2,
+       1,     2,     1,     1,     1,     1,     2,     2,     2
+};
+
+
+#define yyerrok         (yyerrstatus = 0)
+#define yyclearin       (yychar = YYEMPTY)
+#define YYEMPTY         (-2)
+#define YYEOF           0
+
+#define YYACCEPT        goto yyacceptlab
+#define YYABORT         goto yyabortlab
+#define YYERROR         goto yyerrorlab
+
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -1022,27 +953,15 @@
   else                                                          \
     {                                                           \
       yyerror (YY_("syntax error: cannot back up")); \
-      YYERROR;							\
-    }								\
-while (YYID (0))
+      YYERROR;                                                  \
+    }                                                           \
+while (0)
 
 /* Error token number */
-#define YYTERROR	1
-#define YYERRCODE	256
+#define YYTERROR        1
+#define YYERRCODE       256
 
 
-/* This macro is provided for backward compatibility. */
-#ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
-#endif
-
-
-/* YYLEX -- calling `yylex' with the right arguments.  */
-#ifdef YYLEX_PARAM
-# define YYLEX yylex (YYLEX_PARAM)
-#else
-# define YYLEX yylex ()
-#endif
 
 /* Enable debugging if requested.  */
 #if YYDEBUG
@@ -1052,40 +971,36 @@
 #  define YYFPRINTF fprintf
 # endif
 
-# define YYDPRINTF(Args)			\
-do {						\
-  if (yydebug)					\
-    YYFPRINTF Args;				\
-} while (YYID (0))
-
-# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
-do {									  \
-  if (yydebug)								  \
-    {									  \
-      YYFPRINTF (stderr, "%s ", Title);					  \
-      yy_symbol_print (stderr,						  \
-		  Type, Value); \
-      YYFPRINTF (stderr, "\n");						  \
-    }									  \
-} while (YYID (0))
+# define YYDPRINTF(Args)                        \
+do {                                            \
+  if (yydebug)                                  \
+    YYFPRINTF Args;                             \
+} while (0)
 
+/* This macro is provided for backward compatibility. */
+#ifndef YY_LOCATION_PRINT
+# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+#endif
 
-/*--------------------------------.
-| Print this symbol on YYOUTPUT.  |
-`--------------------------------*/
 
-/*ARGSUSED*/
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
+# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
+do {                                                                      \
+  if (yydebug)                                                            \
+    {                                                                     \
+      YYFPRINTF (stderr, "%s ", Title);                                   \
+      yy_symbol_print (stderr,                                            \
+                  Type, Value); \
+      YYFPRINTF (stderr, "\n");                                           \
+    }                                                                     \
+} while (0)
+
+
+/*----------------------------------------.
+| Print this symbol's value on YYOUTPUT.  |
+`----------------------------------------*/
+
 static void
 yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
-#else
-static void
-yy_symbol_value_print (yyoutput, yytype, yyvaluep)
-    FILE *yyoutput;
-    int yytype;
-    YYSTYPE const * const yyvaluep;
-#endif
 {
   FILE *yyo = yyoutput;
   YYUSE (yyo);
@@ -1094,14 +1009,8 @@
 # ifdef YYPRINT
   if (yytype < YYNTOKENS)
     YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
-# else
-  YYUSE (yyoutput);
 # endif
-  switch (yytype)
-    {
-      default:
-        break;
-    }
+  YYUSE (yytype);
 }
 
 
@@ -1109,22 +1018,11 @@
 | Print this symbol on YYOUTPUT.  |
 `--------------------------------*/
 
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
 static void
 yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
-#else
-static void
-yy_symbol_print (yyoutput, yytype, yyvaluep)
-    FILE *yyoutput;
-    int yytype;
-    YYSTYPE const * const yyvaluep;
-#endif
 {
-  if (yytype < YYNTOKENS)
-    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
-  else
-    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);
+  YYFPRINTF (yyoutput, "%s %s (",
+             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);
 
   yy_symbol_value_print (yyoutput, yytype, yyvaluep);
   YYFPRINTF (yyoutput, ")");
@@ -1135,16 +1033,8 @@
 | TOP (included).                                                   |
 `------------------------------------------------------------------*/
 
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
 static void
 yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
-#else
-static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
-#endif
 {
   YYFPRINTF (stderr, "Stack now");
   for (; yybottom <= yytop; yybottom++)
@@ -1155,49 +1045,42 @@
   YYFPRINTF (stderr, "\n");
 }
 
-# define YY_STACK_PRINT(Bottom, Top)				\
-do {								\
-  if (yydebug)							\
-    yy_stack_print ((Bottom), (Top));				\
-} while (YYID (0))
+# define YY_STACK_PRINT(Bottom, Top)                            \
+do {                                                            \
+  if (yydebug)                                                  \
+    yy_stack_print ((Bottom), (Top));                           \
+} while (0)
 
 
 /*------------------------------------------------.
 | Report that the YYRULE is going to be reduced.  |
 `------------------------------------------------*/
 
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
 static void
-yy_reduce_print (YYSTYPE *yyvsp, int yyrule)
-#else
-static void
-yy_reduce_print (yyvsp, yyrule)
-    YYSTYPE *yyvsp;
-    int yyrule;
-#endif
+yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule)
 {
+  unsigned long int yylno = yyrline[yyrule];
   int yynrhs = yyr2[yyrule];
   int yyi;
-  unsigned long int yylno = yyrline[yyrule];
   YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
-	     yyrule - 1, yylno);
+             yyrule - 1, yylno);
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
       YYFPRINTF (stderr, "   $%d = ", yyi + 1);
-      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
-		       &(yyvsp[(yyi + 1) - (yynrhs)])
-		       		       );
+      yy_symbol_print (stderr,
+                       yystos[yyssp[yyi + 1 - yynrhs]],
+                       &(yyvsp[(yyi + 1) - (yynrhs)])
+                                              );
       YYFPRINTF (stderr, "\n");
     }
 }
 
-# define YY_REDUCE_PRINT(Rule)		\
-do {					\
-  if (yydebug)				\
-    yy_reduce_print (yyvsp, Rule); \
-} while (YYID (0))
+# define YY_REDUCE_PRINT(Rule)          \
+do {                                    \
+  if (yydebug)                          \
+    yy_reduce_print (yyssp, yyvsp, Rule); \
+} while (0)
 
 /* Nonzero means print parse trace.  It is left uninitialized so that
    multiple parsers can coexist.  */
@@ -1211,7 +1094,7 @@
 
 
 /* YYINITDEPTH -- initial size of the parser's stacks.  */
-#ifndef	YYINITDEPTH
+#ifndef YYINITDEPTH
 # define YYINITDEPTH 200
 #endif
 
@@ -1234,15 +1117,8 @@
 #   define yystrlen strlen
 #  else
 /* Return the length of YYSTR.  */
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
 static YYSIZE_T
 yystrlen (const char *yystr)
-#else
-static YYSIZE_T
-yystrlen (yystr)
-    const char *yystr;
-#endif
 {
   YYSIZE_T yylen;
   for (yylen = 0; yystr[yylen]; yylen++)
@@ -1258,16 +1134,8 @@
 #  else
 /* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
    YYDEST.  */
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
 static char *
 yystpcpy (char *yydest, const char *yysrc)
-#else
-static char *
-yystpcpy (yydest, yysrc)
-    char *yydest;
-    const char *yysrc;
-#endif
 {
   char *yyd = yydest;
   const char *yys = yysrc;
@@ -1297,27 +1165,27 @@
       char const *yyp = yystr;
 
       for (;;)
-	switch (*++yyp)
-	  {
-	  case '\'':
-	  case ',':
-	    goto do_not_strip_quotes;
-
-	  case '\\':
-	    if (*++yyp != '\\')
-	      goto do_not_strip_quotes;
-	    /* Fall through.  */
-	  default:
-	    if (yyres)
-	      yyres[yyn] = *yyp;
-	    yyn++;
-	    break;
-
-	  case '"':
-	    if (yyres)
-	      yyres[yyn] = '\0';
-	    return yyn;
-	  }
+        switch (*++yyp)
+          {
+          case '\'':
+          case ',':
+            goto do_not_strip_quotes;
+
+          case '\\':
+            if (*++yyp != '\\')
+              goto do_not_strip_quotes;
+            /* Fall through.  */
+          default:
+            if (yyres)
+              yyres[yyn] = *yyp;
+            yyn++;
+            break;
+
+          case '"':
+            if (yyres)
+              yyres[yyn] = '\0';
+            return yyn;
+          }
     do_not_strip_quotes: ;
     }
 
@@ -1340,11 +1208,11 @@
 yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                 yytype_int16 *yyssp, int yytoken)
 {
-  YYSIZE_T yysize0 = yytnamerr (YY_NULL, yytname[yytoken]);
+  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
   YYSIZE_T yysize = yysize0;
   enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
   /* Internationalized format string. */
-  const char *yyformat = YY_NULL;
+  const char *yyformat = YY_NULLPTR;
   /* Arguments of yyformat. */
   char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
   /* Number of reported tokens (one for the "unexpected", one per
@@ -1352,10 +1220,6 @@
   int yycount = 0;
 
   /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
      - If this state is a consistent state with a default action, then
        the only way this function was invoked is if the default action
        is an error action.  In that case, don't check for expected
@@ -1405,7 +1269,7 @@
                   }
                 yyarg[yycount++] = yytname[yyx];
                 {
-                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULL, yytname[yyx]);
+                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                   if (! (yysize <= yysize1
                          && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                     return 2;
@@ -1472,31 +1336,17 @@
 | Release the memory associated to this symbol.  |
 `-----------------------------------------------*/
 
-/*ARGSUSED*/
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
 static void
 yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)
-#else
-static void
-yydestruct (yymsg, yytype, yyvaluep)
-    const char *yymsg;
-    int yytype;
-    YYSTYPE *yyvaluep;
-#endif
 {
   YYUSE (yyvaluep);
-
   if (!yymsg)
     yymsg = "Deleting";
   YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);
 
-  switch (yytype)
-    {
-
-      default:
-        break;
-    }
+  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
+  YYUSE (yytype);
+  YY_IGNORE_MAYBE_UNINITIALIZED_END
 }
 
 
@@ -1505,18 +1355,8 @@
 /* The lookahead symbol.  */
 int yychar;
 
-
-#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
-# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
-# define YY_IGNORE_MAYBE_UNINITIALIZED_END
-#endif
-#ifndef YY_INITIAL_VALUE
-# define YY_INITIAL_VALUE(Value) /* Nothing. */
-#endif
-
 /* The semantic value of the lookahead symbol.  */
-YYSTYPE yylval YY_INITIAL_VALUE(yyval_default);
-
+YYSTYPE yylval;
 /* Number of syntax errors so far.  */
 int yynerrs;
 
@@ -1525,35 +1365,16 @@
 | yyparse.  |
 `----------*/
 
-#ifdef YYPARSE_PARAM
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
-int
-yyparse (void *YYPARSE_PARAM)
-#else
-int
-yyparse (YYPARSE_PARAM)
-    void *YYPARSE_PARAM;
-#endif
-#else /* ! YYPARSE_PARAM */
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
 int
 yyparse (void)
-#else
-int
-yyparse ()
-
-#endif
-#endif
 {
     int yystate;
     /* Number of tokens to shift before error messages enabled.  */
     int yyerrstatus;
 
     /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
+       'yyss': related to states.
+       'yyvs': related to semantic values.
 
        Refer to the stacks through separate pointers, to allow yyoverflow
        to reallocate them elsewhere.  */
@@ -1621,23 +1442,23 @@
 
 #ifdef yyoverflow
       {
-	/* Give user a chance to reallocate the stack.  Use copies of
-	   these so that the &'s don't force the real ones into
-	   memory.  */
-	YYSTYPE *yyvs1 = yyvs;
-	yytype_int16 *yyss1 = yyss;
-
-	/* Each stack pointer address is followed by the size of the
-	   data in use in that stack, in bytes.  This used to be a
-	   conditional around just the two extra args, but that might
-	   be undefined if yyoverflow is a macro.  */
-	yyoverflow (YY_("memory exhausted"),
-		    &yyss1, yysize * sizeof (*yyssp),
-		    &yyvs1, yysize * sizeof (*yyvsp),
-		    &yystacksize);
+        /* Give user a chance to reallocate the stack.  Use copies of
+           these so that the &'s don't force the real ones into
+           memory.  */
+        YYSTYPE *yyvs1 = yyvs;
+        yytype_int16 *yyss1 = yyss;
+
+        /* Each stack pointer address is followed by the size of the
+           data in use in that stack, in bytes.  This used to be a
+           conditional around just the two extra args, but that might
+           be undefined if yyoverflow is a macro.  */
+        yyoverflow (YY_("memory exhausted"),
+                    &yyss1, yysize * sizeof (*yyssp),
+                    &yyvs1, yysize * sizeof (*yyvsp),
+                    &yystacksize);
 
-	yyss = yyss1;
-	yyvs = yyvs1;
+        yyss = yyss1;
+        yyvs = yyvs1;
       }
 #else /* no yyoverflow */
 # ifndef YYSTACK_RELOCATE
@@ -1645,22 +1466,22 @@
 # else
       /* Extend the stack our own way.  */
       if (YYMAXDEPTH <= yystacksize)
-	goto yyexhaustedlab;
+        goto yyexhaustedlab;
       yystacksize *= 2;
       if (YYMAXDEPTH < yystacksize)
-	yystacksize = YYMAXDEPTH;
+        yystacksize = YYMAXDEPTH;
 
       {
-	yytype_int16 *yyss1 = yyss;
-	union yyalloc *yyptr =
-	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
-	if (! yyptr)
-	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+        yytype_int16 *yyss1 = yyss;
+        union yyalloc *yyptr =
+          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
+        if (! yyptr)
+          goto yyexhaustedlab;
+        YYSTACK_RELOCATE (yyss_alloc, yyss);
+        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
 #  undef YYSTACK_RELOCATE
-	if (yyss1 != yyssa)
-	  YYSTACK_FREE (yyss1);
+        if (yyss1 != yyssa)
+          YYSTACK_FREE (yyss1);
       }
 # endif
 #endif /* no yyoverflow */
@@ -1669,10 +1490,10 @@
       yyvsp = yyvs + yysize - 1;
 
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
-		  (unsigned long int) yystacksize));
+                  (unsigned long int) yystacksize));
 
       if (yyss + yystacksize - 1 <= yyssp)
-	YYABORT;
+        YYABORT;
     }
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
@@ -1701,7 +1522,7 @@
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
-      yychar = YYLEX;
+      yychar = yylex ();
     }
 
   if (yychar <= YYEOF)
@@ -1766,7 +1587,7 @@
   yylen = yyr2[yyn];
 
   /* If YYLEN is nonzero, implement the default value of the action:
-     `$$ = $1'.
+     '$$ = $1'.
 
      Otherwise, the following line sets YYVAL to garbage.
      This behavior is undocumented and Bison
@@ -1780,21 +1601,20 @@
   switch (yyn)
     {
         case 9:
-/* Line 1792 of yacc.c  */
-#line 80 "configparser.y"
+#line 80 "./configparser.y" /* yacc.c:1646  */
     { OUTYY(("\nP(server:)\n")); 
 		if(cfg_parser->server_settings_seen) {
 			yyerror("duplicate server: element.");
 		}
 		cfg_parser->server_settings_seen = 1;
 	}
+#line 1612 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 53:
-/* Line 1792 of yacc.c  */
-#line 102 "configparser.y"
+#line 102 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_ip_address:%s)\n", (yyvsp[(2) - (2)].str))); 
+		OUTYY(("P(server_ip_address:%s)\n", (yyvsp[0].str))); 
 		if(cfg_parser->current_ip_address_option) {
 			cfg_parser->current_ip_address_option->next = 
 				(ip_address_option_t*)region_alloc(
@@ -1811,555 +1631,555 @@
 		}
 
 		cfg_parser->current_ip_address_option->address = 
-			region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+			region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 1637 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 54:
-/* Line 1792 of yacc.c  */
-#line 124 "configparser.y"
+#line 124 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_ip_transparent:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(strcmp((yyvsp[(2) - (2)].str), "yes") != 0 && strcmp((yyvsp[(2) - (2)].str), "no") != 0)
+		OUTYY(("P(server_ip_transparent:%s)\n", (yyvsp[0].str))); 
+		if(strcmp((yyvsp[0].str), "yes") != 0 && strcmp((yyvsp[0].str), "no") != 0)
 			yyerror("expected yes or no.");
-		else cfg_parser->opt->ip_transparent = (strcmp((yyvsp[(2) - (2)].str), "yes")==0);
+		else cfg_parser->opt->ip_transparent = (strcmp((yyvsp[0].str), "yes")==0);
 	}
+#line 1648 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 55:
-/* Line 1792 of yacc.c  */
-#line 132 "configparser.y"
+#line 132 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_debug_mode:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(strcmp((yyvsp[(2) - (2)].str), "yes") != 0 && strcmp((yyvsp[(2) - (2)].str), "no") != 0)
+		OUTYY(("P(server_debug_mode:%s)\n", (yyvsp[0].str))); 
+		if(strcmp((yyvsp[0].str), "yes") != 0 && strcmp((yyvsp[0].str), "no") != 0)
 			yyerror("expected yes or no.");
-		else cfg_parser->opt->debug_mode = (strcmp((yyvsp[(2) - (2)].str), "yes")==0);
+		else cfg_parser->opt->debug_mode = (strcmp((yyvsp[0].str), "yes")==0);
 	}
+#line 1659 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 56:
-/* Line 1792 of yacc.c  */
-#line 140 "configparser.y"
+#line 140 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_verbosity:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(atoi((yyvsp[(2) - (2)].str)) == 0 && strcmp((yyvsp[(2) - (2)].str), "0") != 0)
+		OUTYY(("P(server_verbosity:%s)\n", (yyvsp[0].str))); 
+		if(atoi((yyvsp[0].str)) == 0 && strcmp((yyvsp[0].str), "0") != 0)
 			yyerror("number expected");
-		else cfg_parser->opt->verbosity = atoi((yyvsp[(2) - (2)].str));
+		else cfg_parser->opt->verbosity = atoi((yyvsp[0].str));
 	}
+#line 1670 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 57:
-/* Line 1792 of yacc.c  */
-#line 148 "configparser.y"
+#line 148 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_hide_version:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(strcmp((yyvsp[(2) - (2)].str), "yes") != 0 && strcmp((yyvsp[(2) - (2)].str), "no") != 0)
+		OUTYY(("P(server_hide_version:%s)\n", (yyvsp[0].str))); 
+		if(strcmp((yyvsp[0].str), "yes") != 0 && strcmp((yyvsp[0].str), "no") != 0)
 			yyerror("expected yes or no.");
-		else cfg_parser->opt->hide_version = (strcmp((yyvsp[(2) - (2)].str), "yes")==0);
+		else cfg_parser->opt->hide_version = (strcmp((yyvsp[0].str), "yes")==0);
 	}
+#line 1681 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 58:
-/* Line 1792 of yacc.c  */
-#line 156 "configparser.y"
+#line 156 "./configparser.y" /* yacc.c:1646  */
     { 
 		/* for backwards compatibility in config file with NSD3 */
-		OUTYY(("P(server_ip4_only:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(strcmp((yyvsp[(2) - (2)].str), "yes") != 0 && strcmp((yyvsp[(2) - (2)].str), "no") != 0)
+		OUTYY(("P(server_ip4_only:%s)\n", (yyvsp[0].str))); 
+		if(strcmp((yyvsp[0].str), "yes") != 0 && strcmp((yyvsp[0].str), "no") != 0)
 			yyerror("expected yes or no.");
-		else if(strcmp((yyvsp[(2) - (2)].str), "yes")==0) {
+		else if(strcmp((yyvsp[0].str), "yes")==0) {
 			cfg_parser->opt->do_ip4 = 1;
 			cfg_parser->opt->do_ip6 = 0;
 		}
 	}
+#line 1696 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 59:
-/* Line 1792 of yacc.c  */
-#line 168 "configparser.y"
+#line 168 "./configparser.y" /* yacc.c:1646  */
     { 
 		/* for backwards compatibility in config file with NSD3 */
-		OUTYY(("P(server_ip6_only:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(strcmp((yyvsp[(2) - (2)].str), "yes") != 0 && strcmp((yyvsp[(2) - (2)].str), "no") != 0)
+		OUTYY(("P(server_ip6_only:%s)\n", (yyvsp[0].str))); 
+		if(strcmp((yyvsp[0].str), "yes") != 0 && strcmp((yyvsp[0].str), "no") != 0)
 			yyerror("expected yes or no.");
-		else if(strcmp((yyvsp[(2) - (2)].str), "yes")==0) {
+		else if(strcmp((yyvsp[0].str), "yes")==0) {
 			cfg_parser->opt->do_ip6 = 1;
 			cfg_parser->opt->do_ip4 = 0;
 		}
 	}
+#line 1711 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 60:
-/* Line 1792 of yacc.c  */
-#line 180 "configparser.y"
+#line 180 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_do_ip4:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(strcmp((yyvsp[(2) - (2)].str), "yes") != 0 && strcmp((yyvsp[(2) - (2)].str), "no") != 0)
+		OUTYY(("P(server_do_ip4:%s)\n", (yyvsp[0].str))); 
+		if(strcmp((yyvsp[0].str), "yes") != 0 && strcmp((yyvsp[0].str), "no") != 0)
 			yyerror("expected yes or no.");
-		else cfg_parser->opt->do_ip4 = (strcmp((yyvsp[(2) - (2)].str), "yes")==0);
+		else cfg_parser->opt->do_ip4 = (strcmp((yyvsp[0].str), "yes")==0);
 	}
+#line 1722 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 61:
-/* Line 1792 of yacc.c  */
-#line 188 "configparser.y"
+#line 188 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_do_ip6:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(strcmp((yyvsp[(2) - (2)].str), "yes") != 0 && strcmp((yyvsp[(2) - (2)].str), "no") != 0)
+		OUTYY(("P(server_do_ip6:%s)\n", (yyvsp[0].str))); 
+		if(strcmp((yyvsp[0].str), "yes") != 0 && strcmp((yyvsp[0].str), "no") != 0)
 			yyerror("expected yes or no.");
-		else cfg_parser->opt->do_ip6 = (strcmp((yyvsp[(2) - (2)].str), "yes")==0);
+		else cfg_parser->opt->do_ip6 = (strcmp((yyvsp[0].str), "yes")==0);
 	}
+#line 1733 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 62:
-/* Line 1792 of yacc.c  */
-#line 196 "configparser.y"
+#line 196 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_reuseport:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(strcmp((yyvsp[(2) - (2)].str), "yes") != 0 && strcmp((yyvsp[(2) - (2)].str), "no") != 0)
+		OUTYY(("P(server_reuseport:%s)\n", (yyvsp[0].str))); 
+		if(strcmp((yyvsp[0].str), "yes") != 0 && strcmp((yyvsp[0].str), "no") != 0)
 			yyerror("expected yes or no.");
-		else cfg_parser->opt->reuseport = (strcmp((yyvsp[(2) - (2)].str), "yes")==0);
+		else cfg_parser->opt->reuseport = (strcmp((yyvsp[0].str), "yes")==0);
 	}
+#line 1744 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 63:
-/* Line 1792 of yacc.c  */
-#line 204 "configparser.y"
+#line 204 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_database:%s)\n", (yyvsp[(2) - (2)].str))); 
-		cfg_parser->opt->database = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+		OUTYY(("P(server_database:%s)\n", (yyvsp[0].str))); 
+		cfg_parser->opt->database = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 		if(cfg_parser->opt->database[0] == 0 &&
 			cfg_parser->opt->zonefiles_write == 0)
 			cfg_parser->opt->zonefiles_write = ZONEFILES_WRITE_INTERVAL;
 	}
+#line 1756 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 64:
-/* Line 1792 of yacc.c  */
-#line 213 "configparser.y"
+#line 213 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_identity:%s)\n", (yyvsp[(2) - (2)].str))); 
-		cfg_parser->opt->identity = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+		OUTYY(("P(server_identity:%s)\n", (yyvsp[0].str))); 
+		cfg_parser->opt->identity = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 1765 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 65:
-/* Line 1792 of yacc.c  */
-#line 219 "configparser.y"
+#line 219 "./configparser.y" /* yacc.c:1646  */
     { 
 		unsigned char* nsid = 0;
 		size_t nsid_len = 0;
 
-		OUTYY(("P(server_nsid:%s)\n", (yyvsp[(2) - (2)].str)));
+		OUTYY(("P(server_nsid:%s)\n", (yyvsp[0].str)));
 
-		if (strncasecmp((yyvsp[(2) - (2)].str), "ascii_", 6) == 0) {
-			nsid_len = strlen((yyvsp[(2) - (2)].str)+6);
+		if (strncasecmp((yyvsp[0].str), "ascii_", 6) == 0) {
+			nsid_len = strlen((yyvsp[0].str)+6);
 			if(nsid_len < 65535) {
 				cfg_parser->opt->nsid = region_alloc(cfg_parser->opt->region, nsid_len*2+1);
-				hex_ntop((uint8_t*)(yyvsp[(2) - (2)].str)+6, nsid_len, (char*)cfg_parser->opt->nsid, nsid_len*2+1);
+				hex_ntop((uint8_t*)(yyvsp[0].str)+6, nsid_len, (char*)cfg_parser->opt->nsid, nsid_len*2+1);
 			} else
 				yyerror("NSID too long");
-		} else if (strlen((yyvsp[(2) - (2)].str)) % 2 != 0) {
+		} else if (strlen((yyvsp[0].str)) % 2 != 0) {
 			yyerror("the NSID must be a hex string of an even length.");
 		} else {
-			nsid_len = strlen((yyvsp[(2) - (2)].str)) / 2;
+			nsid_len = strlen((yyvsp[0].str)) / 2;
 			if(nsid_len < 65535) {
 				nsid = xalloc(nsid_len);
-				if (hex_pton((yyvsp[(2) - (2)].str), nsid, nsid_len) == -1)
+				if (hex_pton((yyvsp[0].str), nsid, nsid_len) == -1)
 					yyerror("hex string cannot be parsed in NSID.");
 				else
-					cfg_parser->opt->nsid = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+					cfg_parser->opt->nsid = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 				free(nsid);
 			} else
 				yyerror("NSID too long");
 		}
 	}
+#line 1798 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 66:
-/* Line 1792 of yacc.c  */
-#line 249 "configparser.y"
+#line 249 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_logfile:%s)\n", (yyvsp[(2) - (2)].str))); 
-		cfg_parser->opt->logfile = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+		OUTYY(("P(server_logfile:%s)\n", (yyvsp[0].str))); 
+		cfg_parser->opt->logfile = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 1807 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 67:
-/* Line 1792 of yacc.c  */
-#line 255 "configparser.y"
+#line 255 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_log_time_ascii:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(strcmp((yyvsp[(2) - (2)].str), "yes") != 0 && strcmp((yyvsp[(2) - (2)].str), "no") != 0)
+		OUTYY(("P(server_log_time_ascii:%s)\n", (yyvsp[0].str))); 
+		if(strcmp((yyvsp[0].str), "yes") != 0 && strcmp((yyvsp[0].str), "no") != 0)
 			yyerror("expected yes or no.");
 		else {
-			cfg_parser->opt->log_time_ascii = (strcmp((yyvsp[(2) - (2)].str), "yes")==0);
+			cfg_parser->opt->log_time_ascii = (strcmp((yyvsp[0].str), "yes")==0);
 			log_time_asc = cfg_parser->opt->log_time_ascii;
 		}
 	}
+#line 1821 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 68:
-/* Line 1792 of yacc.c  */
-#line 266 "configparser.y"
+#line 266 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_round_robin:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(strcmp((yyvsp[(2) - (2)].str), "yes") != 0 && strcmp((yyvsp[(2) - (2)].str), "no") != 0)
+		OUTYY(("P(server_round_robin:%s)\n", (yyvsp[0].str))); 
+		if(strcmp((yyvsp[0].str), "yes") != 0 && strcmp((yyvsp[0].str), "no") != 0)
 			yyerror("expected yes or no.");
 		else {
-			cfg_parser->opt->round_robin = (strcmp((yyvsp[(2) - (2)].str), "yes")==0);
+			cfg_parser->opt->round_robin = (strcmp((yyvsp[0].str), "yes")==0);
 			round_robin = cfg_parser->opt->round_robin;
 		}
 	}
+#line 1835 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 69:
-/* Line 1792 of yacc.c  */
-#line 277 "configparser.y"
+#line 277 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_server_count:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(atoi((yyvsp[(2) - (2)].str)) <= 0)
+		OUTYY(("P(server_server_count:%s)\n", (yyvsp[0].str))); 
+		if(atoi((yyvsp[0].str)) <= 0)
 			yyerror("number greater than zero expected");
-		else cfg_parser->opt->server_count = atoi((yyvsp[(2) - (2)].str));
+		else cfg_parser->opt->server_count = atoi((yyvsp[0].str));
 	}
+#line 1846 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 70:
-/* Line 1792 of yacc.c  */
-#line 285 "configparser.y"
+#line 285 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_tcp_count:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(atoi((yyvsp[(2) - (2)].str)) <= 0)
+		OUTYY(("P(server_tcp_count:%s)\n", (yyvsp[0].str))); 
+		if(atoi((yyvsp[0].str)) <= 0)
 			yyerror("number greater than zero expected");
-		else cfg_parser->opt->tcp_count = atoi((yyvsp[(2) - (2)].str));
+		else cfg_parser->opt->tcp_count = atoi((yyvsp[0].str));
 	}
+#line 1857 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 71:
-/* Line 1792 of yacc.c  */
-#line 293 "configparser.y"
+#line 293 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_pidfile:%s)\n", (yyvsp[(2) - (2)].str))); 
-		cfg_parser->opt->pidfile = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+		OUTYY(("P(server_pidfile:%s)\n", (yyvsp[0].str))); 
+		cfg_parser->opt->pidfile = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 1866 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 72:
-/* Line 1792 of yacc.c  */
-#line 299 "configparser.y"
+#line 299 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_port:%s)\n", (yyvsp[(2) - (2)].str))); 
-		cfg_parser->opt->port = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+		OUTYY(("P(server_port:%s)\n", (yyvsp[0].str))); 
+		cfg_parser->opt->port = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 1875 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 73:
-/* Line 1792 of yacc.c  */
-#line 305 "configparser.y"
+#line 305 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_statistics:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(atoi((yyvsp[(2) - (2)].str)) == 0 && strcmp((yyvsp[(2) - (2)].str), "0") != 0)
+		OUTYY(("P(server_statistics:%s)\n", (yyvsp[0].str))); 
+		if(atoi((yyvsp[0].str)) == 0 && strcmp((yyvsp[0].str), "0") != 0)
 			yyerror("number expected");
-		else cfg_parser->opt->statistics = atoi((yyvsp[(2) - (2)].str));
+		else cfg_parser->opt->statistics = atoi((yyvsp[0].str));
 	}
+#line 1886 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 74:
-/* Line 1792 of yacc.c  */
-#line 313 "configparser.y"
+#line 313 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_chroot:%s)\n", (yyvsp[(2) - (2)].str))); 
-		cfg_parser->opt->chroot = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+		OUTYY(("P(server_chroot:%s)\n", (yyvsp[0].str))); 
+		cfg_parser->opt->chroot = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 1895 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 75:
-/* Line 1792 of yacc.c  */
-#line 319 "configparser.y"
+#line 319 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_username:%s)\n", (yyvsp[(2) - (2)].str))); 
-		cfg_parser->opt->username = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+		OUTYY(("P(server_username:%s)\n", (yyvsp[0].str))); 
+		cfg_parser->opt->username = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 1904 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 76:
-/* Line 1792 of yacc.c  */
-#line 325 "configparser.y"
+#line 325 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_zonesdir:%s)\n", (yyvsp[(2) - (2)].str))); 
-		cfg_parser->opt->zonesdir = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+		OUTYY(("P(server_zonesdir:%s)\n", (yyvsp[0].str))); 
+		cfg_parser->opt->zonesdir = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 1913 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 77:
-/* Line 1792 of yacc.c  */
-#line 331 "configparser.y"
+#line 331 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_zonelistfile:%s)\n", (yyvsp[(2) - (2)].str))); 
-		cfg_parser->opt->zonelistfile = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+		OUTYY(("P(server_zonelistfile:%s)\n", (yyvsp[0].str))); 
+		cfg_parser->opt->zonelistfile = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 1922 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 78:
-/* Line 1792 of yacc.c  */
-#line 337 "configparser.y"
+#line 337 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_xfrdir:%s)\n", (yyvsp[(2) - (2)].str))); 
-		cfg_parser->opt->xfrdir = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+		OUTYY(("P(server_xfrdir:%s)\n", (yyvsp[0].str))); 
+		cfg_parser->opt->xfrdir = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 1931 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 79:
-/* Line 1792 of yacc.c  */
-#line 343 "configparser.y"
+#line 343 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_difffile:%s)\n", (yyvsp[(2) - (2)].str))); 
+		OUTYY(("P(server_difffile:%s)\n", (yyvsp[0].str))); 
 		/* ignore the value for backwards compatibility in config file*/
 	}
+#line 1940 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 80:
-/* Line 1792 of yacc.c  */
-#line 349 "configparser.y"
+#line 349 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_xfrdfile:%s)\n", (yyvsp[(2) - (2)].str))); 
-		cfg_parser->opt->xfrdfile = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+		OUTYY(("P(server_xfrdfile:%s)\n", (yyvsp[0].str))); 
+		cfg_parser->opt->xfrdfile = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 1949 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 81:
-/* Line 1792 of yacc.c  */
-#line 355 "configparser.y"
+#line 355 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_xfrd_reload_timeout:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(atoi((yyvsp[(2) - (2)].str)) == 0 && strcmp((yyvsp[(2) - (2)].str), "0") != 0)
+		OUTYY(("P(server_xfrd_reload_timeout:%s)\n", (yyvsp[0].str))); 
+		if(atoi((yyvsp[0].str)) == 0 && strcmp((yyvsp[0].str), "0") != 0)
 			yyerror("number expected");
-		cfg_parser->opt->xfrd_reload_timeout = atoi((yyvsp[(2) - (2)].str));
+		cfg_parser->opt->xfrd_reload_timeout = atoi((yyvsp[0].str));
 	}
+#line 1960 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 82:
-/* Line 1792 of yacc.c  */
-#line 363 "configparser.y"
+#line 363 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_tcp_query_count:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(atoi((yyvsp[(2) - (2)].str)) == 0 && strcmp((yyvsp[(2) - (2)].str), "0") != 0)
+		OUTYY(("P(server_tcp_query_count:%s)\n", (yyvsp[0].str))); 
+		if(atoi((yyvsp[0].str)) == 0 && strcmp((yyvsp[0].str), "0") != 0)
 			yyerror("number expected");
-		cfg_parser->opt->tcp_query_count = atoi((yyvsp[(2) - (2)].str));
+		cfg_parser->opt->tcp_query_count = atoi((yyvsp[0].str));
 	}
+#line 1971 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 83:
-/* Line 1792 of yacc.c  */
-#line 371 "configparser.y"
+#line 371 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_tcp_timeout:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(atoi((yyvsp[(2) - (2)].str)) == 0 && strcmp((yyvsp[(2) - (2)].str), "0") != 0)
+		OUTYY(("P(server_tcp_timeout:%s)\n", (yyvsp[0].str))); 
+		if(atoi((yyvsp[0].str)) == 0 && strcmp((yyvsp[0].str), "0") != 0)
 			yyerror("number expected");
-		cfg_parser->opt->tcp_timeout = atoi((yyvsp[(2) - (2)].str));
+		cfg_parser->opt->tcp_timeout = atoi((yyvsp[0].str));
 	}
+#line 1982 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 84:
-/* Line 1792 of yacc.c  */
-#line 379 "configparser.y"
+#line 379 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_ipv4_edns_size:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(atoi((yyvsp[(2) - (2)].str)) == 0 && strcmp((yyvsp[(2) - (2)].str), "0") != 0)
+		OUTYY(("P(server_ipv4_edns_size:%s)\n", (yyvsp[0].str))); 
+		if(atoi((yyvsp[0].str)) == 0 && strcmp((yyvsp[0].str), "0") != 0)
 			yyerror("number expected");
-		cfg_parser->opt->ipv4_edns_size = atoi((yyvsp[(2) - (2)].str));
+		cfg_parser->opt->ipv4_edns_size = atoi((yyvsp[0].str));
 	}
+#line 1993 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 85:
-/* Line 1792 of yacc.c  */
-#line 387 "configparser.y"
+#line 387 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_ipv6_edns_size:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(atoi((yyvsp[(2) - (2)].str)) == 0 && strcmp((yyvsp[(2) - (2)].str), "0") != 0)
+		OUTYY(("P(server_ipv6_edns_size:%s)\n", (yyvsp[0].str))); 
+		if(atoi((yyvsp[0].str)) == 0 && strcmp((yyvsp[0].str), "0") != 0)
 			yyerror("number expected");
-		cfg_parser->opt->ipv6_edns_size = atoi((yyvsp[(2) - (2)].str));
+		cfg_parser->opt->ipv6_edns_size = atoi((yyvsp[0].str));
 	}
+#line 2004 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 86:
-/* Line 1792 of yacc.c  */
-#line 395 "configparser.y"
+#line 395 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_rrl_size:%s)\n", (yyvsp[(2) - (2)].str))); 
+		OUTYY(("P(server_rrl_size:%s)\n", (yyvsp[0].str))); 
 #ifdef RATELIMIT
-		if(atoi((yyvsp[(2) - (2)].str)) <= 0)
+		if(atoi((yyvsp[0].str)) <= 0)
 			yyerror("number greater than zero expected");
-		cfg_parser->opt->rrl_size = atoi((yyvsp[(2) - (2)].str));
+		cfg_parser->opt->rrl_size = atoi((yyvsp[0].str));
 #endif
 	}
+#line 2017 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 87:
-/* Line 1792 of yacc.c  */
-#line 405 "configparser.y"
+#line 405 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_rrl_ratelimit:%s)\n", (yyvsp[(2) - (2)].str))); 
+		OUTYY(("P(server_rrl_ratelimit:%s)\n", (yyvsp[0].str))); 
 #ifdef RATELIMIT
-		cfg_parser->opt->rrl_ratelimit = atoi((yyvsp[(2) - (2)].str));
+		cfg_parser->opt->rrl_ratelimit = atoi((yyvsp[0].str));
 #endif
 	}
+#line 2028 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 88:
-/* Line 1792 of yacc.c  */
-#line 413 "configparser.y"
+#line 413 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_rrl_slip:%s)\n", (yyvsp[(2) - (2)].str))); 
+		OUTYY(("P(server_rrl_slip:%s)\n", (yyvsp[0].str))); 
 #ifdef RATELIMIT
-		if(atoi((yyvsp[(2) - (2)].str)) < 0)
+		if(atoi((yyvsp[0].str)) < 0)
 			yyerror("number equal or greater than zero expected");
-		cfg_parser->opt->rrl_slip = atoi((yyvsp[(2) - (2)].str));
+		cfg_parser->opt->rrl_slip = atoi((yyvsp[0].str));
 #endif
 	}
+#line 2041 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 89:
-/* Line 1792 of yacc.c  */
-#line 423 "configparser.y"
+#line 423 "./configparser.y" /* yacc.c:1646  */
     {
-		OUTYY(("P(server_rrl_ipv4_prefix_length:%s)\n", (yyvsp[(2) - (2)].str))); 
+		OUTYY(("P(server_rrl_ipv4_prefix_length:%s)\n", (yyvsp[0].str))); 
 #ifdef RATELIMIT
-		if(atoi((yyvsp[(2) - (2)].str)) < 0 || atoi((yyvsp[(2) - (2)].str)) > 32)
+		if(atoi((yyvsp[0].str)) < 0 || atoi((yyvsp[0].str)) > 32)
 			yyerror("invalid IPv4 prefix length");
-		cfg_parser->opt->rrl_ipv4_prefix_length = atoi((yyvsp[(2) - (2)].str));
+		cfg_parser->opt->rrl_ipv4_prefix_length = atoi((yyvsp[0].str));
 #endif
 	}
+#line 2054 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 90:
-/* Line 1792 of yacc.c  */
-#line 433 "configparser.y"
+#line 433 "./configparser.y" /* yacc.c:1646  */
     {
-		OUTYY(("P(server_rrl_ipv6_prefix_length:%s)\n", (yyvsp[(2) - (2)].str))); 
+		OUTYY(("P(server_rrl_ipv6_prefix_length:%s)\n", (yyvsp[0].str))); 
 #ifdef RATELIMIT
-		if(atoi((yyvsp[(2) - (2)].str)) < 0 || atoi((yyvsp[(2) - (2)].str)) > 64)
+		if(atoi((yyvsp[0].str)) < 0 || atoi((yyvsp[0].str)) > 64)
 			yyerror("invalid IPv6 prefix length");
-		cfg_parser->opt->rrl_ipv6_prefix_length = atoi((yyvsp[(2) - (2)].str));
+		cfg_parser->opt->rrl_ipv6_prefix_length = atoi((yyvsp[0].str));
 #endif
 	}
+#line 2067 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 91:
-/* Line 1792 of yacc.c  */
-#line 443 "configparser.y"
+#line 443 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_rrl_whitelist_ratelimit:%s)\n", (yyvsp[(2) - (2)].str))); 
+		OUTYY(("P(server_rrl_whitelist_ratelimit:%s)\n", (yyvsp[0].str))); 
 #ifdef RATELIMIT
-		cfg_parser->opt->rrl_whitelist_ratelimit = atoi((yyvsp[(2) - (2)].str));
+		cfg_parser->opt->rrl_whitelist_ratelimit = atoi((yyvsp[0].str));
 #endif
 	}
+#line 2078 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 92:
-/* Line 1792 of yacc.c  */
-#line 451 "configparser.y"
+#line 451 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_zonefiles_check:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(strcmp((yyvsp[(2) - (2)].str), "yes") != 0 && strcmp((yyvsp[(2) - (2)].str), "no") != 0)
+		OUTYY(("P(server_zonefiles_check:%s)\n", (yyvsp[0].str))); 
+		if(strcmp((yyvsp[0].str), "yes") != 0 && strcmp((yyvsp[0].str), "no") != 0)
 			yyerror("expected yes or no.");
-		else cfg_parser->opt->zonefiles_check = (strcmp((yyvsp[(2) - (2)].str), "yes")==0);
+		else cfg_parser->opt->zonefiles_check = (strcmp((yyvsp[0].str), "yes")==0);
 	}
+#line 2089 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 93:
-/* Line 1792 of yacc.c  */
-#line 459 "configparser.y"
+#line 459 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(server_zonefiles_write:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(atoi((yyvsp[(2) - (2)].str)) == 0 && strcmp((yyvsp[(2) - (2)].str), "0") != 0)
+		OUTYY(("P(server_zonefiles_write:%s)\n", (yyvsp[0].str))); 
+		if(atoi((yyvsp[0].str)) == 0 && strcmp((yyvsp[0].str), "0") != 0)
 			yyerror("number expected");
-		else cfg_parser->opt->zonefiles_write = atoi((yyvsp[(2) - (2)].str));
+		else cfg_parser->opt->zonefiles_write = atoi((yyvsp[0].str));
 	}
+#line 2100 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 94:
-/* Line 1792 of yacc.c  */
-#line 468 "configparser.y"
+#line 468 "./configparser.y" /* yacc.c:1646  */
     {
 		OUTYY(("\nP(remote-control:)\n"));
 	}
+#line 2108 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 104:
-/* Line 1792 of yacc.c  */
-#line 479 "configparser.y"
+#line 479 "./configparser.y" /* yacc.c:1646  */
     {
-		OUTYY(("P(control_enable:%s)\n", (yyvsp[(2) - (2)].str)));
-		if(strcmp((yyvsp[(2) - (2)].str), "yes") != 0 && strcmp((yyvsp[(2) - (2)].str), "no") != 0)
+		OUTYY(("P(control_enable:%s)\n", (yyvsp[0].str)));
+		if(strcmp((yyvsp[0].str), "yes") != 0 && strcmp((yyvsp[0].str), "no") != 0)
 			yyerror("expected yes or no.");
-		else cfg_parser->opt->control_enable = (strcmp((yyvsp[(2) - (2)].str), "yes")==0);
+		else cfg_parser->opt->control_enable = (strcmp((yyvsp[0].str), "yes")==0);
 	}
+#line 2119 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 105:
-/* Line 1792 of yacc.c  */
-#line 487 "configparser.y"
+#line 487 "./configparser.y" /* yacc.c:1646  */
     {
-		OUTYY(("P(control_port:%s)\n", (yyvsp[(2) - (2)].str)));
-		if(atoi((yyvsp[(2) - (2)].str)) == 0)
+		OUTYY(("P(control_port:%s)\n", (yyvsp[0].str)));
+		if(atoi((yyvsp[0].str)) == 0)
 			yyerror("control port number expected");
-		else cfg_parser->opt->control_port = atoi((yyvsp[(2) - (2)].str));
+		else cfg_parser->opt->control_port = atoi((yyvsp[0].str));
 	}
+#line 2130 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 106:
-/* Line 1792 of yacc.c  */
-#line 495 "configparser.y"
+#line 495 "./configparser.y" /* yacc.c:1646  */
     {
 		ip_address_option_t* o = (ip_address_option_t*)region_alloc(
 			cfg_parser->opt->region, sizeof(ip_address_option_t));
-		OUTYY(("P(control_interface:%s)\n", (yyvsp[(2) - (2)].str)));
+		OUTYY(("P(control_interface:%s)\n", (yyvsp[0].str)));
 		o->next = cfg_parser->opt->control_interface;
 		cfg_parser->opt->control_interface = o;
-		o->address = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+		o->address = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 2143 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 107:
-/* Line 1792 of yacc.c  */
-#line 505 "configparser.y"
+#line 505 "./configparser.y" /* yacc.c:1646  */
     {
-	OUTYY(("P(rc_server_key_file:%s)\n", (yyvsp[(2) - (2)].str)));
-	cfg_parser->opt->server_key_file = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+	OUTYY(("P(rc_server_key_file:%s)\n", (yyvsp[0].str)));
+	cfg_parser->opt->server_key_file = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 2152 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 108:
-/* Line 1792 of yacc.c  */
-#line 511 "configparser.y"
+#line 511 "./configparser.y" /* yacc.c:1646  */
     {
-	OUTYY(("P(rc_server_cert_file:%s)\n", (yyvsp[(2) - (2)].str)));
-	cfg_parser->opt->server_cert_file = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+	OUTYY(("P(rc_server_cert_file:%s)\n", (yyvsp[0].str)));
+	cfg_parser->opt->server_cert_file = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 2161 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 109:
-/* Line 1792 of yacc.c  */
-#line 517 "configparser.y"
+#line 517 "./configparser.y" /* yacc.c:1646  */
     {
-	OUTYY(("P(rc_control_key_file:%s)\n", (yyvsp[(2) - (2)].str)));
-	cfg_parser->opt->control_key_file = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+	OUTYY(("P(rc_control_key_file:%s)\n", (yyvsp[0].str)));
+	cfg_parser->opt->control_key_file = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 2170 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 110:
-/* Line 1792 of yacc.c  */
-#line 523 "configparser.y"
+#line 523 "./configparser.y" /* yacc.c:1646  */
     {
-	OUTYY(("P(rc_control_cert_file:%s)\n", (yyvsp[(2) - (2)].str)));
-	cfg_parser->opt->control_cert_file = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+	OUTYY(("P(rc_control_cert_file:%s)\n", (yyvsp[0].str)));
+	cfg_parser->opt->control_cert_file = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 2179 "configparser.c" /* yacc.c:1646  */
     break;
 
   case 111:
-/* Line 1792 of yacc.c  */
-#line 531 "configparser.y"
+#line 531 "./configparser.y" /* yacc.c:1646  */
     { 
 		OUTYY(("\nP(pattern:)\n")); 
 		if(cfg_parser->current_zone) {
@@ -2392,38 +2212,38 @@
 		cfg_parser->current_provide_xfr = 0;
 		cfg_parser->current_outgoing_interface = 0;
 	}
+#line 2216 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 127:
-/* Line 1792 of yacc.c  */
-#line 571 "configparser.y"
+  case 128:
+#line 571 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(pattern_name:%s)\n", (yyvsp[(2) - (2)].str))); 
+		OUTYY(("P(pattern_name:%s)\n", (yyvsp[0].str))); 
 #ifndef NDEBUG
 		assert(cfg_parser->current_pattern);
 #endif
-		if(strchr((yyvsp[(2) - (2)].str), ' '))
+		if(strchr((yyvsp[0].str), ' '))
 			c_error_msg("space is not allowed in pattern name: "
-				"'%s'", (yyvsp[(2) - (2)].str));
-		cfg_parser->current_pattern->pname = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+				"'%s'", (yyvsp[0].str));
+		cfg_parser->current_pattern->pname = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 2231 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 128:
-/* Line 1792 of yacc.c  */
-#line 583 "configparser.y"
+  case 129:
+#line 583 "./configparser.y" /* yacc.c:1646  */
     {
-		OUTYY(("P(include-pattern:%s)\n", (yyvsp[(2) - (2)].str))); 
+		OUTYY(("P(include-pattern:%s)\n", (yyvsp[0].str))); 
 #ifndef NDEBUG
 		assert(cfg_parser->current_pattern);
 #endif
-		config_apply_pattern((yyvsp[(2) - (2)].str));
+		config_apply_pattern((yyvsp[0].str));
 	}
+#line 2243 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 129:
-/* Line 1792 of yacc.c  */
-#line 594 "configparser.y"
+  case 130:
+#line 594 "./configparser.y" /* yacc.c:1646  */
     { 
 		OUTYY(("\nP(zone:)\n")); 
 		if(cfg_parser->current_zone) {
@@ -2459,82 +2279,93 @@
 		cfg_parser->current_provide_xfr = 0;
 		cfg_parser->current_outgoing_interface = 0;
 	}
+#line 2283 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 134:
-/* Line 1792 of yacc.c  */
-#line 633 "configparser.y"
+  case 135:
+#line 633 "./configparser.y" /* yacc.c:1646  */
     { 
 		char* s;
-		OUTYY(("P(zone_name:%s)\n", (yyvsp[(2) - (2)].str))); 
+		OUTYY(("P(zone_name:%s)\n", (yyvsp[0].str))); 
 #ifndef NDEBUG
 		assert(cfg_parser->current_zone);
 		assert(cfg_parser->current_pattern);
 #endif
-		cfg_parser->current_zone->name = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+		cfg_parser->current_zone->name = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 		s = (char*)region_alloc(cfg_parser->opt->region,
-			strlen((yyvsp[(2) - (2)].str))+strlen(PATTERN_IMPLICIT_MARKER)+1);
+			strlen((yyvsp[0].str))+strlen(PATTERN_IMPLICIT_MARKER)+1);
 		memmove(s, PATTERN_IMPLICIT_MARKER,
 			strlen(PATTERN_IMPLICIT_MARKER));
-		memmove(s+strlen(PATTERN_IMPLICIT_MARKER), (yyvsp[(2) - (2)].str), strlen((yyvsp[(2) - (2)].str))+1);
+		memmove(s+strlen(PATTERN_IMPLICIT_MARKER), (yyvsp[0].str), strlen((yyvsp[0].str))+1);
 		if(pattern_options_find(cfg_parser->opt, s))
 			c_error_msg("zone %s cannot be created because "
-				"implicit pattern %s already exists", (yyvsp[(2) - (2)].str), s);
+				"implicit pattern %s already exists", (yyvsp[0].str), s);
 		cfg_parser->current_pattern->pname = s;
 	}
+#line 2306 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 135:
-/* Line 1792 of yacc.c  */
-#line 653 "configparser.y"
+  case 136:
+#line 653 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(zonefile:%s)\n", (yyvsp[(2) - (2)].str))); 
+		OUTYY(("P(zonefile:%s)\n", (yyvsp[0].str))); 
 #ifndef NDEBUG
 		assert(cfg_parser->current_pattern);
 #endif
-		cfg_parser->current_pattern->zonefile = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+		cfg_parser->current_pattern->zonefile = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 2318 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 136:
-/* Line 1792 of yacc.c  */
-#line 662 "configparser.y"
+  case 137:
+#line 662 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(zonestats:%s)\n", (yyvsp[(2) - (2)].str))); 
+		OUTYY(("P(zonestats:%s)\n", (yyvsp[0].str))); 
 #ifndef NDEBUG
 		assert(cfg_parser->current_pattern);
 #endif
-		cfg_parser->current_pattern->zonestats = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
+		cfg_parser->current_pattern->zonestats = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
 	}
+#line 2330 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 137:
-/* Line 1792 of yacc.c  */
-#line 671 "configparser.y"
+  case 138:
+#line 671 "./configparser.y" /* yacc.c:1646  */
     { 
-		acl_options_t* acl = parse_acl_info(cfg_parser->opt->region, (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str));
-		OUTYY(("P(allow_notify:%s %s)\n", (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str))); 
+		acl_options_t* acl = parse_acl_info(cfg_parser->opt->region, (yyvsp[-1].str), (yyvsp[0].str));
+		OUTYY(("P(allow_notify:%s %s)\n", (yyvsp[-1].str), (yyvsp[0].str))); 
 		if(cfg_parser->current_allow_notify)
 			cfg_parser->current_allow_notify->next = acl;
 		else
 			cfg_parser->current_pattern->allow_notify = acl;
 		cfg_parser->current_allow_notify = acl;
 	}
+#line 2344 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 138:
-/* Line 1792 of yacc.c  */
-#line 682 "configparser.y"
+  case 139:
+#line 682 "./configparser.y" /* yacc.c:1646  */
     {
 	}
+#line 2351 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 139:
-/* Line 1792 of yacc.c  */
-#line 686 "configparser.y"
+  case 140:
+#line 686 "./configparser.y" /* yacc.c:1646  */
+    { 
+		OUTYY(("P(size_limit_xfrt:%s)\n", (yyvsp[0].str))); 
+		if(atoll((yyvsp[0].str)) < 0)
+			yyerror("number >= 0 expected");
+		else cfg_parser->current_pattern->size_limit_xfr = atoll((yyvsp[0].str));
+	}
+#line 2362 "configparser.c" /* yacc.c:1646  */
+    break;
+
+  case 141:
+#line 694 "./configparser.y" /* yacc.c:1646  */
     { 
-		acl_options_t* acl = parse_acl_info(cfg_parser->opt->region, (yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str));
-		OUTYY(("P(request_xfr:%s %s)\n", (yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str))); 
+		acl_options_t* acl = parse_acl_info(cfg_parser->opt->region, (yyvsp[-1].str), (yyvsp[0].str));
+		OUTYY(("P(request_xfr:%s %s)\n", (yyvsp[-1].str), (yyvsp[0].str))); 
 		if(acl->blocked) c_error("blocked address used for request-xfr");
 		if(acl->rangetype!=acl_range_single) c_error("address range used for request-xfr");
 		if(cfg_parser->current_request_xfr)
@@ -2543,15 +2374,15 @@
 			cfg_parser->current_pattern->request_xfr = acl;
 		cfg_parser->current_request_xfr = acl;
 	}
+#line 2378 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 140:
-/* Line 1792 of yacc.c  */
-#line 698 "configparser.y"
+  case 142:
+#line 706 "./configparser.y" /* yacc.c:1646  */
     { 
-		acl_options_t* acl = parse_acl_info(cfg_parser->opt->region, (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str));
+		acl_options_t* acl = parse_acl_info(cfg_parser->opt->region, (yyvsp[-1].str), (yyvsp[0].str));
 		acl->use_axfr_only = 1;
-		OUTYY(("P(request_xfr:%s %s)\n", (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str))); 
+		OUTYY(("P(request_xfr:%s %s)\n", (yyvsp[-1].str), (yyvsp[0].str))); 
 		if(acl->blocked) c_error("blocked address used for request-xfr");
 		if(acl->rangetype!=acl_range_single) c_error("address range used for request-xfr");
 		if(cfg_parser->current_request_xfr)
@@ -2560,15 +2391,15 @@
 			cfg_parser->current_pattern->request_xfr = acl;
 		cfg_parser->current_request_xfr = acl;
 	}
+#line 2395 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 141:
-/* Line 1792 of yacc.c  */
-#line 711 "configparser.y"
+  case 143:
+#line 719 "./configparser.y" /* yacc.c:1646  */
     { 
-		acl_options_t* acl = parse_acl_info(cfg_parser->opt->region, (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str));
+		acl_options_t* acl = parse_acl_info(cfg_parser->opt->region, (yyvsp[-1].str), (yyvsp[0].str));
 		acl->allow_udp = 1;
-		OUTYY(("P(request_xfr:%s %s)\n", (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str))); 
+		OUTYY(("P(request_xfr:%s %s)\n", (yyvsp[-1].str), (yyvsp[0].str))); 
 		if(acl->blocked) c_error("blocked address used for request-xfr");
 		if(acl->rangetype!=acl_range_single) c_error("address range used for request-xfr");
 		if(cfg_parser->current_request_xfr)
@@ -2577,14 +2408,14 @@
 			cfg_parser->current_pattern->request_xfr = acl;
 		cfg_parser->current_request_xfr = acl;
 	}
+#line 2412 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 142:
-/* Line 1792 of yacc.c  */
-#line 725 "configparser.y"
+  case 144:
+#line 733 "./configparser.y" /* yacc.c:1646  */
     { 
-		acl_options_t* acl = parse_acl_info(cfg_parser->opt->region, (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str));
-		OUTYY(("P(notify:%s %s)\n", (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str))); 
+		acl_options_t* acl = parse_acl_info(cfg_parser->opt->region, (yyvsp[-1].str), (yyvsp[0].str));
+		OUTYY(("P(notify:%s %s)\n", (yyvsp[-1].str), (yyvsp[0].str))); 
 		if(acl->blocked) c_error("blocked address used for notify");
 		if(acl->rangetype!=acl_range_single) c_error("address range used for notify");
 		if(cfg_parser->current_notify)
@@ -2593,42 +2424,42 @@
 			cfg_parser->current_pattern->notify = acl;
 		cfg_parser->current_notify = acl;
 	}
+#line 2428 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 143:
-/* Line 1792 of yacc.c  */
-#line 738 "configparser.y"
+  case 145:
+#line 746 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(notify_retry:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(atoi((yyvsp[(2) - (2)].str)) == 0 && strcmp((yyvsp[(2) - (2)].str), "0") != 0)
+		OUTYY(("P(notify_retry:%s)\n", (yyvsp[0].str))); 
+		if(atoi((yyvsp[0].str)) == 0 && strcmp((yyvsp[0].str), "0") != 0)
 			yyerror("number expected");
 		else {
-			cfg_parser->current_pattern->notify_retry = atoi((yyvsp[(2) - (2)].str));
+			cfg_parser->current_pattern->notify_retry = atoi((yyvsp[0].str));
 			cfg_parser->current_pattern->notify_retry_is_default=0;
 		}
 	}
+#line 2442 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 144:
-/* Line 1792 of yacc.c  */
-#line 749 "configparser.y"
+  case 146:
+#line 757 "./configparser.y" /* yacc.c:1646  */
     { 
-		acl_options_t* acl = parse_acl_info(cfg_parser->opt->region, (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str));
-		OUTYY(("P(provide_xfr:%s %s)\n", (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str))); 
+		acl_options_t* acl = parse_acl_info(cfg_parser->opt->region, (yyvsp[-1].str), (yyvsp[0].str));
+		OUTYY(("P(provide_xfr:%s %s)\n", (yyvsp[-1].str), (yyvsp[0].str))); 
 		if(cfg_parser->current_provide_xfr)
 			cfg_parser->current_provide_xfr->next = acl;
 		else
 			cfg_parser->current_pattern->provide_xfr = acl;
 		cfg_parser->current_provide_xfr = acl;
 	}
+#line 2456 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 145:
-/* Line 1792 of yacc.c  */
-#line 760 "configparser.y"
+  case 147:
+#line 768 "./configparser.y" /* yacc.c:1646  */
     { 
-		acl_options_t* acl = parse_acl_info(cfg_parser->opt->region, (yyvsp[(2) - (2)].str), "NOKEY");
-		OUTYY(("P(outgoing_interface:%s)\n", (yyvsp[(2) - (2)].str))); 
+		acl_options_t* acl = parse_acl_info(cfg_parser->opt->region, (yyvsp[0].str), "NOKEY");
+		OUTYY(("P(outgoing_interface:%s)\n", (yyvsp[0].str))); 
 		if(acl->rangetype!=acl_range_single) c_error("address range used for outgoing interface");
 		if(cfg_parser->current_outgoing_interface)
 			cfg_parser->current_outgoing_interface->next = acl;
@@ -2636,36 +2467,36 @@
 			cfg_parser->current_pattern->outgoing_interface = acl;
 		cfg_parser->current_outgoing_interface = acl;
 	}
+#line 2471 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 146:
-/* Line 1792 of yacc.c  */
-#line 772 "configparser.y"
+  case 148:
+#line 780 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(allow_axfr_fallback:%s)\n", (yyvsp[(2) - (2)].str))); 
-		if(strcmp((yyvsp[(2) - (2)].str), "yes") != 0 && strcmp((yyvsp[(2) - (2)].str), "no") != 0)
+		OUTYY(("P(allow_axfr_fallback:%s)\n", (yyvsp[0].str))); 
+		if(strcmp((yyvsp[0].str), "yes") != 0 && strcmp((yyvsp[0].str), "no") != 0)
 			yyerror("expected yes or no.");
 		else {
-			cfg_parser->current_pattern->allow_axfr_fallback = (strcmp((yyvsp[(2) - (2)].str), "yes")==0);
+			cfg_parser->current_pattern->allow_axfr_fallback = (strcmp((yyvsp[0].str), "yes")==0);
 			cfg_parser->current_pattern->allow_axfr_fallback_is_default = 0;
 		}
 	}
+#line 2485 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 147:
-/* Line 1792 of yacc.c  */
-#line 783 "configparser.y"
+  case 149:
+#line 791 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(zone_rrl_whitelist:%s)\n", (yyvsp[(2) - (2)].str))); 
+		OUTYY(("P(zone_rrl_whitelist:%s)\n", (yyvsp[0].str))); 
 #ifdef RATELIMIT
-		cfg_parser->current_pattern->rrl_whitelist |= rrlstr2type((yyvsp[(2) - (2)].str));
+		cfg_parser->current_pattern->rrl_whitelist |= rrlstr2type((yyvsp[0].str));
 #endif
 	}
+#line 2496 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 148:
-/* Line 1792 of yacc.c  */
-#line 793 "configparser.y"
+  case 150:
+#line 801 "./configparser.y" /* yacc.c:1646  */
     { 
 		OUTYY(("\nP(key:)\n")); 
 		if(cfg_parser->current_key) {
@@ -2676,51 +2507,51 @@
 		}
 		cfg_parser->current_key = key_options_create(cfg_parser->opt->region);
 	}
+#line 2511 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 154:
-/* Line 1792 of yacc.c  */
-#line 807 "configparser.y"
+  case 156:
+#line 815 "./configparser.y" /* yacc.c:1646  */
     { 
 		const dname_type* d;
-		OUTYY(("P(key_name:%s)\n", (yyvsp[(2) - (2)].str))); 
+		OUTYY(("P(key_name:%s)\n", (yyvsp[0].str))); 
 #ifndef NDEBUG
 		assert(cfg_parser->current_key);
 #endif
-		cfg_parser->current_key->name = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
-		d = dname_parse(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
-		if(!d)	c_error_msg("Failed to parse tsig key name %s", (yyvsp[(2) - (2)].str));
+		cfg_parser->current_key->name = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
+		d = dname_parse(cfg_parser->opt->region, (yyvsp[0].str));
+		if(!d)	c_error_msg("Failed to parse tsig key name %s", (yyvsp[0].str));
 		else	region_recycle(cfg_parser->opt->region, (void*)d,
 				dname_total_size(d));
 	}
+#line 2528 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 155:
-/* Line 1792 of yacc.c  */
-#line 821 "configparser.y"
+  case 157:
+#line 829 "./configparser.y" /* yacc.c:1646  */
     { 
-		OUTYY(("P(key_algorithm:%s)\n", (yyvsp[(2) - (2)].str))); 
+		OUTYY(("P(key_algorithm:%s)\n", (yyvsp[0].str))); 
 #ifndef NDEBUG
 		assert(cfg_parser->current_key);
 #endif
-		cfg_parser->current_key->algorithm = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
-		if(tsig_get_algorithm_by_name((yyvsp[(2) - (2)].str)) == NULL)
-			c_error_msg("Bad tsig algorithm %s", (yyvsp[(2) - (2)].str));
+		cfg_parser->current_key->algorithm = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
+		if(tsig_get_algorithm_by_name((yyvsp[0].str)) == NULL)
+			c_error_msg("Bad tsig algorithm %s", (yyvsp[0].str));
 	}
+#line 2542 "configparser.c" /* yacc.c:1646  */
     break;
 
-  case 156:
-/* Line 1792 of yacc.c  */
-#line 832 "configparser.y"
+  case 158:
+#line 840 "./configparser.y" /* yacc.c:1646  */
     { 
 		uint8_t data[16384];
 		int size;
-		OUTYY(("key_secret:%s)\n", (yyvsp[(2) - (2)].str))); 
+		OUTYY(("key_secret:%s)\n", (yyvsp[0].str))); 
 #ifndef NDEBUG
 		assert(cfg_parser->current_key);
 #endif
-		cfg_parser->current_key->secret = region_strdup(cfg_parser->opt->region, (yyvsp[(2) - (2)].str));
-		size = b64_pton((yyvsp[(2) - (2)].str), data, sizeof(data));
+		cfg_parser->current_key->secret = region_strdup(cfg_parser->opt->region, (yyvsp[0].str));
+		size = b64_pton((yyvsp[0].str), data, sizeof(data));
 		if(size == -1) {
 			c_error_msg("Cannot base64 decode tsig secret %s",
 				cfg_parser->current_key->name?
@@ -2729,11 +2560,11 @@
 			memset(data, 0xdd, size); /* wipe secret */
 		}
 	}
+#line 2564 "configparser.c" /* yacc.c:1646  */
     break;
 
 
-/* Line 1792 of yacc.c  */
-#line 2737 "configparser.c"
+#line 2568 "configparser.c" /* yacc.c:1646  */
       default: break;
     }
   /* User semantic actions sometimes alter yychar, and that requires
@@ -2755,7 +2586,7 @@
 
   *++yyvsp = yyval;
 
-  /* Now `shift' the result of the reduction.  Determine what state
+  /* Now 'shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
 
@@ -2770,9 +2601,9 @@
   goto yynewstate;
 
 
-/*------------------------------------.
-| yyerrlab -- here on detecting error |
-`------------------------------------*/
+/*--------------------------------------.
+| yyerrlab -- here on detecting error.  |
+`--------------------------------------*/
 yyerrlab:
   /* Make sure we have latest lookahead translation.  See comments at
      user semantic actions for why this is necessary.  */
@@ -2823,20 +2654,20 @@
   if (yyerrstatus == 3)
     {
       /* If just tried and failed to reuse lookahead token after an
-	 error, discard it.  */
+         error, discard it.  */
 
       if (yychar <= YYEOF)
-	{
-	  /* Return failure if at end of input.  */
-	  if (yychar == YYEOF)
-	    YYABORT;
-	}
+        {
+          /* Return failure if at end of input.  */
+          if (yychar == YYEOF)
+            YYABORT;
+        }
       else
-	{
-	  yydestruct ("Error: discarding",
-		      yytoken, &yylval);
-	  yychar = YYEMPTY;
-	}
+        {
+          yydestruct ("Error: discarding",
+                      yytoken, &yylval);
+          yychar = YYEMPTY;
+        }
     }
 
   /* Else will try to reuse lookahead token after shifting the error
@@ -2855,7 +2686,7 @@
   if (/*CONSTCOND*/ 0)
      goto yyerrorlab;
 
-  /* Do not reclaim the symbols of the rule which action triggered
+  /* Do not reclaim the symbols of the rule whose action triggered
      this YYERROR.  */
   YYPOPSTACK (yylen);
   yylen = 0;
@@ -2868,29 +2699,29 @@
 | yyerrlab1 -- common code for both syntax error and YYERROR.  |
 `-------------------------------------------------------------*/
 yyerrlab1:
-  yyerrstatus = 3;	/* Each real token shifted decrements this.  */
+  yyerrstatus = 3;      /* Each real token shifted decrements this.  */
 
   for (;;)
     {
       yyn = yypact[yystate];
       if (!yypact_value_is_default (yyn))
-	{
-	  yyn += YYTERROR;
-	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
-	    {
-	      yyn = yytable[yyn];
-	      if (0 < yyn)
-		break;
-	    }
-	}
+        {
+          yyn += YYTERROR;
+          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
+            {
+              yyn = yytable[yyn];
+              if (0 < yyn)
+                break;
+            }
+        }
 
       /* Pop the current state because it cannot handle the error token.  */
       if (yyssp == yyss)
-	YYABORT;
+        YYABORT;
 
 
       yydestruct ("Error: popping",
-		  yystos[yystate], yyvsp);
+                  yystos[yystate], yyvsp);
       YYPOPSTACK (1);
       yystate = *yyssp;
       YY_STACK_PRINT (yyss, yyssp);
@@ -2941,14 +2772,14 @@
       yydestruct ("Cleanup: discarding lookahead",
                   yytoken, &yylval);
     }
-  /* Do not reclaim the symbols of the rule which action triggered
+  /* Do not reclaim the symbols of the rule whose action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
   YY_STACK_PRINT (yyss, yyssp);
   while (yyssp != yyss)
     {
       yydestruct ("Cleanup: popping",
-		  yystos[*yyssp], yyvsp);
+                  yystos[*yyssp], yyvsp);
       YYPOPSTACK (1);
     }
 #ifndef yyoverflow
@@ -2959,13 +2790,9 @@
   if (yymsg != yymsgbuf)
     YYSTACK_FREE (yymsg);
 #endif
-  /* Make sure YYID is used.  */
-  return YYID (yyresult);
+  return yyresult;
 }
-
-
-/* Line 2055 of yacc.c  */
-#line 851 "configparser.y"
+#line 859 "./configparser.y" /* yacc.c:1906  */
 
 
 /* parse helper routines could be here */
diff -Naur nsd-4.1.5/configparser.h nsd-4.1.5-xfer-limit-p0.0.1/configparser.h
--- nsd-4.1.5/configparser.h	2015-09-21 09:21:02.000000000 +0000
+++ nsd-4.1.5-xfer-limit-p0.0.1/configparser.h	2015-09-28 09:05:48.000000000 +0000
@@ -1,19 +1,19 @@
-/* A Bison parser, made by GNU Bison 2.7.  */
+/* A Bison parser, made by GNU Bison 3.0.2.  */
 
 /* Bison interface for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2012 Free Software Foundation, Inc.
-   
+
+   Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.
+
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
-   
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
 
@@ -26,13 +26,13 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
 #ifndef YY_YY_CONFIGPARSER_H_INCLUDED
 # define YY_YY_CONFIGPARSER_H_INCLUDED
-/* Enabling traces.  */
+/* Debug traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
 #endif
@@ -40,90 +40,90 @@
 extern int yydebug;
 #endif
 
-/* Tokens.  */
+/* Token type.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     SPACE = 258,
-     LETTER = 259,
-     NEWLINE = 260,
-     COMMENT = 261,
-     COLON = 262,
-     ANY = 263,
-     ZONESTR = 264,
-     STRING = 265,
-     VAR_SERVER = 266,
-     VAR_NAME = 267,
-     VAR_IP_ADDRESS = 268,
-     VAR_IP_TRANSPARENT = 269,
-     VAR_DEBUG_MODE = 270,
-     VAR_IP4_ONLY = 271,
-     VAR_IP6_ONLY = 272,
-     VAR_DATABASE = 273,
-     VAR_IDENTITY = 274,
-     VAR_NSID = 275,
-     VAR_LOGFILE = 276,
-     VAR_SERVER_COUNT = 277,
-     VAR_TCP_COUNT = 278,
-     VAR_PIDFILE = 279,
-     VAR_PORT = 280,
-     VAR_STATISTICS = 281,
-     VAR_CHROOT = 282,
-     VAR_USERNAME = 283,
-     VAR_ZONESDIR = 284,
-     VAR_XFRDFILE = 285,
-     VAR_DIFFFILE = 286,
-     VAR_XFRD_RELOAD_TIMEOUT = 287,
-     VAR_TCP_QUERY_COUNT = 288,
-     VAR_TCP_TIMEOUT = 289,
-     VAR_IPV4_EDNS_SIZE = 290,
-     VAR_IPV6_EDNS_SIZE = 291,
-     VAR_DO_IP4 = 292,
-     VAR_DO_IP6 = 293,
-     VAR_ZONEFILE = 294,
-     VAR_ZONE = 295,
-     VAR_ALLOW_NOTIFY = 296,
-     VAR_REQUEST_XFR = 297,
-     VAR_NOTIFY = 298,
-     VAR_PROVIDE_XFR = 299,
-     VAR_NOTIFY_RETRY = 300,
-     VAR_OUTGOING_INTERFACE = 301,
-     VAR_ALLOW_AXFR_FALLBACK = 302,
-     VAR_KEY = 303,
-     VAR_ALGORITHM = 304,
-     VAR_SECRET = 305,
-     VAR_AXFR = 306,
-     VAR_UDP = 307,
-     VAR_VERBOSITY = 308,
-     VAR_HIDE_VERSION = 309,
-     VAR_PATTERN = 310,
-     VAR_INCLUDEPATTERN = 311,
-     VAR_ZONELISTFILE = 312,
-     VAR_REMOTE_CONTROL = 313,
-     VAR_CONTROL_ENABLE = 314,
-     VAR_CONTROL_INTERFACE = 315,
-     VAR_CONTROL_PORT = 316,
-     VAR_SERVER_KEY_FILE = 317,
-     VAR_SERVER_CERT_FILE = 318,
-     VAR_CONTROL_KEY_FILE = 319,
-     VAR_CONTROL_CERT_FILE = 320,
-     VAR_XFRDIR = 321,
-     VAR_RRL_SIZE = 322,
-     VAR_RRL_RATELIMIT = 323,
-     VAR_RRL_SLIP = 324,
-     VAR_RRL_IPV4_PREFIX_LENGTH = 325,
-     VAR_RRL_IPV6_PREFIX_LENGTH = 326,
-     VAR_RRL_WHITELIST_RATELIMIT = 327,
-     VAR_RRL_WHITELIST = 328,
-     VAR_ZONEFILES_CHECK = 329,
-     VAR_ZONEFILES_WRITE = 330,
-     VAR_LOG_TIME_ASCII = 331,
-     VAR_ROUND_ROBIN = 332,
-     VAR_ZONESTATS = 333,
-     VAR_REUSEPORT = 334
-   };
+  enum yytokentype
+  {
+    SPACE = 258,
+    LETTER = 259,
+    NEWLINE = 260,
+    COMMENT = 261,
+    COLON = 262,
+    ANY = 263,
+    ZONESTR = 264,
+    STRING = 265,
+    VAR_SERVER = 266,
+    VAR_NAME = 267,
+    VAR_IP_ADDRESS = 268,
+    VAR_IP_TRANSPARENT = 269,
+    VAR_DEBUG_MODE = 270,
+    VAR_IP4_ONLY = 271,
+    VAR_IP6_ONLY = 272,
+    VAR_DATABASE = 273,
+    VAR_IDENTITY = 274,
+    VAR_NSID = 275,
+    VAR_LOGFILE = 276,
+    VAR_SERVER_COUNT = 277,
+    VAR_TCP_COUNT = 278,
+    VAR_PIDFILE = 279,
+    VAR_PORT = 280,
+    VAR_STATISTICS = 281,
+    VAR_CHROOT = 282,
+    VAR_USERNAME = 283,
+    VAR_ZONESDIR = 284,
+    VAR_XFRDFILE = 285,
+    VAR_DIFFFILE = 286,
+    VAR_XFRD_RELOAD_TIMEOUT = 287,
+    VAR_TCP_QUERY_COUNT = 288,
+    VAR_TCP_TIMEOUT = 289,
+    VAR_IPV4_EDNS_SIZE = 290,
+    VAR_IPV6_EDNS_SIZE = 291,
+    VAR_DO_IP4 = 292,
+    VAR_DO_IP6 = 293,
+    VAR_ZONEFILE = 294,
+    VAR_ZONE = 295,
+    VAR_ALLOW_NOTIFY = 296,
+    VAR_REQUEST_XFR = 297,
+    VAR_NOTIFY = 298,
+    VAR_PROVIDE_XFR = 299,
+    VAR_SIZE_LIMIT_XFR = 300,
+    VAR_NOTIFY_RETRY = 301,
+    VAR_OUTGOING_INTERFACE = 302,
+    VAR_ALLOW_AXFR_FALLBACK = 303,
+    VAR_KEY = 304,
+    VAR_ALGORITHM = 305,
+    VAR_SECRET = 306,
+    VAR_AXFR = 307,
+    VAR_UDP = 308,
+    VAR_VERBOSITY = 309,
+    VAR_HIDE_VERSION = 310,
+    VAR_PATTERN = 311,
+    VAR_INCLUDEPATTERN = 312,
+    VAR_ZONELISTFILE = 313,
+    VAR_REMOTE_CONTROL = 314,
+    VAR_CONTROL_ENABLE = 315,
+    VAR_CONTROL_INTERFACE = 316,
+    VAR_CONTROL_PORT = 317,
+    VAR_SERVER_KEY_FILE = 318,
+    VAR_SERVER_CERT_FILE = 319,
+    VAR_CONTROL_KEY_FILE = 320,
+    VAR_CONTROL_CERT_FILE = 321,
+    VAR_XFRDIR = 322,
+    VAR_RRL_SIZE = 323,
+    VAR_RRL_RATELIMIT = 324,
+    VAR_RRL_SLIP = 325,
+    VAR_RRL_IPV4_PREFIX_LENGTH = 326,
+    VAR_RRL_IPV6_PREFIX_LENGTH = 327,
+    VAR_RRL_WHITELIST_RATELIMIT = 328,
+    VAR_RRL_WHITELIST = 329,
+    VAR_ZONEFILES_CHECK = 330,
+    VAR_ZONEFILES_WRITE = 331,
+    VAR_LOG_TIME_ASCII = 332,
+    VAR_ROUND_ROBIN = 333,
+    VAR_ZONESTATS = 334,
+    VAR_REUSEPORT = 335
+  };
 #endif
 /* Tokens.  */
 #define SPACE 258
@@ -168,75 +168,61 @@
 #define VAR_REQUEST_XFR 297
 #define VAR_NOTIFY 298
 #define VAR_PROVIDE_XFR 299
-#define VAR_NOTIFY_RETRY 300
-#define VAR_OUTGOING_INTERFACE 301
-#define VAR_ALLOW_AXFR_FALLBACK 302
-#define VAR_KEY 303
-#define VAR_ALGORITHM 304
-#define VAR_SECRET 305
-#define VAR_AXFR 306
-#define VAR_UDP 307
-#define VAR_VERBOSITY 308
-#define VAR_HIDE_VERSION 309
-#define VAR_PATTERN 310
-#define VAR_INCLUDEPATTERN 311
-#define VAR_ZONELISTFILE 312
-#define VAR_REMOTE_CONTROL 313
-#define VAR_CONTROL_ENABLE 314
-#define VAR_CONTROL_INTERFACE 315
-#define VAR_CONTROL_PORT 316
-#define VAR_SERVER_KEY_FILE 317
-#define VAR_SERVER_CERT_FILE 318
-#define VAR_CONTROL_KEY_FILE 319
-#define VAR_CONTROL_CERT_FILE 320
-#define VAR_XFRDIR 321
-#define VAR_RRL_SIZE 322
-#define VAR_RRL_RATELIMIT 323
-#define VAR_RRL_SLIP 324
-#define VAR_RRL_IPV4_PREFIX_LENGTH 325
-#define VAR_RRL_IPV6_PREFIX_LENGTH 326
-#define VAR_RRL_WHITELIST_RATELIMIT 327
-#define VAR_RRL_WHITELIST 328
-#define VAR_ZONEFILES_CHECK 329
-#define VAR_ZONEFILES_WRITE 330
-#define VAR_LOG_TIME_ASCII 331
-#define VAR_ROUND_ROBIN 332
-#define VAR_ZONESTATS 333
-#define VAR_REUSEPORT 334
-
-
+#define VAR_SIZE_LIMIT_XFR 300
+#define VAR_NOTIFY_RETRY 301
+#define VAR_OUTGOING_INTERFACE 302
+#define VAR_ALLOW_AXFR_FALLBACK 303
+#define VAR_KEY 304
+#define VAR_ALGORITHM 305
+#define VAR_SECRET 306
+#define VAR_AXFR 307
+#define VAR_UDP 308
+#define VAR_VERBOSITY 309
+#define VAR_HIDE_VERSION 310
+#define VAR_PATTERN 311
+#define VAR_INCLUDEPATTERN 312
+#define VAR_ZONELISTFILE 313
+#define VAR_REMOTE_CONTROL 314
+#define VAR_CONTROL_ENABLE 315
+#define VAR_CONTROL_INTERFACE 316
+#define VAR_CONTROL_PORT 317
+#define VAR_SERVER_KEY_FILE 318
+#define VAR_SERVER_CERT_FILE 319
+#define VAR_CONTROL_KEY_FILE 320
+#define VAR_CONTROL_CERT_FILE 321
+#define VAR_XFRDIR 322
+#define VAR_RRL_SIZE 323
+#define VAR_RRL_RATELIMIT 324
+#define VAR_RRL_SLIP 325
+#define VAR_RRL_IPV4_PREFIX_LENGTH 326
+#define VAR_RRL_IPV6_PREFIX_LENGTH 327
+#define VAR_RRL_WHITELIST_RATELIMIT 328
+#define VAR_RRL_WHITELIST 329
+#define VAR_ZONEFILES_CHECK 330
+#define VAR_ZONEFILES_WRITE 331
+#define VAR_LOG_TIME_ASCII 332
+#define VAR_ROUND_ROBIN 333
+#define VAR_ZONESTATS 334
+#define VAR_REUSEPORT 335
 
+/* Value type.  */
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
-typedef union YYSTYPE
+typedef union YYSTYPE YYSTYPE;
+union YYSTYPE
 {
-/* Line 2058 of yacc.c  */
-#line 42 "configparser.y"
+#line 42 "./configparser.y" /* yacc.c:1909  */
 
 	char*	str;
 
-
-/* Line 2058 of yacc.c  */
-#line 220 "configparser.h"
-} YYSTYPE;
+#line 218 "configparser.h" /* yacc.c:1909  */
+};
 # define YYSTYPE_IS_TRIVIAL 1
-# define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
 #endif
 
+
 extern YYSTYPE yylval;
 
-#ifdef YYPARSE_PARAM
-#if defined __STDC__ || defined __cplusplus
-int yyparse (void *YYPARSE_PARAM);
-#else
-int yyparse ();
-#endif
-#else /* ! YYPARSE_PARAM */
-#if defined __STDC__ || defined __cplusplus
 int yyparse (void);
-#else
-int yyparse ();
-#endif
-#endif /* ! YYPARSE_PARAM */
 
 #endif /* !YY_YY_CONFIGPARSER_H_INCLUDED  */
diff -Naur nsd-4.1.5/configparser.y nsd-4.1.5-xfer-limit-p0.0.1/configparser.y
--- nsd-4.1.5/configparser.y	2015-08-14 14:30:46.000000000 +0000
+++ nsd-4.1.5-xfer-limit-p0.0.1/configparser.y	2015-09-28 09:05:48.000000000 +0000
@@ -53,7 +53,7 @@
 %token VAR_IPV4_EDNS_SIZE VAR_IPV6_EDNS_SIZE VAR_DO_IP4 VAR_DO_IP6
 %token VAR_ZONEFILE 
 %token VAR_ZONE
-%token VAR_ALLOW_NOTIFY VAR_REQUEST_XFR VAR_NOTIFY VAR_PROVIDE_XFR 
+%token VAR_ALLOW_NOTIFY VAR_REQUEST_XFR VAR_NOTIFY VAR_PROVIDE_XFR VAR_SIZE_LIMIT_XFR 
 %token VAR_NOTIFY_RETRY VAR_OUTGOING_INTERFACE VAR_ALLOW_AXFR_FALLBACK
 %token VAR_KEY
 %token VAR_ALGORITHM VAR_SECRET
@@ -566,7 +566,7 @@
 zone_config_item: zone_zonefile | zone_allow_notify | zone_request_xfr |
 	zone_notify | zone_notify_retry | zone_provide_xfr | 
 	zone_outgoing_interface | zone_allow_axfr_fallback | include_pattern |
-	zone_rrl_whitelist | zone_zonestats;
+	zone_rrl_whitelist | zone_zonestats | zone_size_limit_xfr ;
 pattern_name: VAR_NAME STRING
 	{ 
 		OUTYY(("P(pattern_name:%s)\n", $2)); 
@@ -682,6 +682,14 @@
 	{
 	}
 	;
+zone_size_limit_xfr: VAR_SIZE_LIMIT_XFR STRING
+	{ 
+		OUTYY(("P(size_limit_xfrt:%s)\n", $2)); 
+		if(atoll($2) < 0)
+			yyerror("number >= 0 expected");
+		else cfg_parser->current_pattern->size_limit_xfr = atoll($2);
+	}
+	;
 zone_request_xfr_data: STRING STRING
 	{ 
 		acl_options_t* acl = parse_acl_info(cfg_parser->opt->region, $1, $2);
diff -Naur nsd-4.1.5/nsd.conf.5.in nsd-4.1.5-xfer-limit-p0.0.1/nsd.conf.5.in
--- nsd-4.1.5/nsd.conf.5.in	2015-09-21 09:21:02.000000000 +0000
+++ nsd-4.1.5-xfer-limit-p0.0.1/nsd.conf.5.in	2015-09-28 09:05:48.000000000 +0000
@@ -547,6 +547,10 @@
 This option should be accompanied by request\-xfr. It (dis)allows NSD (as secondary) 
 to fallback to AXFR if the primary name server does not support IXFR. Default is yes.
 .TP
+.B size\-limit\-xfr:\fR <number>
+This option should be accompanied by request\-xfr. It specifies XFR temporary file size limit.
+If this option is 0, unlmited. Default value is 0.
+.TP
 .B notify:\fR <ip\-address> <key\-name | NOKEY>
 Access control list. The listed address (a secondary) is notified 
 of updates to this zone. A port number can be added using a suffix of @number,
diff -Naur nsd-4.1.5/options.c nsd-4.1.5-xfer-limit-p0.0.1/options.c
--- nsd-4.1.5/options.c	2015-08-14 14:30:46.000000000 +0000
+++ nsd-4.1.5-xfer-limit-p0.0.1/options.c	2015-09-28 09:05:48.000000000 +0000
@@ -787,6 +787,7 @@
 	p->zonestats = 0;
 	p->allow_notify = 0;
 	p->request_xfr = 0;
+	p->size_limit_xfr = 0;
 	p->notify = 0;
 	p->provide_xfr = 0;
 	p->outgoing_interface = 0;
@@ -994,6 +995,7 @@
 #ifdef RATELIMIT
 	if(p->rrl_whitelist != q->rrl_whitelist) return 0;
 #endif
+	if(p->size_limit_xfr != q->size_limit_xfr) return 0;
 	return 1;
 }
 
@@ -1010,6 +1012,19 @@
 	return buffer_read_u8(b);
 }
 
+static void
+marshal_u64(struct buffer* b, uint64_t v)
+{
+	buffer_reserve(b, 8);
+	buffer_write_u64(b, v);
+}
+
+static uint64_t
+unmarshal_u64(struct buffer* b)
+{
+	return buffer_read_u64(b);
+}
+
 #ifdef RATELIMIT
 static void
 marshal_u16(struct buffer* b, uint16_t v)
@@ -1112,6 +1127,7 @@
 	marshal_u8(b, p->notify_retry);
 	marshal_u8(b, p->notify_retry_is_default);
 	marshal_u8(b, p->implicit);
+	marshal_u64(b, p->size_limit_xfr);
 	marshal_acl_list(b, p->allow_notify);
 	marshal_acl_list(b, p->request_xfr);
 	marshal_acl_list(b, p->notify);
@@ -1134,6 +1150,7 @@
 	p->notify_retry = unmarshal_u8(b);
 	p->notify_retry_is_default = unmarshal_u8(b);
 	p->implicit = unmarshal_u8(b);
+	p->size_limit_xfr = unmarshal_u64(b);
 	p->allow_notify = unmarshal_acl_list(r, b);
 	p->request_xfr = unmarshal_acl_list(r, b);
 	p->notify = unmarshal_acl_list(r, b);
@@ -1849,6 +1866,7 @@
 		a->notify_retry = pat->notify_retry;
 		a->notify_retry_is_default = 0;
 	}
+	a->size_limit_xfr = pat->size_limit_xfr;
 #ifdef RATELIMIT
 	a->rrl_whitelist |= pat->rrl_whitelist;
 #endif
diff -Naur nsd-4.1.5/options.h nsd-4.1.5-xfer-limit-p0.0.1/options.h
--- nsd-4.1.5/options.h	2015-08-14 14:30:46.000000000 +0000
+++ nsd-4.1.5-xfer-limit-p0.0.1/options.h	2015-09-28 09:05:48.000000000 +0000
@@ -150,6 +150,8 @@
 	uint8_t notify_retry_is_default;
 	uint8_t implicit; /* pattern is implicit, part_of_config zone used */
 	uint8_t xfrd_flags;
+
+        uint64_t size_limit_xfr;
 };
 
 #define PATTERN_IMPLICIT_MARKER "_implicit_"
diff -Naur nsd-4.1.5/util.h nsd-4.1.5-xfer-limit-p0.0.1/util.h
--- nsd-4.1.5/util.h	2015-03-17 15:02:27.000000000 +0000
+++ nsd-4.1.5-xfer-limit-p0.0.1/util.h	2015-09-28 09:05:48.000000000 +0000
@@ -198,6 +198,20 @@
 #endif
 }
 
+static inline void
+write_uint64(void *dst, uint64_t data)
+{
+	uint8_t *p = (uint8_t *) dst;
+	p[0] = (uint8_t) ((data >> 56) & 0xff);
+	p[1] = (uint8_t) ((data >> 48) & 0xff);
+	p[2] = (uint8_t) ((data >> 40) & 0xff);
+	p[3] = (uint8_t) ((data >> 32) & 0xff);
+	p[4] = (uint8_t) ((data >> 24) & 0xff);
+	p[5] = (uint8_t) ((data >> 16) & 0xff);
+	p[6] = (uint8_t) ((data >> 8) & 0xff);
+	p[7] = (uint8_t) (data & 0xff);
+}
+
 /*
  * Copy data allowing for unaligned accesses in network byte order
  * (big endian).
@@ -224,6 +238,21 @@
 #endif
 }
 
+static inline uint64_t
+read_uint64(const void *src)
+{
+	uint8_t *p = (uint8_t *) src;
+	return
+	    ((uint64_t)p[0] << 56) |
+	    ((uint64_t)p[1] << 48) |
+	    ((uint64_t)p[2] << 40) |
+	    ((uint64_t)p[3] << 32) |
+	    ((uint64_t)p[4] << 24) |
+	    ((uint64_t)p[5] << 16) |
+	    ((uint64_t)p[6] <<  8) |
+	    (uint64_t)p[7];
+}
+
 /*
  * Print debugging information using log_msg,
  * set the logfile as /dev/stdout or /dev/stderr if you like.
diff -Naur nsd-4.1.5/xfrd-disk.c nsd-4.1.5-xfer-limit-p0.0.1/xfrd-disk.c
--- nsd-4.1.5/xfrd-disk.c	2014-10-13 09:17:51.000000000 +0000
+++ nsd-4.1.5-xfer-limit-p0.0.1/xfrd-disk.c	2015-09-28 09:05:48.000000000 +0000
@@ -564,3 +564,19 @@
 			strerror(errno));
 	}
 }
+
+off_t
+xfrd_get_xfrfile_size(struct nsd* nsd, uint64_t number )
+{
+	char fname[1024];
+	FILE* xfr;
+	tempxfrname(fname, sizeof(fname), nsd, number);
+	struct stat tempxfr_stat;
+	if( stat( fname, &tempxfr_stat ) < 0 ) {
+	    log_msg(LOG_WARNING, "could not get file size %s: %s", fname,
+		    strerror(errno));
+	    return 0;
+	}
+	return tempxfr_stat.st_size;
+}
+
diff -Naur nsd-4.1.5/xfrd-disk.h nsd-4.1.5-xfer-limit-p0.0.1/xfrd-disk.h
--- nsd-4.1.5/xfrd-disk.h	2012-06-29 15:10:47.000000000 +0000
+++ nsd-4.1.5-xfer-limit-p0.0.1/xfrd-disk.h	2015-09-28 09:05:48.000000000 +0000
@@ -29,5 +29,8 @@
 FILE* xfrd_open_xfrfile(struct nsd* nsd, uint64_t number, char* mode);
 /* unlink temp file */
 void xfrd_unlink_xfrfile(struct nsd* nsd, uint64_t number);
+/* get temp file size */
+off_t
+xfrd_get_xfrfile_size(struct nsd* nsd, uint64_t number );
 
 #endif /* XFRD_DISK_H */
diff -Naur nsd-4.1.5/xfrd.c nsd-4.1.5-xfer-limit-p0.0.1/xfrd.c
--- nsd-4.1.5/xfrd.c	2014-10-14 15:10:35.000000000 +0000
+++ nsd-4.1.5-xfer-limit-p0.0.1/xfrd.c	2015-09-28 09:05:48.000000000 +0000
@@ -1955,13 +1955,15 @@
 		}
 	}
 
+
+
 	/* dump reply on disk to diff file */
 	/* if first part, get new filenumber.  Numbers can wrap around, 64bit
 	 * is enough so we do not collide with older-transfers-in-progress */
 	if(zone->msg_seq_nr == 0)
 		zone->xfrfilenumber = xfrd->xfrfilenumber++;
 	diff_write_packet(dname_to_string(zone->apex,0),
-		zone->zone_options->pattern->pname,
+		zone->zone_options->pattern->pname ,
 		zone->msg_old_serial, zone->msg_new_serial, zone->msg_seq_nr,
 		buffer_begin(packet), buffer_limit(packet), xfrd->nsd,
 		zone->xfrfilenumber);
@@ -1970,6 +1972,15 @@
 		"disk", zone->apex_str, zone->master->ip_address_spec,
 		(int)zone->msg_new_serial));
 	zone->msg_seq_nr++;
+
+        off_t xfrfile_size = xfrd_get_xfrfile_size(xfrd->nsd, zone->xfrfilenumber);
+	if( zone->zone_options->pattern->size_limit_xfr != 0 &&
+	    xfrfile_size > zone->zone_options->pattern->size_limit_xfr ) {
+            /*	    xfrd_unlink_xfrfile(xfrd->nsd, zone->xfrfilenumber);
+                    xfrd_set_reload_timeout(); */
+            log_msg(LOG_INFO, "xfrd : too large transfered data %llu", xfrfile_size);
+	    return xfrd_packet_bad;
+	}
 	if(res == xfrd_packet_more) {
 		/* wait for more */
 		return xfrd_packet_more;
diff -Naur nsd-4.1.5/zlexer.c nsd-4.1.5-xfer-limit-p0.0.1/zlexer.c
--- nsd-4.1.5/zlexer.c	2015-09-21 09:21:02.000000000 +0000
+++ nsd-4.1.5-xfer-limit-p0.0.1/zlexer.c	2015-09-28 09:05:48.000000000 +0000
@@ -9,7 +9,7 @@
 #define FLEX_SCANNER
 #define YY_FLEX_MAJOR_VERSION 2
 #define YY_FLEX_MINOR_VERSION 5
-#define YY_FLEX_SUBMINOR_VERSION 37
+#define YY_FLEX_SUBMINOR_VERSION 35
 #if YY_FLEX_SUBMINOR_VERSION > 0
 #define FLEX_BETA
 #endif
@@ -142,7 +142,15 @@
 
 /* Size of default input buffer. */
 #ifndef YY_BUF_SIZE
+#ifdef __ia64__
+/* On IA-64, the buffer size is 16k, not 8k.
+ * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
+ * Ditto for the __ia64__ case accordingly.
+ */
+#define YY_BUF_SIZE 32768
+#else
 #define YY_BUF_SIZE 16384
+#endif /* __ia64__ */
 #endif
 
 /* The state buf must be large enough to hold one state per character in the main buffer.
@@ -154,12 +162,7 @@
 typedef struct yy_buffer_state *YY_BUFFER_STATE;
 #endif
 
-#ifndef YY_TYPEDEF_YY_SIZE_T
-#define YY_TYPEDEF_YY_SIZE_T
-typedef size_t yy_size_t;
-#endif
-
-extern yy_size_t yyleng;
+extern int yyleng;
 
 extern FILE *yyin, *yyout;
 
@@ -185,6 +188,11 @@
 
 #define unput(c) yyunput( c, (yytext_ptr)  )
 
+#ifndef YY_TYPEDEF_YY_SIZE_T
+#define YY_TYPEDEF_YY_SIZE_T
+typedef size_t yy_size_t;
+#endif
+
 #ifndef YY_STRUCT_YY_BUFFER_STATE
 #define YY_STRUCT_YY_BUFFER_STATE
 struct yy_buffer_state
@@ -202,7 +210,7 @@
 	/* Number of characters read into yy_ch_buf, not including EOB
 	 * characters.
 	 */
-	yy_size_t yy_n_chars;
+	int yy_n_chars;
 
 	/* Whether we "own" the buffer - i.e., we know we created it,
 	 * and can realloc() it to grow it, and should free() it to
@@ -272,8 +280,8 @@
 
 /* yy_hold_char holds the character lost when yytext is formed. */
 static char yy_hold_char;
-static yy_size_t yy_n_chars;		/* number of characters read into yy_ch_buf */
-yy_size_t yyleng;
+static int yy_n_chars;		/* number of characters read into yy_ch_buf */
+int yyleng;
 
 /* Points to current character in buffer. */
 static char *yy_c_buf_p = (char *) 0;
@@ -301,7 +309,7 @@
 
 YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );
 YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );
-YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,yy_size_t len  );
+YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,int len  );
 
 void *yyalloc (yy_size_t  );
 void *yyrealloc (void *,yy_size_t  );
@@ -528,8 +536,8 @@
 #define YY_MORE_ADJ (yy_more_len)
 #define YY_RESTORE_YY_MORE_OFFSET
 char *yytext;
-#line 1 "zlexer.lex"
-#line 2 "zlexer.lex"
+#line 1 "./zlexer.lex"
+#line 2 "./zlexer.lex"
 /*
  * zlexer.lex - lexical analyzer for (DNS) zone files
  * 
@@ -624,7 +632,7 @@
 #endif
 	
 #define YY_NO_INPUT 1
-#line 99 "zlexer.lex"
+#line 99 "./zlexer.lex"
 #ifndef YY_NO_UNPUT
 #define YY_NO_UNPUT 1
 #endif
@@ -632,7 +640,7 @@
 #define YY_NO_INPUT 1
 #endif
 
-#line 635 "<stdout>"
+#line 643 "<stdout>"
 
 #define INITIAL 0
 #define incl 1
@@ -674,7 +682,7 @@
 
 void yyset_out  (FILE * out_str  );
 
-yy_size_t yyget_leng (void );
+int yyget_leng (void );
 
 char *yyget_text (void );
 
@@ -714,7 +722,12 @@
 
 /* Amount of stuff to slurp up with each read. */
 #ifndef YY_READ_BUF_SIZE
+#ifdef __ia64__
+/* On IA-64, the buffer size is 16k, not 8k */
+#define YY_READ_BUF_SIZE 16384
+#else
 #define YY_READ_BUF_SIZE 8192
+#endif /* __ia64__ */
 #endif
 
 /* Copy whatever the last rule matched to the standard output. */
@@ -818,11 +831,11 @@
 	register char *yy_cp, *yy_bp;
 	register int yy_act;
     
-#line 121 "zlexer.lex"
+#line 121 "./zlexer.lex"
 
 	static int paren_open = 0;
 	static enum lexer_state lexer_state = EXPECT_OWNER;
-#line 825 "<stdout>"
+#line 838 "<stdout>"
 
 	if ( !(yy_init) )
 		{
@@ -914,17 +927,17 @@
 
 case 1:
 YY_RULE_SETUP
-#line 124 "zlexer.lex"
+#line 124 "./zlexer.lex"
 /* ignore */
 	YY_BREAK
 case 2:
 YY_RULE_SETUP
-#line 125 "zlexer.lex"
+#line 125 "./zlexer.lex"
 { lexer_state = PARSING_RDATA; return DOLLAR_TTL; }
 	YY_BREAK
 case 3:
 YY_RULE_SETUP
-#line 126 "zlexer.lex"
+#line 126 "./zlexer.lex"
 { lexer_state = PARSING_RDATA; return DOLLAR_ORIGIN; }
 	YY_BREAK
 /*
@@ -933,17 +946,16 @@
 	 */
 case 4:
 YY_RULE_SETUP
-#line 132 "zlexer.lex"
+#line 132 "./zlexer.lex"
 {
 	BEGIN(incl);
 }
 	YY_BREAK
 case 5:
 /* rule 5 can match eol */
-#line 136 "zlexer.lex"
-YY_RULE_SETUP
+#line 136 "./zlexer.lex"
 case YY_STATE_EOF(incl):
-#line 136 "zlexer.lex"
+#line 136 "./zlexer.lex"
 {
 	int error_occurred = parser->error_occurred;
 	BEGIN(INITIAL);
@@ -955,7 +967,7 @@
 	YY_BREAK
 case 6:
 YY_RULE_SETUP
-#line 144 "zlexer.lex"
+#line 144 "./zlexer.lex"
 { 	
 	char *tmp;
 	domain_type *origin = parser->origin;
@@ -1019,7 +1031,7 @@
 }
 	YY_BREAK
 case YY_STATE_EOF(INITIAL):
-#line 205 "zlexer.lex"
+#line 205 "./zlexer.lex"
 {
 	yy_set_bol(1); /* Set beginning of line, so "^" rules match.  */
 	if (include_stack_ptr == 0) {
@@ -1032,12 +1044,12 @@
 	YY_BREAK
 case 7:
 YY_RULE_SETUP
-#line 214 "zlexer.lex"
+#line 214 "./zlexer.lex"
 { zc_warning("Unknown directive: %s", yytext); }
 	YY_BREAK
 case 8:
 YY_RULE_SETUP
-#line 215 "zlexer.lex"
+#line 215 "./zlexer.lex"
 {
 	LEXOUT((". "));
 	return parse_token('.', yytext, &lexer_state);
@@ -1045,7 +1057,7 @@
 	YY_BREAK
 case 9:
 YY_RULE_SETUP
-#line 219 "zlexer.lex"
+#line 219 "./zlexer.lex"
 {
 	LEXOUT(("@ "));
 	return parse_token('@', yytext, &lexer_state);
@@ -1053,7 +1065,7 @@
 	YY_BREAK
 case 10:
 YY_RULE_SETUP
-#line 223 "zlexer.lex"
+#line 223 "./zlexer.lex"
 {
 	LEXOUT(("\\# "));
 	return parse_token(URR, yytext, &lexer_state);
@@ -1062,7 +1074,7 @@
 case 11:
 /* rule 11 can match eol */
 YY_RULE_SETUP
-#line 227 "zlexer.lex"
+#line 227 "./zlexer.lex"
 {
 	++parser->line;
 	if (!paren_open) { 
@@ -1077,7 +1089,7 @@
 	YY_BREAK
 case 12:
 YY_RULE_SETUP
-#line 238 "zlexer.lex"
+#line 238 "./zlexer.lex"
 {
 	if (paren_open) {
 		zc_error("nested parentheses");
@@ -1090,7 +1102,7 @@
 	YY_BREAK
 case 13:
 YY_RULE_SETUP
-#line 247 "zlexer.lex"
+#line 247 "./zlexer.lex"
 {
 	if (!paren_open) {
 		zc_error("closing parentheses without opening parentheses");
@@ -1103,7 +1115,7 @@
 	YY_BREAK
 case 14:
 YY_RULE_SETUP
-#line 256 "zlexer.lex"
+#line 256 "./zlexer.lex"
 {
 	if (!paren_open && lexer_state == EXPECT_OWNER) {
 		lexer_state = PARSING_TTL_CLASS_TYPE;
@@ -1120,11 +1132,11 @@
 /* Bitlabels.  Strip leading and ending brackets.  */
 case 15:
 YY_RULE_SETUP
-#line 270 "zlexer.lex"
+#line 270 "./zlexer.lex"
 { BEGIN(bitlabel); }
 	YY_BREAK
 case YY_STATE_EOF(bitlabel):
-#line 271 "zlexer.lex"
+#line 271 "./zlexer.lex"
 {
 	zc_error("EOF inside bitlabel");
 	BEGIN(INITIAL);
@@ -1134,18 +1146,18 @@
 	YY_BREAK
 case 16:
 YY_RULE_SETUP
-#line 277 "zlexer.lex"
+#line 277 "./zlexer.lex"
 { yymore(); }
 	YY_BREAK
 case 17:
 /* rule 17 can match eol */
 YY_RULE_SETUP
-#line 278 "zlexer.lex"
+#line 278 "./zlexer.lex"
 { ++parser->line; yymore(); }
 	YY_BREAK
 case 18:
 YY_RULE_SETUP
-#line 279 "zlexer.lex"
+#line 279 "./zlexer.lex"
 {
 	BEGIN(INITIAL);
 	yytext[yyleng - 1] = '\0';
@@ -1155,11 +1167,11 @@
 /* Quoted strings.  Strip leading and ending quotes.  */
 case 19:
 YY_RULE_SETUP
-#line 286 "zlexer.lex"
+#line 286 "./zlexer.lex"
 { BEGIN(quotedstring); LEXOUT(("\" ")); }
 	YY_BREAK
 case YY_STATE_EOF(quotedstring):
-#line 287 "zlexer.lex"
+#line 287 "./zlexer.lex"
 {
 	zc_error("EOF inside quoted string");
 	BEGIN(INITIAL);
@@ -1169,18 +1181,18 @@
 	YY_BREAK
 case 20:
 YY_RULE_SETUP
-#line 293 "zlexer.lex"
+#line 293 "./zlexer.lex"
 { LEXOUT(("STR ")); yymore(); }
 	YY_BREAK
 case 21:
 /* rule 21 can match eol */
 YY_RULE_SETUP
-#line 294 "zlexer.lex"
+#line 294 "./zlexer.lex"
 { ++parser->line; yymore(); }
 	YY_BREAK
 case 22:
 YY_RULE_SETUP
-#line 295 "zlexer.lex"
+#line 295 "./zlexer.lex"
 {
 	LEXOUT(("\" "));
 	BEGIN(INITIAL);
@@ -1191,7 +1203,7 @@
 case 23:
 /* rule 23 can match eol */
 YY_RULE_SETUP
-#line 302 "zlexer.lex"
+#line 302 "./zlexer.lex"
 {
 	/* Any allowed word.  */
 	return parse_token(STR, yytext, &lexer_state);
@@ -1199,7 +1211,7 @@
 	YY_BREAK
 case 24:
 YY_RULE_SETUP
-#line 306 "zlexer.lex"
+#line 306 "./zlexer.lex"
 {
 	zc_error("unknown character '%c' (\\%03d) seen - is this a zonefile?",
 		 (int) yytext[0], (int) yytext[0]);
@@ -1207,10 +1219,10 @@
 	YY_BREAK
 case 25:
 YY_RULE_SETUP
-#line 310 "zlexer.lex"
+#line 310 "./zlexer.lex"
 ECHO;
 	YY_BREAK
-#line 1213 "<stdout>"
+#line 1225 "<stdout>"
 
 	case YY_END_OF_BUFFER:
 		{
@@ -1394,21 +1406,21 @@
 
 	else
 		{
-			yy_size_t num_to_read =
+			int num_to_read =
 			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
 
 		while ( num_to_read <= 0 )
 			{ /* Not enough room in the buffer - grow it. */
 
 			/* just a shorter name for the current buffer */
-			YY_BUFFER_STATE b = YY_CURRENT_BUFFER_LVALUE;
+			YY_BUFFER_STATE b = YY_CURRENT_BUFFER;
 
 			int yy_c_buf_p_offset =
 				(int) ((yy_c_buf_p) - b->yy_ch_buf);
 
 			if ( b->yy_is_our_buffer )
 				{
-				yy_size_t new_size = b->yy_buf_size * 2;
+				int new_size = b->yy_buf_size * 2;
 
 				if ( new_size <= 0 )
 					b->yy_buf_size += b->yy_buf_size / 8;
@@ -1439,7 +1451,7 @@
 
 		/* Read in more data. */
 		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
-			(yy_n_chars), num_to_read );
+			(yy_n_chars), (size_t) num_to_read );
 
 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
 		}
@@ -1535,7 +1547,7 @@
 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
 	yy_is_jam = (yy_current_state == 69);
 
-		return yy_is_jam ? 0 : yy_current_state;
+	return yy_is_jam ? 0 : yy_current_state;
 }
 
 #ifndef YY_NO_INPUT
@@ -1562,7 +1574,7 @@
 
 		else
 			{ /* need more input */
-			yy_size_t offset = (yy_c_buf_p) - (yytext_ptr);
+			int offset = (yy_c_buf_p) - (yytext_ptr);
 			++(yy_c_buf_p);
 
 			switch ( yy_get_next_buffer(  ) )
@@ -1724,6 +1736,10 @@
 	yyfree((void *) b  );
 }
 
+#ifndef __cplusplus
+extern int isatty (int );
+#endif /* __cplusplus */
+    
 /* Initializes or reinitializes a buffer.
  * This function is sometimes called more than once on the same buffer,
  * such as during a yyrestart() or at EOF.
@@ -1836,7 +1852,7 @@
  */
 static void yyensure_buffer_stack (void)
 {
-	yy_size_t num_to_alloc;
+	int num_to_alloc;
     
 	if (!(yy_buffer_stack)) {
 
@@ -1933,12 +1949,12 @@
  * 
  * @return the newly allocated buffer state object.
  */
-YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )
+YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )
 {
 	YY_BUFFER_STATE b;
 	char *buf;
 	yy_size_t n;
-	yy_size_t i;
+	int i;
     
 	/* Get memory for full buffer, including space for trailing EOB's. */
 	n = _yybytes_len + 2;
@@ -2020,7 +2036,7 @@
 /** Get the length of the current token.
  * 
  */
-yy_size_t yyget_leng  (void)
+int yyget_leng  (void)
 {
         return yyleng;
 }
@@ -2168,7 +2184,7 @@
 
 #define YYTABLES_NAME "yytables"
 
-#line 310 "zlexer.lex"
+#line 310 "./zlexer.lex"
 
 
 
diff -Naur nsd-4.1.5/zparser.c nsd-4.1.5-xfer-limit-p0.0.1/zparser.c
--- nsd-4.1.5/zparser.c	2015-09-21 09:21:02.000000000 +0000
+++ nsd-4.1.5-xfer-limit-p0.0.1/zparser.c	2015-09-28 09:05:48.000000000 +0000
@@ -1,19 +1,19 @@
-/* A Bison parser, made by GNU Bison 2.7.  */
+/* A Bison parser, made by GNU Bison 3.0.2.  */
 
 /* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2012 Free Software Foundation, Inc.
-   
+
+   Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.
+
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
-   
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
 
@@ -26,7 +26,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +44,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.7"
+#define YYBISON_VERSION "3.0.2"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -62,8 +62,7 @@
 
 
 /* Copy the first part of user declarations.  */
-/* Line 371 of yacc.c  */
-#line 1 "zparser.y"
+#line 1 "./zparser.y" /* yacc.c:339  */
 
 /*
  * zyparser.y -- yacc grammar for (DNS) zone files
@@ -113,14 +112,13 @@
 #endif /* NSEC3 */
 
 
-/* Line 371 of yacc.c  */
-#line 118 "zparser.c"
+#line 116 "zparser.c" /* yacc.c:339  */
 
-# ifndef YY_NULL
+# ifndef YY_NULLPTR
 #  if defined __cplusplus && 201103L <= __cplusplus
-#   define YY_NULL nullptr
+#   define YY_NULLPTR nullptr
 #  else
-#   define YY_NULL 0
+#   define YY_NULLPTR 0
 #  endif
 # endif
 
@@ -136,7 +134,7 @@
    by #include "zparser.h".  */
 #ifndef YY_YY_ZPARSER_H_INCLUDED
 # define YY_YY_ZPARSER_H_INCLUDED
-/* Enabling traces.  */
+/* Debug traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
 #endif
@@ -144,98 +142,97 @@
 extern int yydebug;
 #endif
 
-/* Tokens.  */
+/* Token type.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     T_A = 258,
-     T_NS = 259,
-     T_MX = 260,
-     T_TXT = 261,
-     T_CNAME = 262,
-     T_AAAA = 263,
-     T_PTR = 264,
-     T_NXT = 265,
-     T_KEY = 266,
-     T_SOA = 267,
-     T_SIG = 268,
-     T_SRV = 269,
-     T_CERT = 270,
-     T_LOC = 271,
-     T_MD = 272,
-     T_MF = 273,
-     T_MB = 274,
-     T_MG = 275,
-     T_MR = 276,
-     T_NULL = 277,
-     T_WKS = 278,
-     T_HINFO = 279,
-     T_MINFO = 280,
-     T_RP = 281,
-     T_AFSDB = 282,
-     T_X25 = 283,
-     T_ISDN = 284,
-     T_RT = 285,
-     T_NSAP = 286,
-     T_NSAP_PTR = 287,
-     T_PX = 288,
-     T_GPOS = 289,
-     T_EID = 290,
-     T_NIMLOC = 291,
-     T_ATMA = 292,
-     T_NAPTR = 293,
-     T_KX = 294,
-     T_A6 = 295,
-     T_DNAME = 296,
-     T_SINK = 297,
-     T_OPT = 298,
-     T_APL = 299,
-     T_UINFO = 300,
-     T_UID = 301,
-     T_GID = 302,
-     T_UNSPEC = 303,
-     T_TKEY = 304,
-     T_TSIG = 305,
-     T_IXFR = 306,
-     T_AXFR = 307,
-     T_MAILB = 308,
-     T_MAILA = 309,
-     T_DS = 310,
-     T_DLV = 311,
-     T_SSHFP = 312,
-     T_RRSIG = 313,
-     T_NSEC = 314,
-     T_DNSKEY = 315,
-     T_SPF = 316,
-     T_NSEC3 = 317,
-     T_IPSECKEY = 318,
-     T_DHCID = 319,
-     T_NSEC3PARAM = 320,
-     T_TLSA = 321,
-     T_URI = 322,
-     T_NID = 323,
-     T_L32 = 324,
-     T_L64 = 325,
-     T_LP = 326,
-     T_EUI48 = 327,
-     T_EUI64 = 328,
-     T_CAA = 329,
-     T_CDS = 330,
-     T_CDNSKEY = 331,
-     DOLLAR_TTL = 332,
-     DOLLAR_ORIGIN = 333,
-     NL = 334,
-     SP = 335,
-     STR = 336,
-     PREV = 337,
-     BITLAB = 338,
-     T_TTL = 339,
-     T_RRCLASS = 340,
-     URR = 341,
-     T_UTYPE = 342
-   };
+  enum yytokentype
+  {
+    T_A = 258,
+    T_NS = 259,
+    T_MX = 260,
+    T_TXT = 261,
+    T_CNAME = 262,
+    T_AAAA = 263,
+    T_PTR = 264,
+    T_NXT = 265,
+    T_KEY = 266,
+    T_SOA = 267,
+    T_SIG = 268,
+    T_SRV = 269,
+    T_CERT = 270,
+    T_LOC = 271,
+    T_MD = 272,
+    T_MF = 273,
+    T_MB = 274,
+    T_MG = 275,
+    T_MR = 276,
+    T_NULL = 277,
+    T_WKS = 278,
+    T_HINFO = 279,
+    T_MINFO = 280,
+    T_RP = 281,
+    T_AFSDB = 282,
+    T_X25 = 283,
+    T_ISDN = 284,
+    T_RT = 285,
+    T_NSAP = 286,
+    T_NSAP_PTR = 287,
+    T_PX = 288,
+    T_GPOS = 289,
+    T_EID = 290,
+    T_NIMLOC = 291,
+    T_ATMA = 292,
+    T_NAPTR = 293,
+    T_KX = 294,
+    T_A6 = 295,
+    T_DNAME = 296,
+    T_SINK = 297,
+    T_OPT = 298,
+    T_APL = 299,
+    T_UINFO = 300,
+    T_UID = 301,
+    T_GID = 302,
+    T_UNSPEC = 303,
+    T_TKEY = 304,
+    T_TSIG = 305,
+    T_IXFR = 306,
+    T_AXFR = 307,
+    T_MAILB = 308,
+    T_MAILA = 309,
+    T_DS = 310,
+    T_DLV = 311,
+    T_SSHFP = 312,
+    T_RRSIG = 313,
+    T_NSEC = 314,
+    T_DNSKEY = 315,
+    T_SPF = 316,
+    T_NSEC3 = 317,
+    T_IPSECKEY = 318,
+    T_DHCID = 319,
+    T_NSEC3PARAM = 320,
+    T_TLSA = 321,
+    T_URI = 322,
+    T_NID = 323,
+    T_L32 = 324,
+    T_L64 = 325,
+    T_LP = 326,
+    T_EUI48 = 327,
+    T_EUI64 = 328,
+    T_CAA = 329,
+    T_CDS = 330,
+    T_CDNSKEY = 331,
+    DOLLAR_TTL = 332,
+    DOLLAR_ORIGIN = 333,
+    NL = 334,
+    SP = 335,
+    STR = 336,
+    PREV = 337,
+    BITLAB = 338,
+    T_TTL = 339,
+    T_RRCLASS = 340,
+    URR = 341,
+    T_UTYPE = 342
+  };
 #endif
 /* Tokens.  */
 #define T_A 258
@@ -324,13 +321,12 @@
 #define URR 341
 #define T_UTYPE 342
 
-
-
+/* Value type.  */
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
-typedef union YYSTYPE
+typedef union YYSTYPE YYSTYPE;
+union YYSTYPE
 {
-/* Line 387 of yacc.c  */
-#line 50 "zparser.y"
+#line 50 "./zparser.y" /* yacc.c:355  */
 
 	domain_type	 *domain;
 	const dname_type *dname;
@@ -340,37 +336,22 @@
 	uint16_t	  type;
 	uint16_t	 *unknown;
 
-
-/* Line 387 of yacc.c  */
-#line 346 "zparser.c"
-} YYSTYPE;
+#line 340 "zparser.c" /* yacc.c:355  */
+};
 # define YYSTYPE_IS_TRIVIAL 1
-# define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
 #endif
 
+
 extern YYSTYPE yylval;
 
-#ifdef YYPARSE_PARAM
-#if defined __STDC__ || defined __cplusplus
-int yyparse (void *YYPARSE_PARAM);
-#else
-int yyparse ();
-#endif
-#else /* ! YYPARSE_PARAM */
-#if defined __STDC__ || defined __cplusplus
 int yyparse (void);
-#else
-int yyparse ();
-#endif
-#endif /* ! YYPARSE_PARAM */
 
 #endif /* !YY_YY_ZPARSER_H_INCLUDED  */
 
 /* Copy the second part of user declarations.  */
 
-/* Line 390 of yacc.c  */
-#line 374 "zparser.c"
+#line 355 "zparser.c" /* yacc.c:358  */
 
 #ifdef short
 # undef short
@@ -384,11 +365,8 @@
 
 #ifdef YYTYPE_INT8
 typedef YYTYPE_INT8 yytype_int8;
-#elif (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
-typedef signed char yytype_int8;
 #else
-typedef short int yytype_int8;
+typedef signed char yytype_int8;
 #endif
 
 #ifdef YYTYPE_UINT16
@@ -408,8 +386,7 @@
 #  define YYSIZE_T __SIZE_TYPE__
 # elif defined size_t
 #  define YYSIZE_T size_t
-# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
+# elif ! defined YYSIZE_T
 #  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
 #  define YYSIZE_T size_t
 # else
@@ -431,6 +408,33 @@
 # endif
 #endif
 
+#ifndef YY_ATTRIBUTE
+# if (defined __GNUC__                                               \
+      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
+     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
+#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
+# else
+#  define YY_ATTRIBUTE(Spec) /* empty */
+# endif
+#endif
+
+#ifndef YY_ATTRIBUTE_PURE
+# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
+#endif
+
+#ifndef YY_ATTRIBUTE_UNUSED
+# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
+#endif
+
+#if !defined _Noreturn \
+     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
+# if defined _MSC_VER && 1200 <= _MSC_VER
+#  define _Noreturn __declspec (noreturn)
+# else
+#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
+# endif
+#endif
+
 /* Suppress unused-variable warnings by "using" E.  */
 #if ! defined lint || defined __GNUC__
 # define YYUSE(E) ((void) (E))
@@ -438,24 +442,26 @@
 # define YYUSE(E) /* empty */
 #endif
 
-/* Identity function, used to suppress warnings about constant conditions.  */
-#ifndef lint
-# define YYID(N) (N)
-#else
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
-static int
-YYID (int yyi)
+#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
+/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
+# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
+    _Pragma ("GCC diagnostic push") \
+    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
+    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
+# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
+    _Pragma ("GCC diagnostic pop")
 #else
-static int
-YYID (yyi)
-    int yyi;
+# define YY_INITIAL_VALUE(Value) Value
 #endif
-{
-  return yyi;
-}
+#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
+# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
+# define YY_IGNORE_MAYBE_UNINITIALIZED_END
+#endif
+#ifndef YY_INITIAL_VALUE
+# define YY_INITIAL_VALUE(Value) /* Nothing. */
 #endif
 
+
 #if ! defined yyoverflow || YYERROR_VERBOSE
 
 /* The parser invokes alloca or malloc; define the necessary symbols.  */
@@ -473,8 +479,7 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
+#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
       /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
 #     ifndef EXIT_SUCCESS
@@ -486,8 +491,8 @@
 # endif
 
 # ifdef YYSTACK_ALLOC
-   /* Pacify GCC's `empty if-body' warning.  */
-#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
+   /* Pacify GCC's 'empty if-body' warning.  */
+#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
 #  ifndef YYSTACK_ALLOC_MAXIMUM
     /* The OS might guarantee only one guard page at the bottom of the stack,
        and a page size can be as small as 4096 bytes.  So we cannot safely
@@ -503,7 +508,7 @@
 #  endif
 #  if (defined __cplusplus && ! defined EXIT_SUCCESS \
        && ! ((defined YYMALLOC || defined malloc) \
-	     && (defined YYFREE || defined free)))
+             && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
 #   ifndef EXIT_SUCCESS
 #    define EXIT_SUCCESS 0
@@ -511,15 +516,13 @@
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
+#   if ! defined malloc && ! defined EXIT_SUCCESS
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
+#   if ! defined free && ! defined EXIT_SUCCESS
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
@@ -529,7 +532,7 @@
 
 #if (! defined yyoverflow \
      && (! defined __cplusplus \
-	 || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))
+         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))
 
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
@@ -554,16 +557,16 @@
    elements in the stack, and YYPTR gives the new location of the
    stack.  Advance YYPTR to a properly aligned location for the next
    stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
+# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
+    do                                                                  \
+      {                                                                 \
+        YYSIZE_T yynewbytes;                                            \
+        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
+        Stack = &yyptr->Stack_alloc;                                    \
+        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+        yyptr += yynewbytes / sizeof (*yyptr);                          \
+      }                                                                 \
+    while (0)
 
 #endif
 
@@ -582,7 +585,7 @@
           for (yyi = 0; yyi < (Count); yyi++)   \
             (Dst)[yyi] = (Src)[yyi];            \
         }                                       \
-      while (YYID (0))
+      while (0)
 #  endif
 # endif
 #endif /* !YYCOPY_NEEDED */
@@ -598,17 +601,19 @@
 #define YYNNTS  72
 /* YYNRULES -- Number of rules.  */
 #define YYNRULES  225
-/* YYNRULES -- Number of states.  */
+/* YYNSTATES -- Number of states.  */
 #define YYNSTATES  556
 
-/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
+/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
+   by yylex, with out-of-bounds checking.  */
 #define YYUNDEFTOK  2
 #define YYMAXUTOK   342
 
-#define YYTRANSLATE(YYX)						\
+#define YYTRANSLATE(YYX)                                                \
   ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)
 
-/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
+/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
+   as returned by yylex, without out-of-bounds checking.  */
 static const yytype_uint8 yytranslate[] =
 {
        0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
@@ -649,134 +654,7 @@
 };
 
 #if YYDEBUG
-/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
-   YYRHS.  */
-static const yytype_uint16 yyprhs[] =
-{
-       0,     0,     3,     4,     7,     9,    12,    15,    17,    19,
-      21,    24,    26,    29,    31,    34,    39,    44,    49,    53,
-      56,    58,    59,    62,    65,    70,    75,    77,    79,    81,
-      83,    86,    88,    90,    92,    96,    98,   100,   102,   105,
-     107,   109,   113,   115,   119,   121,   123,   127,   131,   133,
-     137,   140,   142,   145,   147,   150,   152,   156,   158,   162,
-     164,   166,   169,   173,   177,   181,   185,   189,   193,   197,
-     201,   205,   209,   213,   217,   221,   225,   229,   233,   237,
-     241,   245,   249,   253,   257,   261,   265,   269,   273,   277,
-     281,   285,   289,   293,   297,   301,   305,   309,   313,   317,
-     321,   325,   329,   333,   337,   341,   345,   349,   353,   357,
-     361,   365,   369,   373,   377,   381,   385,   389,   393,   397,
-     401,   405,   409,   413,   417,   421,   425,   429,   433,   437,
-     441,   445,   449,   453,   456,   460,   464,   468,   472,   476,
-     480,   484,   488,   492,   496,   500,   504,   508,   512,   516,
-     520,   524,   528,   532,   536,   540,   544,   548,   552,   556,
-     560,   564,   568,   572,   576,   580,   584,   588,   592,   596,
-     600,   604,   608,   612,   616,   620,   624,   627,   630,   645,
-     652,   657,   662,   667,   670,   675,   680,   683,   686,   691,
-     696,   699,   706,   709,   712,   717,   726,   739,   744,   753,
-     756,   758,   762,   771,   780,   787,   790,   809,   812,   823,
-     832,   841,   850,   858,   863,   866,   871,   876,   881,   886,
-     889,   892,   899,   906,   913,   918
-};
-
-/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
-static const yytype_int16 yyrhs[] =
-{
-      91,     0,    -1,    -1,    91,    92,    -1,    79,    -1,    93,
-      79,    -1,    82,    79,    -1,    95,    -1,    96,    -1,    97,
-      -1,     1,    79,    -1,    80,    -1,    93,    80,    -1,    79,
-      -1,    93,    79,    -1,    77,    93,    81,    94,    -1,    78,
-      93,   101,    94,    -1,    78,    93,   103,    94,    -1,    98,
-      99,   116,    -1,   100,    93,    -1,    82,    -1,    -1,    85,
-      93,    -1,    84,    93,    -1,    84,    93,    85,    93,    -1,
-      85,    93,    84,    93,    -1,   101,    -1,   103,    -1,    88,
-      -1,    89,    -1,   103,    88,    -1,    81,    -1,    83,    -1,
-     102,    -1,   103,    88,   102,    -1,   105,    -1,   107,    -1,
-      88,    -1,   107,    88,    -1,    81,    -1,   106,    -1,   107,
-      88,   106,    -1,   115,    -1,   108,    93,   115,    -1,    81,
-      -1,    88,    -1,   109,    93,    81,    -1,   109,    88,    81,
-      -1,    81,    -1,   110,    93,    81,    -1,    80,   111,    -1,
-      79,    -1,    81,   112,    -1,    79,    -1,    80,   111,    -1,
-      81,    -1,   113,    93,    81,    -1,    81,    -1,   114,    88,
-      81,    -1,    81,    -1,    88,    -1,   115,    88,    -1,   115,
-      88,    81,    -1,     3,    93,   117,    -1,     3,    93,   161,
-      -1,     4,    93,   118,    -1,     4,    93,   161,    -1,    17,
-      93,   118,    -1,    17,    93,   161,    -1,    18,    93,   118,
-      -1,    18,    93,   161,    -1,     7,    93,   118,    -1,     7,
-      93,   161,    -1,    12,    93,   119,    -1,    12,    93,   161,
-      -1,    19,    93,   118,    -1,    19,    93,   161,    -1,    20,
-      93,   118,    -1,    20,    93,   161,    -1,    21,    93,   118,
-      -1,    21,    93,   161,    -1,    23,    93,   120,    -1,    23,
-      93,   161,    -1,     9,    93,   118,    -1,     9,    93,   161,
-      -1,    24,    93,   121,    -1,    24,    93,   161,    -1,    25,
-      93,   122,    -1,    25,    93,   161,    -1,     5,    93,   123,
-      -1,     5,    93,   161,    -1,     6,    93,   124,    -1,     6,
-      93,   161,    -1,    61,    93,   124,    -1,    61,    93,   161,
-      -1,    26,    93,   125,    -1,    26,    93,   161,    -1,    27,
-      93,   126,    -1,    27,    93,   161,    -1,    28,    93,   127,
-      -1,    28,    93,   161,    -1,    29,    93,   128,    -1,    29,
-      93,   161,    -1,    63,    93,   152,    -1,    63,    93,   161,
-      -1,    64,    93,   144,    -1,    64,    93,   161,    -1,    30,
-      93,   129,    -1,    30,    93,   161,    -1,    31,    93,   130,
-      -1,    31,    93,   161,    -1,    13,    93,   145,    -1,    13,
-      93,   161,    -1,    11,    93,   150,    -1,    11,    93,   161,
-      -1,    33,    93,   131,    -1,    33,    93,   161,    -1,     8,
-      93,   132,    -1,     8,    93,   161,    -1,    16,    93,   133,
-      -1,    16,    93,   161,    -1,    10,    93,   134,    -1,    10,
-      93,   161,    -1,    14,    93,   135,    -1,    14,    93,   161,
-      -1,    38,    93,   136,    -1,    38,    93,   161,    -1,    39,
-      93,   137,    -1,    39,    93,   161,    -1,    15,    93,   138,
-      -1,    15,    93,   161,    -1,    41,    93,   118,    -1,    41,
-      93,   161,    -1,    44,    94,    -1,    44,    93,   139,    -1,
-      44,    93,   161,    -1,    55,    93,   141,    -1,    55,    93,
-     161,    -1,    56,    93,   142,    -1,    56,    93,   161,    -1,
-      57,    93,   143,    -1,    57,    93,   161,    -1,    58,    93,
-     145,    -1,    58,    93,   161,    -1,    59,    93,   146,    -1,
-      59,    93,   161,    -1,    62,    93,   147,    -1,    62,    93,
-     161,    -1,    65,    93,   148,    -1,    65,    93,   161,    -1,
-      60,    93,   150,    -1,    60,    93,   161,    -1,    66,    93,
-     149,    -1,    66,    93,   161,    -1,    68,    93,   153,    -1,
-      68,    93,   161,    -1,    69,    93,   154,    -1,    69,    93,
-     161,    -1,    70,    93,   155,    -1,    70,    93,   161,    -1,
-      71,    93,   156,    -1,    71,    93,   161,    -1,    72,    93,
-     157,    -1,    72,    93,   161,    -1,    73,    93,   158,    -1,
-      73,    93,   161,    -1,    74,    93,   160,    -1,    74,    93,
-     161,    -1,    75,    93,   141,    -1,    75,    93,   161,    -1,
-      76,    93,   150,    -1,    76,    93,   161,    -1,    67,    93,
-     159,    -1,    67,    93,   161,    -1,    87,    93,   161,    -1,
-      81,     1,    79,    -1,   115,    94,    -1,   100,    94,    -1,
-     100,    93,   100,    93,    81,    93,    81,    93,    81,    93,
-      81,    93,    81,    94,    -1,   115,    93,    81,    93,   109,
-      94,    -1,    81,    93,    81,    94,    -1,   100,    93,   100,
-      94,    -1,    81,    93,   100,    94,    -1,   108,    94,    -1,
-     100,    93,   100,    94,    -1,    81,    93,   100,    94,    -1,
-      81,    94,    -1,    81,    94,    -1,    81,    93,    81,    94,
-      -1,    81,    93,   100,    94,    -1,   114,    94,    -1,    81,
-      93,   100,    93,   100,    94,    -1,   115,    94,    -1,   109,
-      94,    -1,   100,    93,   110,    94,    -1,    81,    93,    81,
-      93,    81,    93,   100,    94,    -1,    81,    93,    81,    93,
-      81,    93,    81,    93,    81,    93,   100,    94,    -1,    81,
-      93,   100,    94,    -1,    81,    93,    81,    93,    81,    93,
-     113,    94,    -1,   140,    94,    -1,   115,    -1,   140,    93,
-     115,    -1,    81,    93,    81,    93,    81,    93,   113,    94,
-      -1,    81,    93,    81,    93,    81,    93,   113,    94,    -1,
-      81,    93,    81,    93,   113,    94,    -1,   113,    94,    -1,
-      81,    93,    81,    93,    81,    93,    81,    93,    81,    93,
-      81,    93,    81,    93,   104,    93,   113,    94,    -1,   104,
-     112,    -1,    81,    93,    81,    93,    81,    93,    81,    93,
-      81,   112,    -1,    81,    93,    81,    93,    81,    93,    81,
-      94,    -1,    81,    93,    81,    93,    81,    93,   113,    94,
-      -1,    81,    93,    81,    93,    81,    93,   113,    94,    -1,
-      81,    93,    81,    93,    81,    93,   115,    -1,   151,    93,
-     113,    94,    -1,   151,    94,    -1,    81,    93,   115,    94,
-      -1,    81,    93,   115,    94,    -1,    81,    93,   115,    94,
-      -1,    81,    93,   100,    94,    -1,    81,    94,    -1,    81,
-      94,    -1,    81,    93,    81,    93,    81,    94,    -1,    81,
-      93,    81,    93,    81,    94,    -1,    86,    93,    81,    93,
-     113,    94,    -1,    86,    93,    81,    94,    -1,    86,     1,
-      79,    -1
-};
-
-/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
+  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
 static const yytype_uint16 yyrline[] =
 {
        0,    91,    91,    92,    95,    96,    97,    98,   106,   114,
@@ -837,13 +715,13 @@
   "rdata_rrsig", "rdata_nsec", "rdata_nsec3", "rdata_nsec3_param",
   "rdata_tlsa", "rdata_dnskey", "rdata_ipsec_base", "rdata_ipseckey",
   "rdata_nid", "rdata_l32", "rdata_l64", "rdata_lp", "rdata_eui48",
-  "rdata_eui64", "rdata_uri", "rdata_caa", "rdata_unknown", YY_NULL
+  "rdata_eui64", "rdata_uri", "rdata_caa", "rdata_unknown", YY_NULLPTR
 };
 #endif
 
 # ifdef YYPRINT
-/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
-   token YYLEX-NUM.  */
+/* YYTOKNUM[NUM] -- (External) token number corresponding to the
+   (internal) symbol number NUM (which must be that of a token).  */
 static const yytype_uint16 yytoknum[] =
 {
        0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
@@ -858,141 +736,18 @@
 };
 # endif
 
-/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
-static const yytype_uint8 yyr1[] =
-{
-       0,    90,    91,    91,    92,    92,    92,    92,    92,    92,
-      92,    93,    93,    94,    94,    95,    96,    96,    97,    98,
-      98,    99,    99,    99,    99,    99,   100,   100,   101,   101,
-     101,   102,   102,   103,   103,   104,   104,   105,   105,   106,
-     107,   107,   108,   108,   109,   109,   109,   109,   110,   110,
-     111,   111,   111,   112,   112,   113,   113,   114,   114,   115,
-     115,   115,   115,   116,   116,   116,   116,   116,   116,   116,
-     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
-     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
-     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
-     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
-     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
-     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
-     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
-     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
-     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
-     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
-     116,   116,   116,   116,   116,   116,   117,   118,   119,   120,
-     121,   122,   123,   124,   125,   126,   127,   128,   128,   129,
-     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
-     140,   140,   141,   142,   143,   144,   145,   146,   147,   148,
-     149,   150,   151,   152,   152,   153,   154,   155,   156,   157,
-     158,   159,   160,   161,   161,   161
-};
+#define YYPACT_NINF -422
 
-/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
-static const yytype_uint8 yyr2[] =
-{
-       0,     2,     0,     2,     1,     2,     2,     1,     1,     1,
-       2,     1,     2,     1,     2,     4,     4,     4,     3,     2,
-       1,     0,     2,     2,     4,     4,     1,     1,     1,     1,
-       2,     1,     1,     1,     3,     1,     1,     1,     2,     1,
-       1,     3,     1,     3,     1,     1,     3,     3,     1,     3,
-       2,     1,     2,     1,     2,     1,     3,     1,     3,     1,
-       1,     2,     3,     3,     3,     3,     3,     3,     3,     3,
-       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
-       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
-       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
-       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
-       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
-       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
-       3,     3,     3,     2,     3,     3,     3,     3,     3,     3,
-       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
-       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
-       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
-       3,     3,     3,     3,     3,     3,     2,     2,    14,     6,
-       4,     4,     4,     2,     4,     4,     2,     2,     4,     4,
-       2,     6,     2,     2,     4,     8,    12,     4,     8,     2,
-       1,     3,     8,     8,     6,     2,    18,     2,    10,     8,
-       8,     8,     7,     4,     2,     4,     4,     4,     4,     2,
-       2,     6,     6,     6,     4,     3
-};
+#define yypact_value_is_default(Yystate) \
+  (!!((Yystate) == (-422)))
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
-   means the default is an error.  */
-static const yytype_uint8 yydefact[] =
-{
-       2,     0,     1,     0,     0,     0,     4,    11,    31,    20,
-      32,    28,    29,     3,     0,     7,     8,     9,    21,     0,
-      26,    33,    27,    10,     0,     0,     6,     5,    12,     0,
-       0,     0,    19,    30,     0,     0,     0,    23,    22,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,    18,    34,    13,     0,
-      15,    16,    17,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,   133,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,    14,    24,    25,    59,     0,    60,     0,
-      63,    64,     0,    65,    66,     0,    89,    90,     0,    42,
-      91,    92,    71,    72,     0,   117,   118,    83,    84,     0,
-     121,   122,     0,   113,   114,     0,    73,    74,     0,   111,
-     112,     0,   123,   124,     0,   129,   130,    44,    45,     0,
-     119,   120,    67,    68,    69,    70,    75,    76,    77,    78,
-      79,    80,     0,    81,    82,     0,    85,    86,     0,    87,
-      88,     0,    95,    96,     0,    97,    98,     0,    99,   100,
-       0,   101,   102,     0,   107,   108,    57,     0,   109,   110,
-       0,   115,   116,     0,   125,   126,     0,   127,   128,   131,
-     132,   200,   134,     0,   135,     0,   136,   137,     0,   138,
-     139,     0,   140,   141,   142,   143,    39,    37,     0,    35,
-      40,    36,   144,   145,   150,   151,    93,    94,     0,   146,
-     147,     0,     0,   103,   104,    55,     0,   105,   106,     0,
-     148,   149,     0,   152,   153,     0,   172,   173,     0,   154,
-     155,     0,   156,   157,     0,   158,   159,     0,   160,   161,
-       0,   162,   163,     0,   164,   165,     0,   166,   167,   168,
-     169,   170,   171,   175,   174,     0,     0,    61,   176,   177,
-       0,     0,   183,   192,     0,     0,     0,     0,     0,     0,
-       0,     0,   193,     0,     0,     0,     0,     0,   186,     0,
-     187,     0,     0,   190,     0,     0,     0,     0,   199,     0,
-       0,     0,    53,     0,   207,    38,     0,     0,     0,   214,
-       0,   205,     0,     0,     0,     0,     0,     0,     0,   219,
-     220,     0,   225,     0,    62,     0,    43,    48,     0,     0,
-       0,     0,     0,     0,    47,    46,     0,     0,     0,     0,
-       0,     0,     0,    58,     0,     0,     0,   201,     0,     0,
-       0,    51,     0,     0,    54,    41,     0,     0,     0,    56,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
-     182,     0,   194,     0,     0,     0,     0,     0,     0,   180,
-     181,   184,   185,   188,   189,     0,     0,   197,     0,     0,
-       0,    50,    52,     0,     0,   213,     0,     0,     0,   215,
-     216,   217,   218,     0,     0,    49,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,   223,     0,     0,     0,     0,     0,   179,
-     191,     0,     0,     0,   204,     0,     0,     0,     0,   221,
-     222,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     212,     0,     0,   211,     0,     0,   195,   198,     0,   202,
-     203,     0,   209,   210,     0,     0,     0,     0,     0,     0,
-       0,   208,     0,     0,     0,     0,     0,   196,     0,     0,
-     178,     0,     0,     0,     0,   206
-};
+#define YYTABLE_NINF -1
 
-/* YYDEFGOTO[NTERM-NUM].  */
-static const yytype_int16 yydefgoto[] =
-{
-      -1,     1,    13,    99,   100,    15,    16,    17,    18,    31,
-     172,    20,    21,    22,   278,   279,   280,   281,   178,   209,
-     398,   424,   374,   296,   247,   179,    96,   170,   173,   196,
-     223,   226,   229,   176,   180,   232,   235,   238,   241,   244,
-     248,   251,   185,   210,   190,   202,   254,   257,   205,   262,
-     263,   266,   269,   272,   297,   199,   282,   289,   300,   303,
-     193,   292,   293,   309,   312,   315,   318,   321,   324,   306,
-     327,   171
-};
+#define yytable_value_is_error(Yytable_value) \
+  0
 
-/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
-   STATE-NUM.  */
-#define YYPACT_NINF -422
+  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
+     STATE-NUM.  */
 static const yytype_int16 yypact[] =
 {
     -422,   195,  -422,    34,   -50,   -50,  -422,  -422,  -422,    36,
@@ -1053,7 +808,70 @@
     -422,    80,   -50,   419,   272,  -422
 };
 
-/* YYPGOTO[NTERM-NUM].  */
+  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
+     Performed when YYTABLE does not specify something else to do.  Zero
+     means the default is an error.  */
+static const yytype_uint8 yydefact[] =
+{
+       2,     0,     1,     0,     0,     0,     4,    11,    31,    20,
+      32,    28,    29,     3,     0,     7,     8,     9,    21,     0,
+      26,    33,    27,    10,     0,     0,     6,     5,    12,     0,
+       0,     0,    19,    30,     0,     0,     0,    23,    22,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,    18,    34,    13,     0,
+      15,    16,    17,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,   133,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,    14,    24,    25,    59,     0,    60,     0,
+      63,    64,     0,    65,    66,     0,    89,    90,     0,    42,
+      91,    92,    71,    72,     0,   117,   118,    83,    84,     0,
+     121,   122,     0,   113,   114,     0,    73,    74,     0,   111,
+     112,     0,   123,   124,     0,   129,   130,    44,    45,     0,
+     119,   120,    67,    68,    69,    70,    75,    76,    77,    78,
+      79,    80,     0,    81,    82,     0,    85,    86,     0,    87,
+      88,     0,    95,    96,     0,    97,    98,     0,    99,   100,
+       0,   101,   102,     0,   107,   108,    57,     0,   109,   110,
+       0,   115,   116,     0,   125,   126,     0,   127,   128,   131,
+     132,   200,   134,     0,   135,     0,   136,   137,     0,   138,
+     139,     0,   140,   141,   142,   143,    39,    37,     0,    35,
+      40,    36,   144,   145,   150,   151,    93,    94,     0,   146,
+     147,     0,     0,   103,   104,    55,     0,   105,   106,     0,
+     148,   149,     0,   152,   153,     0,   172,   173,     0,   154,
+     155,     0,   156,   157,     0,   158,   159,     0,   160,   161,
+       0,   162,   163,     0,   164,   165,     0,   166,   167,   168,
+     169,   170,   171,   175,   174,     0,     0,    61,   176,   177,
+       0,     0,   183,   192,     0,     0,     0,     0,     0,     0,
+       0,     0,   193,     0,     0,     0,     0,     0,   186,     0,
+     187,     0,     0,   190,     0,     0,     0,     0,   199,     0,
+       0,     0,    53,     0,   207,    38,     0,     0,     0,   214,
+       0,   205,     0,     0,     0,     0,     0,     0,     0,   219,
+     220,     0,   225,     0,    62,     0,    43,    48,     0,     0,
+       0,     0,     0,     0,    47,    46,     0,     0,     0,     0,
+       0,     0,     0,    58,     0,     0,     0,   201,     0,     0,
+       0,    51,     0,     0,    54,    41,     0,     0,     0,    56,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
+     182,     0,   194,     0,     0,     0,     0,     0,     0,   180,
+     181,   184,   185,   188,   189,     0,     0,   197,     0,     0,
+       0,    50,    52,     0,     0,   213,     0,     0,     0,   215,
+     216,   217,   218,     0,     0,    49,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,   223,     0,     0,     0,     0,     0,   179,
+     191,     0,     0,     0,   204,     0,     0,     0,     0,   221,
+     222,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+     212,     0,     0,   211,     0,     0,   195,   198,     0,   202,
+     203,     0,   209,   210,     0,     0,     0,     0,     0,     0,
+       0,   208,     0,     0,     0,     0,     0,   196,     0,     0,
+     178,     0,     0,     0,     0,   206
+};
+
+  /* YYPGOTO[NTERM-NUM].  */
 static const yytype_int16 yypgoto[] =
 {
     -422,  -422,  -422,    -1,   175,  -422,  -422,  -422,  -422,  -422,
@@ -1066,10 +884,22 @@
     -422,   709
 };
 
-/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
-   positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
-#define YYTABLE_NINF -1
+  /* YYDEFGOTO[NTERM-NUM].  */
+static const yytype_int16 yydefgoto[] =
+{
+      -1,     1,    13,    99,   100,    15,    16,    17,    18,    31,
+     172,    20,    21,    22,   278,   279,   280,   281,   178,   209,
+     398,   424,   374,   296,   247,   179,    96,   170,   173,   196,
+     223,   226,   229,   176,   180,   232,   235,   238,   241,   244,
+     248,   251,   185,   210,   190,   202,   254,   257,   205,   262,
+     263,   266,   269,   272,   297,   199,   282,   289,   300,   303,
+     193,   292,   293,   309,   312,   315,   318,   321,   324,   306,
+     327,   171
+};
+
+  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
+     positive, shift that token.  If negative, reduce the rule whose
+     number is the opposite.  If YYTABLE_NINF, syntax error.  */
 static const yytype_uint16 yytable[] =
 {
       14,    19,   462,    24,    25,   163,    28,   166,   284,   182,
@@ -1162,12 +992,6 @@
        0,   334
 };
 
-#define yypact_value_is_default(Yystate) \
-  (!!((Yystate) == (-422)))
-
-#define yytable_value_is_error(Yytable_value) \
-  YYID (0)
-
 static const yytype_int16 yycheck[] =
 {
        1,     1,   423,     4,     5,    79,    80,    81,   144,   109,
@@ -1260,8 +1084,8 @@
       -1,   162
 };
 
-/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
-   symbol of state STATE-NUM.  */
+  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
+     symbol of state STATE-NUM.  */
 static const yytype_uint8 yystos[] =
 {
        0,    91,     0,     1,    77,    78,    79,    80,    81,    82,
@@ -1322,30 +1146,72 @@
       94,    93,   104,    93,   113,    94
 };
 
-#define yyerrok		(yyerrstatus = 0)
-#define yyclearin	(yychar = YYEMPTY)
-#define YYEMPTY		(-2)
-#define YYEOF		0
-
-#define YYACCEPT	goto yyacceptlab
-#define YYABORT		goto yyabortlab
-#define YYERROR		goto yyerrorlab
-
-
-/* Like YYERROR except do call yyerror.  This remains here temporarily
-   to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
-
-#define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
+  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
+static const yytype_uint8 yyr1[] =
+{
+       0,    90,    91,    91,    92,    92,    92,    92,    92,    92,
+      92,    93,    93,    94,    94,    95,    96,    96,    97,    98,
+      98,    99,    99,    99,    99,    99,   100,   100,   101,   101,
+     101,   102,   102,   103,   103,   104,   104,   105,   105,   106,
+     107,   107,   108,   108,   109,   109,   109,   109,   110,   110,
+     111,   111,   111,   112,   112,   113,   113,   114,   114,   115,
+     115,   115,   115,   116,   116,   116,   116,   116,   116,   116,
+     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
+     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
+     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
+     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
+     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
+     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
+     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
+     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
+     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
+     116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
+     116,   116,   116,   116,   116,   116,   117,   118,   119,   120,
+     121,   122,   123,   124,   125,   126,   127,   128,   128,   129,
+     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
+     140,   140,   141,   142,   143,   144,   145,   146,   147,   148,
+     149,   150,   151,   152,   152,   153,   154,   155,   156,   157,
+     158,   159,   160,   161,   161,   161
+};
+
+  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
+static const yytype_uint8 yyr2[] =
+{
+       0,     2,     0,     2,     1,     2,     2,     1,     1,     1,
+       2,     1,     2,     1,     2,     4,     4,     4,     3,     2,
+       1,     0,     2,     2,     4,     4,     1,     1,     1,     1,
+       2,     1,     1,     1,     3,     1,     1,     1,     2,     1,
+       1,     3,     1,     3,     1,     1,     3,     3,     1,     3,
+       2,     1,     2,     1,     2,     1,     3,     1,     3,     1,
+       1,     2,     3,     3,     3,     3,     3,     3,     3,     3,
+       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
+       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
+       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
+       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
+       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
+       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
+       3,     3,     3,     2,     3,     3,     3,     3,     3,     3,
+       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
+       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
+       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
+       3,     3,     3,     3,     3,     3,     2,     2,    14,     6,
+       4,     4,     4,     2,     4,     4,     2,     2,     4,     4,
+       2,     6,     2,     2,     4,     8,    12,     4,     8,     2,
+       1,     3,     8,     8,     6,     2,    18,     2,    10,     8,
+       8,     8,     7,     4,     2,     4,     4,     4,     4,     2,
+       2,     6,     6,     6,     4,     3
+};
+
+
+#define yyerrok         (yyerrstatus = 0)
+#define yyclearin       (yychar = YYEMPTY)
+#define YYEMPTY         (-2)
+#define YYEOF           0
+
+#define YYACCEPT        goto yyacceptlab
+#define YYABORT         goto yyabortlab
+#define YYERROR         goto yyerrorlab
+
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -1362,27 +1228,15 @@
   else                                                          \
     {                                                           \
       yyerror (YY_("syntax error: cannot back up")); \
-      YYERROR;							\
-    }								\
-while (YYID (0))
+      YYERROR;                                                  \
+    }                                                           \
+while (0)
 
 /* Error token number */
-#define YYTERROR	1
-#define YYERRCODE	256
-
-
-/* This macro is provided for backward compatibility. */
-#ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
-#endif
+#define YYTERROR        1
+#define YYERRCODE       256
 
 
-/* YYLEX -- calling `yylex' with the right arguments.  */
-#ifdef YYLEX_PARAM
-# define YYLEX yylex (YYLEX_PARAM)
-#else
-# define YYLEX yylex ()
-#endif
 
 /* Enable debugging if requested.  */
 #if YYDEBUG
@@ -1392,40 +1246,36 @@
 #  define YYFPRINTF fprintf
 # endif
 
-# define YYDPRINTF(Args)			\
-do {						\
-  if (yydebug)					\
-    YYFPRINTF Args;				\
-} while (YYID (0))
-
-# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
-do {									  \
-  if (yydebug)								  \
-    {									  \
-      YYFPRINTF (stderr, "%s ", Title);					  \
-      yy_symbol_print (stderr,						  \
-		  Type, Value); \
-      YYFPRINTF (stderr, "\n");						  \
-    }									  \
-} while (YYID (0))
+# define YYDPRINTF(Args)                        \
+do {                                            \
+  if (yydebug)                                  \
+    YYFPRINTF Args;                             \
+} while (0)
 
+/* This macro is provided for backward compatibility. */
+#ifndef YY_LOCATION_PRINT
+# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+#endif
+
+
+# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
+do {                                                                      \
+  if (yydebug)                                                            \
+    {                                                                     \
+      YYFPRINTF (stderr, "%s ", Title);                                   \
+      yy_symbol_print (stderr,                                            \
+                  Type, Value); \
+      YYFPRINTF (stderr, "\n");                                           \
+    }                                                                     \
+} while (0)
 
-/*--------------------------------.
-| Print this symbol on YYOUTPUT.  |
-`--------------------------------*/
 
-/*ARGSUSED*/
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
+/*----------------------------------------.
+| Print this symbol's value on YYOUTPUT.  |
+`----------------------------------------*/
+
 static void
 yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
-#else
-static void
-yy_symbol_value_print (yyoutput, yytype, yyvaluep)
-    FILE *yyoutput;
-    int yytype;
-    YYSTYPE const * const yyvaluep;
-#endif
 {
   FILE *yyo = yyoutput;
   YYUSE (yyo);
@@ -1434,14 +1284,8 @@
 # ifdef YYPRINT
   if (yytype < YYNTOKENS)
     YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
-# else
-  YYUSE (yyoutput);
 # endif
-  switch (yytype)
-    {
-      default:
-        break;
-    }
+  YYUSE (yytype);
 }
 
 
@@ -1449,22 +1293,11 @@
 | Print this symbol on YYOUTPUT.  |
 `--------------------------------*/
 
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
 static void
 yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
-#else
-static void
-yy_symbol_print (yyoutput, yytype, yyvaluep)
-    FILE *yyoutput;
-    int yytype;
-    YYSTYPE const * const yyvaluep;
-#endif
 {
-  if (yytype < YYNTOKENS)
-    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
-  else
-    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);
+  YYFPRINTF (yyoutput, "%s %s (",
+             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);
 
   yy_symbol_value_print (yyoutput, yytype, yyvaluep);
   YYFPRINTF (yyoutput, ")");
@@ -1475,16 +1308,8 @@
 | TOP (included).                                                   |
 `------------------------------------------------------------------*/
 
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
 static void
 yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
-#else
-static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
-#endif
 {
   YYFPRINTF (stderr, "Stack now");
   for (; yybottom <= yytop; yybottom++)
@@ -1495,49 +1320,42 @@
   YYFPRINTF (stderr, "\n");
 }
 
-# define YY_STACK_PRINT(Bottom, Top)				\
-do {								\
-  if (yydebug)							\
-    yy_stack_print ((Bottom), (Top));				\
-} while (YYID (0))
+# define YY_STACK_PRINT(Bottom, Top)                            \
+do {                                                            \
+  if (yydebug)                                                  \
+    yy_stack_print ((Bottom), (Top));                           \
+} while (0)
 
 
 /*------------------------------------------------.
 | Report that the YYRULE is going to be reduced.  |
 `------------------------------------------------*/
 
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
 static void
-yy_reduce_print (YYSTYPE *yyvsp, int yyrule)
-#else
-static void
-yy_reduce_print (yyvsp, yyrule)
-    YYSTYPE *yyvsp;
-    int yyrule;
-#endif
+yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule)
 {
+  unsigned long int yylno = yyrline[yyrule];
   int yynrhs = yyr2[yyrule];
   int yyi;
-  unsigned long int yylno = yyrline[yyrule];
   YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
-	     yyrule - 1, yylno);
+             yyrule - 1, yylno);
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
       YYFPRINTF (stderr, "   $%d = ", yyi + 1);
-      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
-		       &(yyvsp[(yyi + 1) - (yynrhs)])
-		       		       );
+      yy_symbol_print (stderr,
+                       yystos[yyssp[yyi + 1 - yynrhs]],
+                       &(yyvsp[(yyi + 1) - (yynrhs)])
+                                              );
       YYFPRINTF (stderr, "\n");
     }
 }
 
-# define YY_REDUCE_PRINT(Rule)		\
-do {					\
-  if (yydebug)				\
-    yy_reduce_print (yyvsp, Rule); \
-} while (YYID (0))
+# define YY_REDUCE_PRINT(Rule)          \
+do {                                    \
+  if (yydebug)                          \
+    yy_reduce_print (yyssp, yyvsp, Rule); \
+} while (0)
 
 /* Nonzero means print parse trace.  It is left uninitialized so that
    multiple parsers can coexist.  */
@@ -1551,7 +1369,7 @@
 
 
 /* YYINITDEPTH -- initial size of the parser's stacks.  */
-#ifndef	YYINITDEPTH
+#ifndef YYINITDEPTH
 # define YYINITDEPTH 200
 #endif
 
@@ -1574,15 +1392,8 @@
 #   define yystrlen strlen
 #  else
 /* Return the length of YYSTR.  */
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
 static YYSIZE_T
 yystrlen (const char *yystr)
-#else
-static YYSIZE_T
-yystrlen (yystr)
-    const char *yystr;
-#endif
 {
   YYSIZE_T yylen;
   for (yylen = 0; yystr[yylen]; yylen++)
@@ -1598,16 +1409,8 @@
 #  else
 /* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
    YYDEST.  */
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
 static char *
 yystpcpy (char *yydest, const char *yysrc)
-#else
-static char *
-yystpcpy (yydest, yysrc)
-    char *yydest;
-    const char *yysrc;
-#endif
 {
   char *yyd = yydest;
   const char *yys = yysrc;
@@ -1637,27 +1440,27 @@
       char const *yyp = yystr;
 
       for (;;)
-	switch (*++yyp)
-	  {
-	  case '\'':
-	  case ',':
-	    goto do_not_strip_quotes;
-
-	  case '\\':
-	    if (*++yyp != '\\')
-	      goto do_not_strip_quotes;
-	    /* Fall through.  */
-	  default:
-	    if (yyres)
-	      yyres[yyn] = *yyp;
-	    yyn++;
-	    break;
-
-	  case '"':
-	    if (yyres)
-	      yyres[yyn] = '\0';
-	    return yyn;
-	  }
+        switch (*++yyp)
+          {
+          case '\'':
+          case ',':
+            goto do_not_strip_quotes;
+
+          case '\\':
+            if (*++yyp != '\\')
+              goto do_not_strip_quotes;
+            /* Fall through.  */
+          default:
+            if (yyres)
+              yyres[yyn] = *yyp;
+            yyn++;
+            break;
+
+          case '"':
+            if (yyres)
+              yyres[yyn] = '\0';
+            return yyn;
+          }
     do_not_strip_quotes: ;
     }
 
@@ -1680,11 +1483,11 @@
 yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                 yytype_int16 *yyssp, int yytoken)
 {
-  YYSIZE_T yysize0 = yytnamerr (YY_NULL, yytname[yytoken]);
+  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
   YYSIZE_T yysize = yysize0;
   enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
   /* Internationalized format string. */
-  const char *yyformat = YY_NULL;
+  const char *yyformat = YY_NULLPTR;
   /* Arguments of yyformat. */
   char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
   /* Number of reported tokens (one for the "unexpected", one per
@@ -1692,10 +1495,6 @@
   int yycount = 0;
 
   /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
      - If this state is a consistent state with a default action, then
        the only way this function was invoked is if the default action
        is an error action.  In that case, don't check for expected
@@ -1745,7 +1544,7 @@
                   }
                 yyarg[yycount++] = yytname[yyx];
                 {
-                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULL, yytname[yyx]);
+                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                   if (! (yysize <= yysize1
                          && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                     return 2;
@@ -1812,31 +1611,17 @@
 | Release the memory associated to this symbol.  |
 `-----------------------------------------------*/
 
-/*ARGSUSED*/
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
 static void
 yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)
-#else
-static void
-yydestruct (yymsg, yytype, yyvaluep)
-    const char *yymsg;
-    int yytype;
-    YYSTYPE *yyvaluep;
-#endif
 {
   YYUSE (yyvaluep);
-
   if (!yymsg)
     yymsg = "Deleting";
   YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);
 
-  switch (yytype)
-    {
-
-      default:
-        break;
-    }
+  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
+  YYUSE (yytype);
+  YY_IGNORE_MAYBE_UNINITIALIZED_END
 }
 
 
@@ -1845,18 +1630,8 @@
 /* The lookahead symbol.  */
 int yychar;
 
-
-#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
-# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
-# define YY_IGNORE_MAYBE_UNINITIALIZED_END
-#endif
-#ifndef YY_INITIAL_VALUE
-# define YY_INITIAL_VALUE(Value) /* Nothing. */
-#endif
-
 /* The semantic value of the lookahead symbol.  */
-YYSTYPE yylval YY_INITIAL_VALUE(yyval_default);
-
+YYSTYPE yylval;
 /* Number of syntax errors so far.  */
 int yynerrs;
 
@@ -1865,35 +1640,16 @@
 | yyparse.  |
 `----------*/
 
-#ifdef YYPARSE_PARAM
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
-int
-yyparse (void *YYPARSE_PARAM)
-#else
-int
-yyparse (YYPARSE_PARAM)
-    void *YYPARSE_PARAM;
-#endif
-#else /* ! YYPARSE_PARAM */
-#if (defined __STDC__ || defined __C99__FUNC__ \
-     || defined __cplusplus || defined _MSC_VER)
 int
 yyparse (void)
-#else
-int
-yyparse ()
-
-#endif
-#endif
 {
     int yystate;
     /* Number of tokens to shift before error messages enabled.  */
     int yyerrstatus;
 
     /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
+       'yyss': related to states.
+       'yyvs': related to semantic values.
 
        Refer to the stacks through separate pointers, to allow yyoverflow
        to reallocate them elsewhere.  */
@@ -1961,23 +1717,23 @@
 
 #ifdef yyoverflow
       {
-	/* Give user a chance to reallocate the stack.  Use copies of
-	   these so that the &'s don't force the real ones into
-	   memory.  */
-	YYSTYPE *yyvs1 = yyvs;
-	yytype_int16 *yyss1 = yyss;
-
-	/* Each stack pointer address is followed by the size of the
-	   data in use in that stack, in bytes.  This used to be a
-	   conditional around just the two extra args, but that might
-	   be undefined if yyoverflow is a macro.  */
-	yyoverflow (YY_("memory exhausted"),
-		    &yyss1, yysize * sizeof (*yyssp),
-		    &yyvs1, yysize * sizeof (*yyvsp),
-		    &yystacksize);
+        /* Give user a chance to reallocate the stack.  Use copies of
+           these so that the &'s don't force the real ones into
+           memory.  */
+        YYSTYPE *yyvs1 = yyvs;
+        yytype_int16 *yyss1 = yyss;
+
+        /* Each stack pointer address is followed by the size of the
+           data in use in that stack, in bytes.  This used to be a
+           conditional around just the two extra args, but that might
+           be undefined if yyoverflow is a macro.  */
+        yyoverflow (YY_("memory exhausted"),
+                    &yyss1, yysize * sizeof (*yyssp),
+                    &yyvs1, yysize * sizeof (*yyvsp),
+                    &yystacksize);
 
-	yyss = yyss1;
-	yyvs = yyvs1;
+        yyss = yyss1;
+        yyvs = yyvs1;
       }
 #else /* no yyoverflow */
 # ifndef YYSTACK_RELOCATE
@@ -1985,22 +1741,22 @@
 # else
       /* Extend the stack our own way.  */
       if (YYMAXDEPTH <= yystacksize)
-	goto yyexhaustedlab;
+        goto yyexhaustedlab;
       yystacksize *= 2;
       if (YYMAXDEPTH < yystacksize)
-	yystacksize = YYMAXDEPTH;
+        yystacksize = YYMAXDEPTH;
 
       {
-	yytype_int16 *yyss1 = yyss;
-	union yyalloc *yyptr =
-	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
-	if (! yyptr)
-	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+        yytype_int16 *yyss1 = yyss;
+        union yyalloc *yyptr =
+          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
+        if (! yyptr)
+          goto yyexhaustedlab;
+        YYSTACK_RELOCATE (yyss_alloc, yyss);
+        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
 #  undef YYSTACK_RELOCATE
-	if (yyss1 != yyssa)
-	  YYSTACK_FREE (yyss1);
+        if (yyss1 != yyssa)
+          YYSTACK_FREE (yyss1);
       }
 # endif
 #endif /* no yyoverflow */
@@ -2009,10 +1765,10 @@
       yyvsp = yyvs + yysize - 1;
 
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
-		  (unsigned long int) yystacksize));
+                  (unsigned long int) yystacksize));
 
       if (yyss + yystacksize - 1 <= yyssp)
-	YYABORT;
+        YYABORT;
     }
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
@@ -2041,7 +1797,7 @@
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
-      yychar = YYLEX;
+      yychar = yylex ();
     }
 
   if (yychar <= YYEOF)
@@ -2106,7 +1862,7 @@
   yylen = yyr2[yyn];
 
   /* If YYLEN is nonzero, implement the default value of the action:
-     `$$ = $1'.
+     '$$ = $1'.
 
      Otherwise, the following line sets YYVAL to garbage.
      This behavior is undocumented and Bison
@@ -2120,14 +1876,13 @@
   switch (yyn)
     {
         case 6:
-/* Line 1792 of yacc.c  */
-#line 97 "zparser.y"
+#line 97 "./zparser.y" /* yacc.c:1646  */
     {}
+#line 1882 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 7:
-/* Line 1792 of yacc.c  */
-#line 99 "zparser.y"
+#line 99 "./zparser.y" /* yacc.c:1646  */
     {
 	    region_free_all(parser->rr_region);
 	    parser->current_rr.type = 0;
@@ -2135,11 +1890,11 @@
 	    parser->current_rr.rdatas = parser->temporary_rdatas;
 	    parser->error_occurred = 0;
     }
+#line 1894 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 8:
-/* Line 1792 of yacc.c  */
-#line 107 "zparser.y"
+#line 107 "./zparser.y" /* yacc.c:1646  */
     {
 	    region_free_all(parser->rr_region);
 	    parser->current_rr.type = 0;
@@ -2147,11 +1902,11 @@
 	    parser->current_rr.rdatas = parser->temporary_rdatas;
 	    parser->error_occurred = 0;
     }
+#line 1906 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 9:
-/* Line 1792 of yacc.c  */
-#line 115 "zparser.y"
+#line 115 "./zparser.y" /* yacc.c:1646  */
     {	/* rr should be fully parsed */
 	    if (!parser->error_occurred) {
 			    parser->current_rr.rdatas
@@ -2171,124 +1926,124 @@
 	    parser->current_rr.rdatas = parser->temporary_rdatas;
 	    parser->error_occurred = 0;
     }
+#line 1930 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 15:
-/* Line 1792 of yacc.c  */
-#line 147 "zparser.y"
+#line 147 "./zparser.y" /* yacc.c:1646  */
     {
-	    parser->default_ttl = zparser_ttl2int((yyvsp[(3) - (4)].data).str, &(parser->error_occurred));
+	    parser->default_ttl = zparser_ttl2int((yyvsp[-1].data).str, &(parser->error_occurred));
 	    if (parser->error_occurred == 1) {
 		    parser->default_ttl = DEFAULT_TTL;
 			parser->error_occurred = 0;
 	    }
     }
+#line 1942 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 16:
-/* Line 1792 of yacc.c  */
-#line 157 "zparser.y"
+#line 157 "./zparser.y" /* yacc.c:1646  */
     {
 	    /* if previous origin is unused, remove it, do not leak it */
-	    if(parser->origin != error_domain && parser->origin != (yyvsp[(3) - (4)].domain)) {
+	    if(parser->origin != error_domain && parser->origin != (yyvsp[-1].domain)) {
 		/* protect $3 from deletion, because deldomain walks up */
-		(yyvsp[(3) - (4)].domain)->usage ++;
+		(yyvsp[-1].domain)->usage ++;
 	    	domain_table_deldomain(parser->db, parser->origin);
-		(yyvsp[(3) - (4)].domain)->usage --;
+		(yyvsp[-1].domain)->usage --;
 	    }
-	    parser->origin = (yyvsp[(3) - (4)].domain);
+	    parser->origin = (yyvsp[-1].domain);
     }
+#line 1957 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 17:
-/* Line 1792 of yacc.c  */
-#line 168 "zparser.y"
+#line 168 "./zparser.y" /* yacc.c:1646  */
     {
 	    zc_error_prev_line("$ORIGIN directive requires absolute domain name");
     }
+#line 1965 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 18:
-/* Line 1792 of yacc.c  */
-#line 174 "zparser.y"
+#line 174 "./zparser.y" /* yacc.c:1646  */
     {
-	    parser->current_rr.owner = (yyvsp[(1) - (3)].domain);
-	    parser->current_rr.type = (yyvsp[(3) - (3)].type);
+	    parser->current_rr.owner = (yyvsp[-2].domain);
+	    parser->current_rr.type = (yyvsp[0].type);
     }
+#line 1974 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 19:
-/* Line 1792 of yacc.c  */
-#line 181 "zparser.y"
+#line 181 "./zparser.y" /* yacc.c:1646  */
     {
-	    parser->prev_dname = (yyvsp[(1) - (2)].domain);
-	    (yyval.domain) = (yyvsp[(1) - (2)].domain);
+	    parser->prev_dname = (yyvsp[-1].domain);
+	    (yyval.domain) = (yyvsp[-1].domain);
     }
+#line 1983 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 20:
-/* Line 1792 of yacc.c  */
-#line 186 "zparser.y"
+#line 186 "./zparser.y" /* yacc.c:1646  */
     {
 	    (yyval.domain) = parser->prev_dname;
     }
+#line 1991 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 21:
-/* Line 1792 of yacc.c  */
-#line 192 "zparser.y"
+#line 192 "./zparser.y" /* yacc.c:1646  */
     {
 	    parser->current_rr.ttl = parser->default_ttl;
 	    parser->current_rr.klass = parser->default_class;
     }
+#line 2000 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 22:
-/* Line 1792 of yacc.c  */
-#line 197 "zparser.y"
+#line 197 "./zparser.y" /* yacc.c:1646  */
     {
 	    parser->current_rr.ttl = parser->default_ttl;
-	    parser->current_rr.klass = (yyvsp[(1) - (2)].klass);
+	    parser->current_rr.klass = (yyvsp[-1].klass);
     }
+#line 2009 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 23:
-/* Line 1792 of yacc.c  */
-#line 202 "zparser.y"
+#line 202 "./zparser.y" /* yacc.c:1646  */
     {
-	    parser->current_rr.ttl = (yyvsp[(1) - (2)].ttl);
+	    parser->current_rr.ttl = (yyvsp[-1].ttl);
 	    parser->current_rr.klass = parser->default_class;
     }
+#line 2018 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 24:
-/* Line 1792 of yacc.c  */
-#line 207 "zparser.y"
+#line 207 "./zparser.y" /* yacc.c:1646  */
     {
-	    parser->current_rr.ttl = (yyvsp[(1) - (4)].ttl);
-	    parser->current_rr.klass = (yyvsp[(3) - (4)].klass);
+	    parser->current_rr.ttl = (yyvsp[-3].ttl);
+	    parser->current_rr.klass = (yyvsp[-1].klass);
     }
+#line 2027 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 25:
-/* Line 1792 of yacc.c  */
-#line 212 "zparser.y"
+#line 212 "./zparser.y" /* yacc.c:1646  */
     {
-	    parser->current_rr.ttl = (yyvsp[(3) - (4)].ttl);
-	    parser->current_rr.klass = (yyvsp[(1) - (4)].klass);
+	    parser->current_rr.ttl = (yyvsp[-1].ttl);
+	    parser->current_rr.klass = (yyvsp[-3].klass);
     }
+#line 2036 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 27:
-/* Line 1792 of yacc.c  */
-#line 220 "zparser.y"
+#line 220 "./zparser.y" /* yacc.c:1646  */
     {
-	    if ((yyvsp[(1) - (1)].dname) == error_dname) {
+	    if ((yyvsp[0].dname) == error_dname) {
 		    (yyval.domain) = error_domain;
 	    } else if(parser->origin == error_domain) {
 		    zc_error("cannot concatenate origin to domain name, because origin failed to parse");
 		    (yyval.domain) = error_domain;
-	    } else if ((yyvsp[(1) - (1)].dname)->name_size + domain_dname(parser->origin)->name_size - 1 > MAXDOMAINLEN) {
+	    } else if ((yyvsp[0].dname)->name_size + domain_dname(parser->origin)->name_size - 1 > MAXDOMAINLEN) {
 		    zc_error("domain name exceeds %d character limit", MAXDOMAINLEN);
 		    (yyval.domain) = error_domain;
 	    } else {
@@ -2296,86 +2051,86 @@
 			    parser->db->domains,
 			    dname_concatenate(
 				    parser->rr_region,
-				    (yyvsp[(1) - (1)].dname),
+				    (yyvsp[0].dname),
 				    domain_dname(parser->origin)));
 	    }
     }
+#line 2059 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 28:
-/* Line 1792 of yacc.c  */
-#line 241 "zparser.y"
+#line 241 "./zparser.y" /* yacc.c:1646  */
     {
 	    (yyval.domain) = parser->db->domains->root;
     }
+#line 2067 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 29:
-/* Line 1792 of yacc.c  */
-#line 245 "zparser.y"
+#line 245 "./zparser.y" /* yacc.c:1646  */
     {
 	    (yyval.domain) = parser->origin;
     }
+#line 2075 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 30:
-/* Line 1792 of yacc.c  */
-#line 249 "zparser.y"
+#line 249 "./zparser.y" /* yacc.c:1646  */
     {
-	    if ((yyvsp[(1) - (2)].dname) != error_dname) {
-		    (yyval.domain) = domain_table_insert(parser->db->domains, (yyvsp[(1) - (2)].dname));
+	    if ((yyvsp[-1].dname) != error_dname) {
+		    (yyval.domain) = domain_table_insert(parser->db->domains, (yyvsp[-1].dname));
 	    } else {
 		    (yyval.domain) = error_domain;
 	    }
     }
+#line 2087 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 31:
-/* Line 1792 of yacc.c  */
-#line 259 "zparser.y"
+#line 259 "./zparser.y" /* yacc.c:1646  */
     {
-	    if ((yyvsp[(1) - (1)].data).len > MAXLABELLEN) {
+	    if ((yyvsp[0].data).len > MAXLABELLEN) {
 		    zc_error("label exceeds %d character limit", MAXLABELLEN);
 		    (yyval.dname) = error_dname;
-	    } else if ((yyvsp[(1) - (1)].data).len <= 0) {
+	    } else if ((yyvsp[0].data).len <= 0) {
 		    zc_error("zero label length");
 		    (yyval.dname) = error_dname;
 	    } else {
 		    (yyval.dname) = dname_make_from_label(parser->rr_region,
-					       (uint8_t *) (yyvsp[(1) - (1)].data).str,
-					       (yyvsp[(1) - (1)].data).len);
+					       (uint8_t *) (yyvsp[0].data).str,
+					       (yyvsp[0].data).len);
 	    }
     }
+#line 2105 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 32:
-/* Line 1792 of yacc.c  */
-#line 273 "zparser.y"
+#line 273 "./zparser.y" /* yacc.c:1646  */
     {
 	    zc_error("bitlabels are now deprecated. RFC2673 is obsoleted.");
 	    (yyval.dname) = error_dname;
     }
+#line 2114 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 34:
-/* Line 1792 of yacc.c  */
-#line 281 "zparser.y"
+#line 281 "./zparser.y" /* yacc.c:1646  */
     {
-	    if ((yyvsp[(1) - (3)].dname) == error_dname || (yyvsp[(3) - (3)].dname) == error_dname) {
+	    if ((yyvsp[-2].dname) == error_dname || (yyvsp[0].dname) == error_dname) {
 		    (yyval.dname) = error_dname;
-	    } else if ((yyvsp[(1) - (3)].dname)->name_size + (yyvsp[(3) - (3)].dname)->name_size - 1 > MAXDOMAINLEN) {
+	    } else if ((yyvsp[-2].dname)->name_size + (yyvsp[0].dname)->name_size - 1 > MAXDOMAINLEN) {
 		    zc_error("domain name exceeds %d character limit",
 			     MAXDOMAINLEN);
 		    (yyval.dname) = error_dname;
 	    } else {
-		    (yyval.dname) = dname_concatenate(parser->rr_region, (yyvsp[(1) - (3)].dname), (yyvsp[(3) - (3)].dname));
+		    (yyval.dname) = dname_concatenate(parser->rr_region, (yyvsp[-2].dname), (yyvsp[0].dname));
 	    }
     }
+#line 2130 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 37:
-/* Line 1792 of yacc.c  */
-#line 303 "zparser.y"
+#line 303 "./zparser.y" /* yacc.c:1646  */
     {
 	    char *result = (char *) region_alloc(parser->rr_region, 2);
 	    result[0] = 0;
@@ -2383,154 +2138,154 @@
 	    (yyval.data).str = result;
 	    (yyval.data).len = 1;
     }
+#line 2142 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 38:
-/* Line 1792 of yacc.c  */
-#line 311 "zparser.y"
+#line 311 "./zparser.y" /* yacc.c:1646  */
     {
 	    char *result = (char *) region_alloc(parser->rr_region,
-						 (yyvsp[(1) - (2)].data).len + 2);
-	    memcpy(result, (yyvsp[(1) - (2)].data).str, (yyvsp[(1) - (2)].data).len);
-	    result[(yyvsp[(1) - (2)].data).len] = 0;
-	    result[(yyvsp[(1) - (2)].data).len+1] = '\0';
+						 (yyvsp[-1].data).len + 2);
+	    memcpy(result, (yyvsp[-1].data).str, (yyvsp[-1].data).len);
+	    result[(yyvsp[-1].data).len] = 0;
+	    result[(yyvsp[-1].data).len+1] = '\0';
 	    (yyval.data).str = result;
-	    (yyval.data).len = (yyvsp[(1) - (2)].data).len + 1;
+	    (yyval.data).len = (yyvsp[-1].data).len + 1;
     }
+#line 2156 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 39:
-/* Line 1792 of yacc.c  */
-#line 323 "zparser.y"
+#line 323 "./zparser.y" /* yacc.c:1646  */
     {
 	    char *result = (char *) region_alloc(parser->rr_region,
-						 (yyvsp[(1) - (1)].data).len + 1);
+						 (yyvsp[0].data).len + 1);
 
-	    if ((yyvsp[(1) - (1)].data).len > MAXLABELLEN)
+	    if ((yyvsp[0].data).len > MAXLABELLEN)
 		    zc_error("label exceeds %d character limit", MAXLABELLEN);
 
 	    /* make label anyway */
-	    result[0] = (yyvsp[(1) - (1)].data).len;
-	    memcpy(result+1, (yyvsp[(1) - (1)].data).str, (yyvsp[(1) - (1)].data).len);
+	    result[0] = (yyvsp[0].data).len;
+	    memcpy(result+1, (yyvsp[0].data).str, (yyvsp[0].data).len);
 
 	    (yyval.data).str = result;
-	    (yyval.data).len = (yyvsp[(1) - (1)].data).len + 1;
+	    (yyval.data).len = (yyvsp[0].data).len + 1;
     }
+#line 2175 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 41:
-/* Line 1792 of yacc.c  */
-#line 341 "zparser.y"
+#line 341 "./zparser.y" /* yacc.c:1646  */
     {
-	    if ((yyvsp[(1) - (3)].data).len + (yyvsp[(3) - (3)].data).len - 3 > MAXDOMAINLEN)
+	    if ((yyvsp[-2].data).len + (yyvsp[0].data).len - 3 > MAXDOMAINLEN)
 		    zc_error("domain name exceeds %d character limit",
 			     MAXDOMAINLEN);
 
 	    /* make dname anyway */
-	    (yyval.data).len = (yyvsp[(1) - (3)].data).len + (yyvsp[(3) - (3)].data).len;
+	    (yyval.data).len = (yyvsp[-2].data).len + (yyvsp[0].data).len;
 	    (yyval.data).str = (char *) region_alloc(parser->rr_region, (yyval.data).len + 1);
-	    memcpy((yyval.data).str, (yyvsp[(1) - (3)].data).str, (yyvsp[(1) - (3)].data).len);
-	    memcpy((yyval.data).str + (yyvsp[(1) - (3)].data).len, (yyvsp[(3) - (3)].data).str, (yyvsp[(3) - (3)].data).len);
+	    memcpy((yyval.data).str, (yyvsp[-2].data).str, (yyvsp[-2].data).len);
+	    memcpy((yyval.data).str + (yyvsp[-2].data).len, (yyvsp[0].data).str, (yyvsp[0].data).len);
 	    (yyval.data).str[(yyval.data).len] = '\0';
     }
+#line 2192 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 42:
-/* Line 1792 of yacc.c  */
-#line 356 "zparser.y"
+#line 356 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_txt_wireformat(zparser_conv_text(parser->rr_region, (yyvsp[(1) - (1)].data).str, (yyvsp[(1) - (1)].data).len), 1);
+	    zadd_rdata_txt_wireformat(zparser_conv_text(parser->rr_region, (yyvsp[0].data).str, (yyvsp[0].data).len), 1);
     }
+#line 2200 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 43:
-/* Line 1792 of yacc.c  */
-#line 360 "zparser.y"
+#line 360 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_txt_wireformat(zparser_conv_text(parser->rr_region, (yyvsp[(3) - (3)].data).str, (yyvsp[(3) - (3)].data).len), 0);
+	    zadd_rdata_txt_wireformat(zparser_conv_text(parser->rr_region, (yyvsp[0].data).str, (yyvsp[0].data).len), 0);
     }
+#line 2208 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 45:
-/* Line 1792 of yacc.c  */
-#line 371 "zparser.y"
+#line 371 "./zparser.y" /* yacc.c:1646  */
     {
 	    (yyval.data).len = 1;
 	    (yyval.data).str = region_strdup(parser->rr_region, ".");
     }
+#line 2217 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 46:
-/* Line 1792 of yacc.c  */
-#line 376 "zparser.y"
+#line 376 "./zparser.y" /* yacc.c:1646  */
     {
-	    (yyval.data).len = (yyvsp[(1) - (3)].data).len + (yyvsp[(3) - (3)].data).len + 1;
+	    (yyval.data).len = (yyvsp[-2].data).len + (yyvsp[0].data).len + 1;
 	    (yyval.data).str = (char *) region_alloc(parser->rr_region, (yyval.data).len + 1);
-	    memcpy((yyval.data).str, (yyvsp[(1) - (3)].data).str, (yyvsp[(1) - (3)].data).len);
-	    memcpy((yyval.data).str + (yyvsp[(1) - (3)].data).len, " ", 1);
-	    memcpy((yyval.data).str + (yyvsp[(1) - (3)].data).len + 1, (yyvsp[(3) - (3)].data).str, (yyvsp[(3) - (3)].data).len);
+	    memcpy((yyval.data).str, (yyvsp[-2].data).str, (yyvsp[-2].data).len);
+	    memcpy((yyval.data).str + (yyvsp[-2].data).len, " ", 1);
+	    memcpy((yyval.data).str + (yyvsp[-2].data).len + 1, (yyvsp[0].data).str, (yyvsp[0].data).len);
 	    (yyval.data).str[(yyval.data).len] = '\0';
     }
+#line 2230 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 47:
-/* Line 1792 of yacc.c  */
-#line 385 "zparser.y"
+#line 385 "./zparser.y" /* yacc.c:1646  */
     {
-	    (yyval.data).len = (yyvsp[(1) - (3)].data).len + (yyvsp[(3) - (3)].data).len + 1;
+	    (yyval.data).len = (yyvsp[-2].data).len + (yyvsp[0].data).len + 1;
 	    (yyval.data).str = (char *) region_alloc(parser->rr_region, (yyval.data).len + 1);
-	    memcpy((yyval.data).str, (yyvsp[(1) - (3)].data).str, (yyvsp[(1) - (3)].data).len);
-	    memcpy((yyval.data).str + (yyvsp[(1) - (3)].data).len, ".", 1);
-	    memcpy((yyval.data).str + (yyvsp[(1) - (3)].data).len + 1, (yyvsp[(3) - (3)].data).str, (yyvsp[(3) - (3)].data).len);
+	    memcpy((yyval.data).str, (yyvsp[-2].data).str, (yyvsp[-2].data).len);
+	    memcpy((yyval.data).str + (yyvsp[-2].data).len, ".", 1);
+	    memcpy((yyval.data).str + (yyvsp[-2].data).len + 1, (yyvsp[0].data).str, (yyvsp[0].data).len);
 	    (yyval.data).str[(yyval.data).len] = '\0';
     }
+#line 2243 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 48:
-/* Line 1792 of yacc.c  */
-#line 397 "zparser.y"
+#line 397 "./zparser.y" /* yacc.c:1646  */
     {
-	    uint16_t type = rrtype_from_string((yyvsp[(1) - (1)].data).str);
+	    uint16_t type = rrtype_from_string((yyvsp[0].data).str);
 	    if (type != 0 && type < 128) {
 		    set_bit(nxtbits, type);
 	    } else {
 		    zc_error("bad type %d in NXT record", (int) type);
 	    }
     }
+#line 2256 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 49:
-/* Line 1792 of yacc.c  */
-#line 406 "zparser.y"
+#line 406 "./zparser.y" /* yacc.c:1646  */
     {
-	    uint16_t type = rrtype_from_string((yyvsp[(3) - (3)].data).str);
+	    uint16_t type = rrtype_from_string((yyvsp[0].data).str);
 	    if (type != 0 && type < 128) {
 		    set_bit(nxtbits, type);
 	    } else {
 		    zc_error("bad type %d in NXT record", (int) type);
 	    }
     }
+#line 2269 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 50:
-/* Line 1792 of yacc.c  */
-#line 417 "zparser.y"
+#line 417 "./zparser.y" /* yacc.c:1646  */
     {
     }
+#line 2276 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 51:
-/* Line 1792 of yacc.c  */
-#line 420 "zparser.y"
+#line 420 "./zparser.y" /* yacc.c:1646  */
     {
     }
+#line 2283 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 52:
-/* Line 1792 of yacc.c  */
-#line 423 "zparser.y"
+#line 423 "./zparser.y" /* yacc.c:1646  */
     {
-	    uint16_t type = rrtype_from_string((yyvsp[(1) - (2)].data).str);
+	    uint16_t type = rrtype_from_string((yyvsp[-1].data).str);
 	    if (type != 0) {
                     if (type > nsec_highest_rcode) {
                             nsec_highest_rcode = type;
@@ -2540,768 +2295,768 @@
 		    zc_error("bad type %d in NSEC record", (int) type);
 	    }
     }
+#line 2299 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 56:
-/* Line 1792 of yacc.c  */
-#line 446 "zparser.y"
+#line 446 "./zparser.y" /* yacc.c:1646  */
     {
 	    char *result = (char *) region_alloc(parser->rr_region,
-						 (yyvsp[(1) - (3)].data).len + (yyvsp[(3) - (3)].data).len + 1);
-	    memcpy(result, (yyvsp[(1) - (3)].data).str, (yyvsp[(1) - (3)].data).len);
-	    memcpy(result + (yyvsp[(1) - (3)].data).len, (yyvsp[(3) - (3)].data).str, (yyvsp[(3) - (3)].data).len);
+						 (yyvsp[-2].data).len + (yyvsp[0].data).len + 1);
+	    memcpy(result, (yyvsp[-2].data).str, (yyvsp[-2].data).len);
+	    memcpy(result + (yyvsp[-2].data).len, (yyvsp[0].data).str, (yyvsp[0].data).len);
 	    (yyval.data).str = result;
-	    (yyval.data).len = (yyvsp[(1) - (3)].data).len + (yyvsp[(3) - (3)].data).len;
+	    (yyval.data).len = (yyvsp[-2].data).len + (yyvsp[0].data).len;
 	    (yyval.data).str[(yyval.data).len] = '\0';
     }
+#line 2313 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 58:
-/* Line 1792 of yacc.c  */
-#line 463 "zparser.y"
+#line 463 "./zparser.y" /* yacc.c:1646  */
     {
 	    char *result = (char *) region_alloc(parser->rr_region,
-						 (yyvsp[(1) - (3)].data).len + (yyvsp[(3) - (3)].data).len + 1);
-	    memcpy(result, (yyvsp[(1) - (3)].data).str, (yyvsp[(1) - (3)].data).len);
-	    memcpy(result + (yyvsp[(1) - (3)].data).len, (yyvsp[(3) - (3)].data).str, (yyvsp[(3) - (3)].data).len);
+						 (yyvsp[-2].data).len + (yyvsp[0].data).len + 1);
+	    memcpy(result, (yyvsp[-2].data).str, (yyvsp[-2].data).len);
+	    memcpy(result + (yyvsp[-2].data).len, (yyvsp[0].data).str, (yyvsp[0].data).len);
 	    (yyval.data).str = result;
-	    (yyval.data).len = (yyvsp[(1) - (3)].data).len + (yyvsp[(3) - (3)].data).len;
+	    (yyval.data).len = (yyvsp[-2].data).len + (yyvsp[0].data).len;
 	    (yyval.data).str[(yyval.data).len] = '\0';
     }
+#line 2327 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 60:
-/* Line 1792 of yacc.c  */
-#line 479 "zparser.y"
+#line 479 "./zparser.y" /* yacc.c:1646  */
     {
 	(yyval.data).str = ".";
 	(yyval.data).len = 1;
     }
+#line 2336 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 61:
-/* Line 1792 of yacc.c  */
-#line 484 "zparser.y"
+#line 484 "./zparser.y" /* yacc.c:1646  */
     {
 	    char *result = (char *) region_alloc(parser->rr_region,
-						 (yyvsp[(1) - (2)].data).len + 2);
-	    memcpy(result, (yyvsp[(1) - (2)].data).str, (yyvsp[(1) - (2)].data).len);
-	    result[(yyvsp[(1) - (2)].data).len] = '.';
+						 (yyvsp[-1].data).len + 2);
+	    memcpy(result, (yyvsp[-1].data).str, (yyvsp[-1].data).len);
+	    result[(yyvsp[-1].data).len] = '.';
 	    (yyval.data).str = result;
-	    (yyval.data).len = (yyvsp[(1) - (2)].data).len + 1;
+	    (yyval.data).len = (yyvsp[-1].data).len + 1;
 	    (yyval.data).str[(yyval.data).len] = '\0';
     }
+#line 2350 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 62:
-/* Line 1792 of yacc.c  */
-#line 494 "zparser.y"
+#line 494 "./zparser.y" /* yacc.c:1646  */
     {
 	    char *result = (char *) region_alloc(parser->rr_region,
-						 (yyvsp[(1) - (3)].data).len + (yyvsp[(3) - (3)].data).len + 2);
-	    memcpy(result, (yyvsp[(1) - (3)].data).str, (yyvsp[(1) - (3)].data).len);
-	    result[(yyvsp[(1) - (3)].data).len] = '.';
-	    memcpy(result + (yyvsp[(1) - (3)].data).len + 1, (yyvsp[(3) - (3)].data).str, (yyvsp[(3) - (3)].data).len);
+						 (yyvsp[-2].data).len + (yyvsp[0].data).len + 2);
+	    memcpy(result, (yyvsp[-2].data).str, (yyvsp[-2].data).len);
+	    result[(yyvsp[-2].data).len] = '.';
+	    memcpy(result + (yyvsp[-2].data).len + 1, (yyvsp[0].data).str, (yyvsp[0].data).len);
 	    (yyval.data).str = result;
-	    (yyval.data).len = (yyvsp[(1) - (3)].data).len + (yyvsp[(3) - (3)].data).len + 1;
+	    (yyval.data).len = (yyvsp[-2].data).len + (yyvsp[0].data).len + 1;
 	    (yyval.data).str[(yyval.data).len] = '\0';
     }
+#line 2365 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 64:
-/* Line 1792 of yacc.c  */
-#line 512 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 512 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2371 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 66:
-/* Line 1792 of yacc.c  */
-#line 514 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 514 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2377 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 67:
-/* Line 1792 of yacc.c  */
-#line 515 "zparser.y"
+#line 515 "./zparser.y" /* yacc.c:1646  */
     { zc_warning_prev_line("MD is obsolete"); }
+#line 2383 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 68:
-/* Line 1792 of yacc.c  */
-#line 517 "zparser.y"
+#line 517 "./zparser.y" /* yacc.c:1646  */
     {
 	    zc_warning_prev_line("MD is obsolete");
-	    (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown));
+	    (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown));
     }
+#line 2392 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 69:
-/* Line 1792 of yacc.c  */
-#line 521 "zparser.y"
+#line 521 "./zparser.y" /* yacc.c:1646  */
     { zc_warning_prev_line("MF is obsolete"); }
+#line 2398 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 70:
-/* Line 1792 of yacc.c  */
-#line 523 "zparser.y"
+#line 523 "./zparser.y" /* yacc.c:1646  */
     {
 	    zc_warning_prev_line("MF is obsolete");
-	    (yyval.type) = (yyvsp[(1) - (3)].type);
-	    parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown));
+	    (yyval.type) = (yyvsp[-2].type);
+	    parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown));
     }
+#line 2408 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 72:
-/* Line 1792 of yacc.c  */
-#line 529 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 529 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2414 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 74:
-/* Line 1792 of yacc.c  */
-#line 531 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 531 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2420 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 75:
-/* Line 1792 of yacc.c  */
-#line 532 "zparser.y"
+#line 532 "./zparser.y" /* yacc.c:1646  */
     { zc_warning_prev_line("MB is obsolete"); }
+#line 2426 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 76:
-/* Line 1792 of yacc.c  */
-#line 534 "zparser.y"
+#line 534 "./zparser.y" /* yacc.c:1646  */
     {
 	    zc_warning_prev_line("MB is obsolete");
-	    (yyval.type) = (yyvsp[(1) - (3)].type);
-	    parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown));
+	    (yyval.type) = (yyvsp[-2].type);
+	    parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown));
     }
+#line 2436 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 78:
-/* Line 1792 of yacc.c  */
-#line 540 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 540 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2442 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 80:
-/* Line 1792 of yacc.c  */
-#line 542 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 542 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2448 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 82:
-/* Line 1792 of yacc.c  */
-#line 545 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 545 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2454 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 84:
-/* Line 1792 of yacc.c  */
-#line 547 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 547 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2460 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 86:
-/* Line 1792 of yacc.c  */
-#line 549 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 549 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2466 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 88:
-/* Line 1792 of yacc.c  */
-#line 551 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 551 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2472 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 90:
-/* Line 1792 of yacc.c  */
-#line 553 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 553 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2478 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 92:
-/* Line 1792 of yacc.c  */
-#line 555 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 555 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2484 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 94:
-/* Line 1792 of yacc.c  */
-#line 557 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 557 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2490 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 96:
-/* Line 1792 of yacc.c  */
-#line 559 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 559 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2496 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 98:
-/* Line 1792 of yacc.c  */
-#line 561 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 561 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2502 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 100:
-/* Line 1792 of yacc.c  */
-#line 563 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 563 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2508 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 102:
-/* Line 1792 of yacc.c  */
-#line 565 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 565 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2514 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 104:
-/* Line 1792 of yacc.c  */
-#line 567 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 567 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2520 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 106:
-/* Line 1792 of yacc.c  */
-#line 569 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 569 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2526 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 108:
-/* Line 1792 of yacc.c  */
-#line 571 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 571 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2532 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 110:
-/* Line 1792 of yacc.c  */
-#line 573 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 573 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2538 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 112:
-/* Line 1792 of yacc.c  */
-#line 575 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 575 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2544 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 114:
-/* Line 1792 of yacc.c  */
-#line 577 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 577 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2550 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 116:
-/* Line 1792 of yacc.c  */
-#line 579 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 579 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2556 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 118:
-/* Line 1792 of yacc.c  */
-#line 581 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 581 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2562 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 120:
-/* Line 1792 of yacc.c  */
-#line 583 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 583 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2568 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 122:
-/* Line 1792 of yacc.c  */
-#line 585 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 585 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2574 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 124:
-/* Line 1792 of yacc.c  */
-#line 587 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 587 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2580 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 126:
-/* Line 1792 of yacc.c  */
-#line 589 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 589 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2586 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 128:
-/* Line 1792 of yacc.c  */
-#line 591 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 591 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2592 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 130:
-/* Line 1792 of yacc.c  */
-#line 593 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 593 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2598 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 132:
-/* Line 1792 of yacc.c  */
-#line 595 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 595 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2604 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 135:
-/* Line 1792 of yacc.c  */
-#line 598 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 598 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2610 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 137:
-/* Line 1792 of yacc.c  */
-#line 600 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 600 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2616 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 138:
-/* Line 1792 of yacc.c  */
-#line 601 "zparser.y"
+#line 601 "./zparser.y" /* yacc.c:1646  */
     { if (dlv_warn) { dlv_warn = 0; zc_warning_prev_line("DLV is experimental"); } }
+#line 2622 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 139:
-/* Line 1792 of yacc.c  */
-#line 602 "zparser.y"
-    { if (dlv_warn) { dlv_warn = 0; zc_warning_prev_line("DLV is experimental"); } (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 602 "./zparser.y" /* yacc.c:1646  */
+    { if (dlv_warn) { dlv_warn = 0; zc_warning_prev_line("DLV is experimental"); } (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2628 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 141:
-/* Line 1792 of yacc.c  */
-#line 604 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 604 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2634 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 143:
-/* Line 1792 of yacc.c  */
-#line 606 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 606 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2640 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 145:
-/* Line 1792 of yacc.c  */
-#line 608 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 608 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2646 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 147:
-/* Line 1792 of yacc.c  */
-#line 610 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 610 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2652 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 149:
-/* Line 1792 of yacc.c  */
-#line 612 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 612 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2658 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 151:
-/* Line 1792 of yacc.c  */
-#line 614 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 614 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2664 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 153:
-/* Line 1792 of yacc.c  */
-#line 616 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 616 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2670 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 155:
-/* Line 1792 of yacc.c  */
-#line 618 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 618 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2676 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 157:
-/* Line 1792 of yacc.c  */
-#line 620 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 620 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2682 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 159:
-/* Line 1792 of yacc.c  */
-#line 622 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 622 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2688 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 161:
-/* Line 1792 of yacc.c  */
-#line 624 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 624 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2694 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 163:
-/* Line 1792 of yacc.c  */
-#line 626 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 626 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2700 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 165:
-/* Line 1792 of yacc.c  */
-#line 628 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 628 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2706 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 167:
-/* Line 1792 of yacc.c  */
-#line 630 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 630 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2712 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 169:
-/* Line 1792 of yacc.c  */
-#line 632 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 632 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2718 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 171:
-/* Line 1792 of yacc.c  */
-#line 634 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 634 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2724 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 173:
-/* Line 1792 of yacc.c  */
-#line 636 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 636 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2730 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 174:
-/* Line 1792 of yacc.c  */
-#line 637 "zparser.y"
-    { (yyval.type) = (yyvsp[(1) - (3)].type); parse_unknown_rdata((yyvsp[(1) - (3)].type), (yyvsp[(3) - (3)].unknown)); }
+#line 637 "./zparser.y" /* yacc.c:1646  */
+    { (yyval.type) = (yyvsp[-2].type); parse_unknown_rdata((yyvsp[-2].type), (yyvsp[0].unknown)); }
+#line 2736 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 175:
-/* Line 1792 of yacc.c  */
-#line 639 "zparser.y"
+#line 639 "./zparser.y" /* yacc.c:1646  */
     {
-	    zc_error_prev_line("unrecognized RR type '%s'", (yyvsp[(1) - (3)].data).str);
+	    zc_error_prev_line("unrecognized RR type '%s'", (yyvsp[-2].data).str);
     }
+#line 2744 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 176:
-/* Line 1792 of yacc.c  */
-#line 651 "zparser.y"
+#line 651 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_a(parser->region, (yyvsp[(1) - (2)].data).str));
+	    zadd_rdata_wireformat(zparser_conv_a(parser->region, (yyvsp[-1].data).str));
     }
+#line 2752 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 177:
-/* Line 1792 of yacc.c  */
-#line 657 "zparser.y"
+#line 657 "./zparser.y" /* yacc.c:1646  */
     {
 	    /* convert a single dname record */
-	    zadd_rdata_domain((yyvsp[(1) - (2)].domain));
+	    zadd_rdata_domain((yyvsp[-1].domain));
     }
+#line 2761 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 178:
-/* Line 1792 of yacc.c  */
-#line 664 "zparser.y"
+#line 664 "./zparser.y" /* yacc.c:1646  */
     {
 	    /* convert the soa data */
-	    zadd_rdata_domain((yyvsp[(1) - (14)].domain));	/* prim. ns */
-	    zadd_rdata_domain((yyvsp[(3) - (14)].domain));	/* email */
-	    zadd_rdata_wireformat(zparser_conv_serial(parser->region, (yyvsp[(5) - (14)].data).str)); /* serial */
-	    zadd_rdata_wireformat(zparser_conv_period(parser->region, (yyvsp[(7) - (14)].data).str)); /* refresh */
-	    zadd_rdata_wireformat(zparser_conv_period(parser->region, (yyvsp[(9) - (14)].data).str)); /* retry */
-	    zadd_rdata_wireformat(zparser_conv_period(parser->region, (yyvsp[(11) - (14)].data).str)); /* expire */
-	    zadd_rdata_wireformat(zparser_conv_period(parser->region, (yyvsp[(13) - (14)].data).str)); /* minimum */
+	    zadd_rdata_domain((yyvsp[-13].domain));	/* prim. ns */
+	    zadd_rdata_domain((yyvsp[-11].domain));	/* email */
+	    zadd_rdata_wireformat(zparser_conv_serial(parser->region, (yyvsp[-9].data).str)); /* serial */
+	    zadd_rdata_wireformat(zparser_conv_period(parser->region, (yyvsp[-7].data).str)); /* refresh */
+	    zadd_rdata_wireformat(zparser_conv_period(parser->region, (yyvsp[-5].data).str)); /* retry */
+	    zadd_rdata_wireformat(zparser_conv_period(parser->region, (yyvsp[-3].data).str)); /* expire */
+	    zadd_rdata_wireformat(zparser_conv_period(parser->region, (yyvsp[-1].data).str)); /* minimum */
     }
+#line 2776 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 179:
-/* Line 1792 of yacc.c  */
-#line 677 "zparser.y"
+#line 677 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_a(parser->region, (yyvsp[(1) - (6)].data).str)); /* address */
-	    zadd_rdata_wireformat(zparser_conv_services(parser->region, (yyvsp[(3) - (6)].data).str, (yyvsp[(5) - (6)].data).str)); /* protocol and services */
+	    zadd_rdata_wireformat(zparser_conv_a(parser->region, (yyvsp[-5].data).str)); /* address */
+	    zadd_rdata_wireformat(zparser_conv_services(parser->region, (yyvsp[-3].data).str, (yyvsp[-1].data).str)); /* protocol and services */
     }
+#line 2785 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 180:
-/* Line 1792 of yacc.c  */
-#line 684 "zparser.y"
+#line 684 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[(1) - (4)].data).str, (yyvsp[(1) - (4)].data).len)); /* CPU */
-	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[(3) - (4)].data).str, (yyvsp[(3) - (4)].data).len)); /* OS*/
+	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[-3].data).str, (yyvsp[-3].data).len)); /* CPU */
+	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[-1].data).str, (yyvsp[-1].data).len)); /* OS*/
     }
+#line 2794 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 181:
-/* Line 1792 of yacc.c  */
-#line 691 "zparser.y"
+#line 691 "./zparser.y" /* yacc.c:1646  */
     {
 	    /* convert a single dname record */
-	    zadd_rdata_domain((yyvsp[(1) - (4)].domain));
-	    zadd_rdata_domain((yyvsp[(3) - (4)].domain));
+	    zadd_rdata_domain((yyvsp[-3].domain));
+	    zadd_rdata_domain((yyvsp[-1].domain));
     }
+#line 2804 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 182:
-/* Line 1792 of yacc.c  */
-#line 699 "zparser.y"
+#line 699 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(1) - (4)].data).str));  /* priority */
-	    zadd_rdata_domain((yyvsp[(3) - (4)].domain));	/* MX host */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-3].data).str));  /* priority */
+	    zadd_rdata_domain((yyvsp[-1].domain));	/* MX host */
     }
+#line 2813 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 183:
-/* Line 1792 of yacc.c  */
-#line 706 "zparser.y"
+#line 706 "./zparser.y" /* yacc.c:1646  */
     {
 	zadd_rdata_txt_clean_wireformat();
     }
+#line 2821 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 184:
-/* Line 1792 of yacc.c  */
-#line 713 "zparser.y"
+#line 713 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_domain((yyvsp[(1) - (4)].domain)); /* mbox d-name */
-	    zadd_rdata_domain((yyvsp[(3) - (4)].domain)); /* txt d-name */
+	    zadd_rdata_domain((yyvsp[-3].domain)); /* mbox d-name */
+	    zadd_rdata_domain((yyvsp[-1].domain)); /* txt d-name */
     }
+#line 2830 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 185:
-/* Line 1792 of yacc.c  */
-#line 721 "zparser.y"
+#line 721 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(1) - (4)].data).str)); /* subtype */
-	    zadd_rdata_domain((yyvsp[(3) - (4)].domain)); /* domain name */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-3].data).str)); /* subtype */
+	    zadd_rdata_domain((yyvsp[-1].domain)); /* domain name */
     }
+#line 2839 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 186:
-/* Line 1792 of yacc.c  */
-#line 729 "zparser.y"
+#line 729 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[(1) - (2)].data).str, (yyvsp[(1) - (2)].data).len)); /* X.25 address. */
+	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[-1].data).str, (yyvsp[-1].data).len)); /* X.25 address. */
     }
+#line 2847 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 187:
-/* Line 1792 of yacc.c  */
-#line 736 "zparser.y"
+#line 736 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[(1) - (2)].data).str, (yyvsp[(1) - (2)].data).len)); /* address */
+	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[-1].data).str, (yyvsp[-1].data).len)); /* address */
     }
+#line 2855 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 188:
-/* Line 1792 of yacc.c  */
-#line 740 "zparser.y"
+#line 740 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[(1) - (4)].data).str, (yyvsp[(1) - (4)].data).len)); /* address */
-	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[(3) - (4)].data).str, (yyvsp[(3) - (4)].data).len)); /* sub-address */
+	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[-3].data).str, (yyvsp[-3].data).len)); /* address */
+	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[-1].data).str, (yyvsp[-1].data).len)); /* sub-address */
     }
+#line 2864 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 189:
-/* Line 1792 of yacc.c  */
-#line 748 "zparser.y"
+#line 748 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(1) - (4)].data).str)); /* preference */
-	    zadd_rdata_domain((yyvsp[(3) - (4)].domain)); /* intermediate host */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-3].data).str)); /* preference */
+	    zadd_rdata_domain((yyvsp[-1].domain)); /* intermediate host */
     }
+#line 2873 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 190:
-/* Line 1792 of yacc.c  */
-#line 756 "zparser.y"
+#line 756 "./zparser.y" /* yacc.c:1646  */
     {
 	    /* String must start with "0x" or "0X".	 */
-	    if (strncasecmp((yyvsp[(1) - (2)].data).str, "0x", 2) != 0) {
+	    if (strncasecmp((yyvsp[-1].data).str, "0x", 2) != 0) {
 		    zc_error_prev_line("NSAP rdata must start with '0x'");
 	    } else {
-		    zadd_rdata_wireformat(zparser_conv_hex(parser->region, (yyvsp[(1) - (2)].data).str + 2, (yyvsp[(1) - (2)].data).len - 2)); /* NSAP */
+		    zadd_rdata_wireformat(zparser_conv_hex(parser->region, (yyvsp[-1].data).str + 2, (yyvsp[-1].data).len - 2)); /* NSAP */
 	    }
     }
+#line 2886 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 191:
-/* Line 1792 of yacc.c  */
-#line 768 "zparser.y"
+#line 768 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(1) - (6)].data).str)); /* preference */
-	    zadd_rdata_domain((yyvsp[(3) - (6)].domain)); /* MAP822 */
-	    zadd_rdata_domain((yyvsp[(5) - (6)].domain)); /* MAPX400 */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-5].data).str)); /* preference */
+	    zadd_rdata_domain((yyvsp[-3].domain)); /* MAP822 */
+	    zadd_rdata_domain((yyvsp[-1].domain)); /* MAPX400 */
     }
+#line 2896 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 192:
-/* Line 1792 of yacc.c  */
-#line 776 "zparser.y"
+#line 776 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_aaaa(parser->region, (yyvsp[(1) - (2)].data).str));  /* IPv6 address */
+	    zadd_rdata_wireformat(zparser_conv_aaaa(parser->region, (yyvsp[-1].data).str));  /* IPv6 address */
     }
+#line 2904 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 193:
-/* Line 1792 of yacc.c  */
-#line 782 "zparser.y"
+#line 782 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_loc(parser->region, (yyvsp[(1) - (2)].data).str)); /* Location */
+	    zadd_rdata_wireformat(zparser_conv_loc(parser->region, (yyvsp[-1].data).str)); /* Location */
     }
+#line 2912 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 194:
-/* Line 1792 of yacc.c  */
-#line 788 "zparser.y"
+#line 788 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_domain((yyvsp[(1) - (4)].domain)); /* nxt name */
+	    zadd_rdata_domain((yyvsp[-3].domain)); /* nxt name */
 	    zadd_rdata_wireformat(zparser_conv_nxt(parser->region, nxtbits)); /* nxt bitlist */
 	    memset(nxtbits, 0, sizeof(nxtbits));
     }
+#line 2922 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 195:
-/* Line 1792 of yacc.c  */
-#line 796 "zparser.y"
+#line 796 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(1) - (8)].data).str)); /* prio */
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(3) - (8)].data).str)); /* weight */
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(5) - (8)].data).str)); /* port */
-	    zadd_rdata_domain((yyvsp[(7) - (8)].domain)); /* target name */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-7].data).str)); /* prio */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-5].data).str)); /* weight */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-3].data).str)); /* port */
+	    zadd_rdata_domain((yyvsp[-1].domain)); /* target name */
     }
+#line 2933 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 196:
-/* Line 1792 of yacc.c  */
-#line 806 "zparser.y"
+#line 806 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(1) - (12)].data).str)); /* order */
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(3) - (12)].data).str)); /* preference */
-	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[(5) - (12)].data).str, (yyvsp[(5) - (12)].data).len)); /* flags */
-	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[(7) - (12)].data).str, (yyvsp[(7) - (12)].data).len)); /* service */
-	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[(9) - (12)].data).str, (yyvsp[(9) - (12)].data).len)); /* regexp */
-	    zadd_rdata_domain((yyvsp[(11) - (12)].domain)); /* target name */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-11].data).str)); /* order */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-9].data).str)); /* preference */
+	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[-7].data).str, (yyvsp[-7].data).len)); /* flags */
+	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[-5].data).str, (yyvsp[-5].data).len)); /* service */
+	    zadd_rdata_wireformat(zparser_conv_text(parser->region, (yyvsp[-3].data).str, (yyvsp[-3].data).len)); /* regexp */
+	    zadd_rdata_domain((yyvsp[-1].domain)); /* target name */
     }
+#line 2946 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 197:
-/* Line 1792 of yacc.c  */
-#line 818 "zparser.y"
+#line 818 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(1) - (4)].data).str)); /* preference */
-	    zadd_rdata_domain((yyvsp[(3) - (4)].domain)); /* exchanger */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-3].data).str)); /* preference */
+	    zadd_rdata_domain((yyvsp[-1].domain)); /* exchanger */
     }
+#line 2955 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 198:
-/* Line 1792 of yacc.c  */
-#line 826 "zparser.y"
+#line 826 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_certificate_type(parser->region, (yyvsp[(1) - (8)].data).str)); /* type */
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(3) - (8)].data).str)); /* key tag */
-	    zadd_rdata_wireformat(zparser_conv_algorithm(parser->region, (yyvsp[(5) - (8)].data).str)); /* algorithm */
-	    zadd_rdata_wireformat(zparser_conv_b64(parser->region, (yyvsp[(7) - (8)].data).str)); /* certificate or CRL */
+	    zadd_rdata_wireformat(zparser_conv_certificate_type(parser->region, (yyvsp[-7].data).str)); /* type */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-5].data).str)); /* key tag */
+	    zadd_rdata_wireformat(zparser_conv_algorithm(parser->region, (yyvsp[-3].data).str)); /* algorithm */
+	    zadd_rdata_wireformat(zparser_conv_b64(parser->region, (yyvsp[-1].data).str)); /* certificate or CRL */
     }
+#line 2966 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 200:
-/* Line 1792 of yacc.c  */
-#line 839 "zparser.y"
+#line 839 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_apl_rdata(parser->region, (yyvsp[(1) - (1)].data).str));
+	    zadd_rdata_wireformat(zparser_conv_apl_rdata(parser->region, (yyvsp[0].data).str));
     }
+#line 2974 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 201:
-/* Line 1792 of yacc.c  */
-#line 843 "zparser.y"
+#line 843 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_apl_rdata(parser->region, (yyvsp[(3) - (3)].data).str));
+	    zadd_rdata_wireformat(zparser_conv_apl_rdata(parser->region, (yyvsp[0].data).str));
     }
+#line 2982 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 202:
-/* Line 1792 of yacc.c  */
-#line 849 "zparser.y"
+#line 849 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(1) - (8)].data).str)); /* keytag */
-	    zadd_rdata_wireformat(zparser_conv_algorithm(parser->region, (yyvsp[(3) - (8)].data).str)); /* alg */
-	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[(5) - (8)].data).str)); /* type */
-	    zadd_rdata_wireformat(zparser_conv_hex(parser->region, (yyvsp[(7) - (8)].data).str, (yyvsp[(7) - (8)].data).len)); /* hash */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-7].data).str)); /* keytag */
+	    zadd_rdata_wireformat(zparser_conv_algorithm(parser->region, (yyvsp[-5].data).str)); /* alg */
+	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[-3].data).str)); /* type */
+	    zadd_rdata_wireformat(zparser_conv_hex(parser->region, (yyvsp[-1].data).str, (yyvsp[-1].data).len)); /* hash */
     }
+#line 2993 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 203:
-/* Line 1792 of yacc.c  */
-#line 858 "zparser.y"
+#line 858 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(1) - (8)].data).str)); /* keytag */
-	    zadd_rdata_wireformat(zparser_conv_algorithm(parser->region, (yyvsp[(3) - (8)].data).str)); /* alg */
-	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[(5) - (8)].data).str)); /* type */
-	    zadd_rdata_wireformat(zparser_conv_hex(parser->region, (yyvsp[(7) - (8)].data).str, (yyvsp[(7) - (8)].data).len)); /* hash */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-7].data).str)); /* keytag */
+	    zadd_rdata_wireformat(zparser_conv_algorithm(parser->region, (yyvsp[-5].data).str)); /* alg */
+	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[-3].data).str)); /* type */
+	    zadd_rdata_wireformat(zparser_conv_hex(parser->region, (yyvsp[-1].data).str, (yyvsp[-1].data).len)); /* hash */
     }
+#line 3004 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 204:
-/* Line 1792 of yacc.c  */
-#line 867 "zparser.y"
+#line 867 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[(1) - (6)].data).str)); /* alg */
-	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[(3) - (6)].data).str)); /* fp type */
-	    zadd_rdata_wireformat(zparser_conv_hex(parser->region, (yyvsp[(5) - (6)].data).str, (yyvsp[(5) - (6)].data).len)); /* hash */
+	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[-5].data).str)); /* alg */
+	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[-3].data).str)); /* fp type */
+	    zadd_rdata_wireformat(zparser_conv_hex(parser->region, (yyvsp[-1].data).str, (yyvsp[-1].data).len)); /* hash */
     }
+#line 3014 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 205:
-/* Line 1792 of yacc.c  */
-#line 875 "zparser.y"
+#line 875 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_b64(parser->region, (yyvsp[(1) - (2)].data).str)); /* data blob */
+	    zadd_rdata_wireformat(zparser_conv_b64(parser->region, (yyvsp[-1].data).str)); /* data blob */
     }
+#line 3022 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 206:
-/* Line 1792 of yacc.c  */
-#line 881 "zparser.y"
+#line 881 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_rrtype(parser->region, (yyvsp[(1) - (18)].data).str)); /* rr covered */
-	    zadd_rdata_wireformat(zparser_conv_algorithm(parser->region, (yyvsp[(3) - (18)].data).str)); /* alg */
-	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[(5) - (18)].data).str)); /* # labels */
-	    zadd_rdata_wireformat(zparser_conv_period(parser->region, (yyvsp[(7) - (18)].data).str)); /* # orig TTL */
-	    zadd_rdata_wireformat(zparser_conv_time(parser->region, (yyvsp[(9) - (18)].data).str)); /* sig exp */
-	    zadd_rdata_wireformat(zparser_conv_time(parser->region, (yyvsp[(11) - (18)].data).str)); /* sig inc */
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(13) - (18)].data).str)); /* key id */
+	    zadd_rdata_wireformat(zparser_conv_rrtype(parser->region, (yyvsp[-17].data).str)); /* rr covered */
+	    zadd_rdata_wireformat(zparser_conv_algorithm(parser->region, (yyvsp[-15].data).str)); /* alg */
+	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[-13].data).str)); /* # labels */
+	    zadd_rdata_wireformat(zparser_conv_period(parser->region, (yyvsp[-11].data).str)); /* # orig TTL */
+	    zadd_rdata_wireformat(zparser_conv_time(parser->region, (yyvsp[-9].data).str)); /* sig exp */
+	    zadd_rdata_wireformat(zparser_conv_time(parser->region, (yyvsp[-7].data).str)); /* sig inc */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-5].data).str)); /* key id */
 	    zadd_rdata_wireformat(zparser_conv_dns_name(parser->region, 
-				(const uint8_t*) (yyvsp[(15) - (18)].data).str,(yyvsp[(15) - (18)].data).len)); /* sig name */
-	    zadd_rdata_wireformat(zparser_conv_b64(parser->region, (yyvsp[(17) - (18)].data).str)); /* sig data */
+				(const uint8_t*) (yyvsp[-3].data).str,(yyvsp[-3].data).len)); /* sig name */
+	    zadd_rdata_wireformat(zparser_conv_b64(parser->region, (yyvsp[-1].data).str)); /* sig data */
     }
+#line 3039 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 207:
-/* Line 1792 of yacc.c  */
-#line 896 "zparser.y"
+#line 896 "./zparser.y" /* yacc.c:1646  */
     {
 	    zadd_rdata_wireformat(zparser_conv_dns_name(parser->region, 
-				(const uint8_t*) (yyvsp[(1) - (2)].data).str, (yyvsp[(1) - (2)].data).len)); /* nsec name */
+				(const uint8_t*) (yyvsp[-1].data).str, (yyvsp[-1].data).len)); /* nsec name */
 	    zadd_rdata_wireformat(zparser_conv_nsec(parser->region, nsecbits)); /* nsec bitlist */
 	    memset(nsecbits, 0, sizeof(nsecbits));
             nsec_highest_rcode = 0;
     }
+#line 3051 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 208:
-/* Line 1792 of yacc.c  */
-#line 906 "zparser.y"
+#line 906 "./zparser.y" /* yacc.c:1646  */
     {
 #ifdef NSEC3
-	    nsec3_add_params((yyvsp[(1) - (10)].data).str, (yyvsp[(3) - (10)].data).str, (yyvsp[(5) - (10)].data).str, (yyvsp[(7) - (10)].data).str, (yyvsp[(7) - (10)].data).len);
+	    nsec3_add_params((yyvsp[-9].data).str, (yyvsp[-7].data).str, (yyvsp[-5].data).str, (yyvsp[-3].data).str, (yyvsp[-3].data).len);
 
-	    zadd_rdata_wireformat(zparser_conv_b32(parser->region, (yyvsp[(9) - (10)].data).str)); /* next hashed name */
+	    zadd_rdata_wireformat(zparser_conv_b32(parser->region, (yyvsp[-1].data).str)); /* next hashed name */
 	    zadd_rdata_wireformat(zparser_conv_nsec(parser->region, nsecbits)); /* nsec bitlist */
 	    memset(nsecbits, 0, sizeof(nsecbits));
 	    nsec_highest_rcode = 0;
@@ -3309,67 +3064,67 @@
 	    zc_error_prev_line("nsec3 not supported");
 #endif /* NSEC3 */
     }
+#line 3068 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 209:
-/* Line 1792 of yacc.c  */
-#line 921 "zparser.y"
+#line 921 "./zparser.y" /* yacc.c:1646  */
     {
 #ifdef NSEC3
-	    nsec3_add_params((yyvsp[(1) - (8)].data).str, (yyvsp[(3) - (8)].data).str, (yyvsp[(5) - (8)].data).str, (yyvsp[(7) - (8)].data).str, (yyvsp[(7) - (8)].data).len);
+	    nsec3_add_params((yyvsp[-7].data).str, (yyvsp[-5].data).str, (yyvsp[-3].data).str, (yyvsp[-1].data).str, (yyvsp[-1].data).len);
 #else
 	    zc_error_prev_line("nsec3 not supported");
 #endif /* NSEC3 */
     }
+#line 3080 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 210:
-/* Line 1792 of yacc.c  */
-#line 931 "zparser.y"
+#line 931 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[(1) - (8)].data).str)); /* usage */
-	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[(3) - (8)].data).str)); /* selector */
-	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[(5) - (8)].data).str)); /* matching type */
-	    zadd_rdata_wireformat(zparser_conv_hex(parser->region, (yyvsp[(7) - (8)].data).str, (yyvsp[(7) - (8)].data).len)); /* ca data */
+	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[-7].data).str)); /* usage */
+	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[-5].data).str)); /* selector */
+	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[-3].data).str)); /* matching type */
+	    zadd_rdata_wireformat(zparser_conv_hex(parser->region, (yyvsp[-1].data).str, (yyvsp[-1].data).len)); /* ca data */
     }
+#line 3091 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 211:
-/* Line 1792 of yacc.c  */
-#line 940 "zparser.y"
+#line 940 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(1) - (8)].data).str)); /* flags */
-	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[(3) - (8)].data).str)); /* proto */
-	    zadd_rdata_wireformat(zparser_conv_algorithm(parser->region, (yyvsp[(5) - (8)].data).str)); /* alg */
-	    zadd_rdata_wireformat(zparser_conv_b64(parser->region, (yyvsp[(7) - (8)].data).str)); /* hash */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-7].data).str)); /* flags */
+	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[-5].data).str)); /* proto */
+	    zadd_rdata_wireformat(zparser_conv_algorithm(parser->region, (yyvsp[-3].data).str)); /* alg */
+	    zadd_rdata_wireformat(zparser_conv_b64(parser->region, (yyvsp[-1].data).str)); /* hash */
     }
+#line 3102 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 212:
-/* Line 1792 of yacc.c  */
-#line 949 "zparser.y"
+#line 949 "./zparser.y" /* yacc.c:1646  */
     {
 	    const dname_type* name = 0;
-	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[(1) - (7)].data).str)); /* precedence */
-	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[(3) - (7)].data).str)); /* gateway type */
-	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[(5) - (7)].data).str)); /* algorithm */
-	    switch(atoi((yyvsp[(3) - (7)].data).str)) {
+	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[-6].data).str)); /* precedence */
+	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[-4].data).str)); /* gateway type */
+	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[-2].data).str)); /* algorithm */
+	    switch(atoi((yyvsp[-4].data).str)) {
 		case IPSECKEY_NOGATEWAY: 
 			zadd_rdata_wireformat(alloc_rdata_init(parser->region, "", 0));
 			break;
 		case IPSECKEY_IP4:
-			zadd_rdata_wireformat(zparser_conv_a(parser->region, (yyvsp[(7) - (7)].data).str));
+			zadd_rdata_wireformat(zparser_conv_a(parser->region, (yyvsp[0].data).str));
 			break;
 		case IPSECKEY_IP6:
-			zadd_rdata_wireformat(zparser_conv_aaaa(parser->region, (yyvsp[(7) - (7)].data).str));
+			zadd_rdata_wireformat(zparser_conv_aaaa(parser->region, (yyvsp[0].data).str));
 			break;
 		case IPSECKEY_DNAME:
 			/* convert and insert the dname */
-			if(strlen((yyvsp[(7) - (7)].data).str) == 0)
+			if(strlen((yyvsp[0].data).str) == 0)
 				zc_error_prev_line("IPSECKEY must specify gateway name");
-			if(!(name = dname_parse(parser->region, (yyvsp[(7) - (7)].data).str)))
-				zc_error_prev_line("IPSECKEY bad gateway dname %s", (yyvsp[(7) - (7)].data).str);
-			if((yyvsp[(7) - (7)].data).str[strlen((yyvsp[(7) - (7)].data).str)-1] != '.') {
+			if(!(name = dname_parse(parser->region, (yyvsp[0].data).str)))
+				zc_error_prev_line("IPSECKEY bad gateway dname %s", (yyvsp[0].data).str);
+			if((yyvsp[0].data).str[strlen((yyvsp[0].data).str)-1] != '.') {
 				if(parser->origin == error_domain) {
 		    			zc_error("cannot concatenate origin to domain name, because origin failed to parse");
 					break;
@@ -3384,117 +3139,117 @@
 			zc_error_prev_line("unknown IPSECKEY gateway type");
 	    }
     }
+#line 3143 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 213:
-/* Line 1792 of yacc.c  */
-#line 988 "zparser.y"
+#line 988 "./zparser.y" /* yacc.c:1646  */
     {
-	   zadd_rdata_wireformat(zparser_conv_b64(parser->region, (yyvsp[(3) - (4)].data).str)); /* public key */
+	   zadd_rdata_wireformat(zparser_conv_b64(parser->region, (yyvsp[-1].data).str)); /* public key */
     }
+#line 3151 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 215:
-/* Line 1792 of yacc.c  */
-#line 996 "zparser.y"
+#line 996 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(1) - (4)].data).str));  /* preference */
-	    zadd_rdata_wireformat(zparser_conv_ilnp64(parser->region, (yyvsp[(3) - (4)].data).str));  /* NodeID */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-3].data).str));  /* preference */
+	    zadd_rdata_wireformat(zparser_conv_ilnp64(parser->region, (yyvsp[-1].data).str));  /* NodeID */
     }
+#line 3160 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 216:
-/* Line 1792 of yacc.c  */
-#line 1003 "zparser.y"
+#line 1003 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(1) - (4)].data).str));  /* preference */
-	    zadd_rdata_wireformat(zparser_conv_a(parser->region, (yyvsp[(3) - (4)].data).str));  /* Locator32 */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-3].data).str));  /* preference */
+	    zadd_rdata_wireformat(zparser_conv_a(parser->region, (yyvsp[-1].data).str));  /* Locator32 */
     }
+#line 3169 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 217:
-/* Line 1792 of yacc.c  */
-#line 1010 "zparser.y"
+#line 1010 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(1) - (4)].data).str));  /* preference */
-	    zadd_rdata_wireformat(zparser_conv_ilnp64(parser->region, (yyvsp[(3) - (4)].data).str));  /* Locator64 */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-3].data).str));  /* preference */
+	    zadd_rdata_wireformat(zparser_conv_ilnp64(parser->region, (yyvsp[-1].data).str));  /* Locator64 */
     }
+#line 3178 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 218:
-/* Line 1792 of yacc.c  */
-#line 1017 "zparser.y"
+#line 1017 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(1) - (4)].data).str));  /* preference */
-	    zadd_rdata_domain((yyvsp[(3) - (4)].domain));  /* FQDN */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-3].data).str));  /* preference */
+	    zadd_rdata_domain((yyvsp[-1].domain));  /* FQDN */
     }
+#line 3187 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 219:
-/* Line 1792 of yacc.c  */
-#line 1024 "zparser.y"
+#line 1024 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_eui(parser->region, (yyvsp[(1) - (2)].data).str, 48));
+	    zadd_rdata_wireformat(zparser_conv_eui(parser->region, (yyvsp[-1].data).str, 48));
     }
+#line 3195 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 220:
-/* Line 1792 of yacc.c  */
-#line 1030 "zparser.y"
+#line 1030 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_eui(parser->region, (yyvsp[(1) - (2)].data).str, 64));
+	    zadd_rdata_wireformat(zparser_conv_eui(parser->region, (yyvsp[-1].data).str, 64));
     }
+#line 3203 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 221:
-/* Line 1792 of yacc.c  */
-#line 1037 "zparser.y"
+#line 1037 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(1) - (6)].data).str)); /* priority */
-	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[(3) - (6)].data).str)); /* weight */
-	    zadd_rdata_wireformat(zparser_conv_long_text(parser->region, (yyvsp[(5) - (6)].data).str, (yyvsp[(5) - (6)].data).len)); /* target */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-5].data).str)); /* priority */
+	    zadd_rdata_wireformat(zparser_conv_short(parser->region, (yyvsp[-3].data).str)); /* weight */
+	    zadd_rdata_wireformat(zparser_conv_long_text(parser->region, (yyvsp[-1].data).str, (yyvsp[-1].data).len)); /* target */
     }
+#line 3213 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 222:
-/* Line 1792 of yacc.c  */
-#line 1046 "zparser.y"
+#line 1046 "./zparser.y" /* yacc.c:1646  */
     {
-	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[(1) - (6)].data).str)); /* Flags */
-	    zadd_rdata_wireformat(zparser_conv_tag(parser->region, (yyvsp[(3) - (6)].data).str, (yyvsp[(3) - (6)].data).len)); /* Tag */
-	    zadd_rdata_wireformat(zparser_conv_long_text(parser->region, (yyvsp[(5) - (6)].data).str, (yyvsp[(5) - (6)].data).len)); /* Value */
+	    zadd_rdata_wireformat(zparser_conv_byte(parser->region, (yyvsp[-5].data).str)); /* Flags */
+	    zadd_rdata_wireformat(zparser_conv_tag(parser->region, (yyvsp[-3].data).str, (yyvsp[-3].data).len)); /* Tag */
+	    zadd_rdata_wireformat(zparser_conv_long_text(parser->region, (yyvsp[-1].data).str, (yyvsp[-1].data).len)); /* Value */
     }
+#line 3223 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 223:
-/* Line 1792 of yacc.c  */
-#line 1054 "zparser.y"
+#line 1054 "./zparser.y" /* yacc.c:1646  */
     {
 	    /* $2 is the number of octects, currently ignored */
-	    (yyval.unknown) = zparser_conv_hex(parser->region, (yyvsp[(5) - (6)].data).str, (yyvsp[(5) - (6)].data).len);
+	    (yyval.unknown) = zparser_conv_hex(parser->region, (yyvsp[-1].data).str, (yyvsp[-1].data).len);
 
     }
+#line 3233 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 224:
-/* Line 1792 of yacc.c  */
-#line 1060 "zparser.y"
+#line 1060 "./zparser.y" /* yacc.c:1646  */
     {
 	    (yyval.unknown) = zparser_conv_hex(parser->region, "", 0);
     }
+#line 3241 "zparser.c" /* yacc.c:1646  */
     break;
 
   case 225:
-/* Line 1792 of yacc.c  */
-#line 1064 "zparser.y"
+#line 1064 "./zparser.y" /* yacc.c:1646  */
     {
 	    (yyval.unknown) = zparser_conv_hex(parser->region, "", 0);
     }
+#line 3249 "zparser.c" /* yacc.c:1646  */
     break;
 
 
-/* Line 1792 of yacc.c  */
-#line 3498 "zparser.c"
+#line 3253 "zparser.c" /* yacc.c:1646  */
       default: break;
     }
   /* User semantic actions sometimes alter yychar, and that requires
@@ -3516,7 +3271,7 @@
 
   *++yyvsp = yyval;
 
-  /* Now `shift' the result of the reduction.  Determine what state
+  /* Now 'shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
 
@@ -3531,9 +3286,9 @@
   goto yynewstate;
 
 
-/*------------------------------------.
-| yyerrlab -- here on detecting error |
-`------------------------------------*/
+/*--------------------------------------.
+| yyerrlab -- here on detecting error.  |
+`--------------------------------------*/
 yyerrlab:
   /* Make sure we have latest lookahead translation.  See comments at
      user semantic actions for why this is necessary.  */
@@ -3584,20 +3339,20 @@
   if (yyerrstatus == 3)
     {
       /* If just tried and failed to reuse lookahead token after an
-	 error, discard it.  */
+         error, discard it.  */
 
       if (yychar <= YYEOF)
-	{
-	  /* Return failure if at end of input.  */
-	  if (yychar == YYEOF)
-	    YYABORT;
-	}
+        {
+          /* Return failure if at end of input.  */
+          if (yychar == YYEOF)
+            YYABORT;
+        }
       else
-	{
-	  yydestruct ("Error: discarding",
-		      yytoken, &yylval);
-	  yychar = YYEMPTY;
-	}
+        {
+          yydestruct ("Error: discarding",
+                      yytoken, &yylval);
+          yychar = YYEMPTY;
+        }
     }
 
   /* Else will try to reuse lookahead token after shifting the error
@@ -3616,7 +3371,7 @@
   if (/*CONSTCOND*/ 0)
      goto yyerrorlab;
 
-  /* Do not reclaim the symbols of the rule which action triggered
+  /* Do not reclaim the symbols of the rule whose action triggered
      this YYERROR.  */
   YYPOPSTACK (yylen);
   yylen = 0;
@@ -3629,29 +3384,29 @@
 | yyerrlab1 -- common code for both syntax error and YYERROR.  |
 `-------------------------------------------------------------*/
 yyerrlab1:
-  yyerrstatus = 3;	/* Each real token shifted decrements this.  */
+  yyerrstatus = 3;      /* Each real token shifted decrements this.  */
 
   for (;;)
     {
       yyn = yypact[yystate];
       if (!yypact_value_is_default (yyn))
-	{
-	  yyn += YYTERROR;
-	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
-	    {
-	      yyn = yytable[yyn];
-	      if (0 < yyn)
-		break;
-	    }
-	}
+        {
+          yyn += YYTERROR;
+          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
+            {
+              yyn = yytable[yyn];
+              if (0 < yyn)
+                break;
+            }
+        }
 
       /* Pop the current state because it cannot handle the error token.  */
       if (yyssp == yyss)
-	YYABORT;
+        YYABORT;
 
 
       yydestruct ("Error: popping",
-		  yystos[yystate], yyvsp);
+                  yystos[yystate], yyvsp);
       YYPOPSTACK (1);
       yystate = *yyssp;
       YY_STACK_PRINT (yyss, yyssp);
@@ -3702,14 +3457,14 @@
       yydestruct ("Cleanup: discarding lookahead",
                   yytoken, &yylval);
     }
-  /* Do not reclaim the symbols of the rule which action triggered
+  /* Do not reclaim the symbols of the rule whose action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
   YY_STACK_PRINT (yyss, yyssp);
   while (yyssp != yyss)
     {
       yydestruct ("Cleanup: popping",
-		  yystos[*yyssp], yyvsp);
+                  yystos[*yyssp], yyvsp);
       YYPOPSTACK (1);
     }
 #ifndef yyoverflow
@@ -3720,13 +3475,9 @@
   if (yymsg != yymsgbuf)
     YYSTACK_FREE (yymsg);
 #endif
-  /* Make sure YYID is used.  */
-  return YYID (yyresult);
+  return yyresult;
 }
-
-
-/* Line 2055 of yacc.c  */
-#line 1068 "zparser.y"
+#line 1068 "./zparser.y" /* yacc.c:1906  */
 
 
 int
diff -Naur nsd-4.1.5/zparser.h nsd-4.1.5-xfer-limit-p0.0.1/zparser.h
--- nsd-4.1.5/zparser.h	2015-09-21 09:21:02.000000000 +0000
+++ nsd-4.1.5-xfer-limit-p0.0.1/zparser.h	2015-09-28 09:05:48.000000000 +0000
@@ -1,19 +1,19 @@
-/* A Bison parser, made by GNU Bison 2.7.  */
+/* A Bison parser, made by GNU Bison 3.0.2.  */
 
 /* Bison interface for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2012 Free Software Foundation, Inc.
-   
+
+   Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.
+
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
-   
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
 
@@ -26,13 +26,13 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
 #ifndef YY_YY_ZPARSER_H_INCLUDED
 # define YY_YY_ZPARSER_H_INCLUDED
-/* Enabling traces.  */
+/* Debug traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
 #endif
@@ -40,98 +40,97 @@
 extern int yydebug;
 #endif
 
-/* Tokens.  */
+/* Token type.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     T_A = 258,
-     T_NS = 259,
-     T_MX = 260,
-     T_TXT = 261,
-     T_CNAME = 262,
-     T_AAAA = 263,
-     T_PTR = 264,
-     T_NXT = 265,
-     T_KEY = 266,
-     T_SOA = 267,
-     T_SIG = 268,
-     T_SRV = 269,
-     T_CERT = 270,
-     T_LOC = 271,
-     T_MD = 272,
-     T_MF = 273,
-     T_MB = 274,
-     T_MG = 275,
-     T_MR = 276,
-     T_NULL = 277,
-     T_WKS = 278,
-     T_HINFO = 279,
-     T_MINFO = 280,
-     T_RP = 281,
-     T_AFSDB = 282,
-     T_X25 = 283,
-     T_ISDN = 284,
-     T_RT = 285,
-     T_NSAP = 286,
-     T_NSAP_PTR = 287,
-     T_PX = 288,
-     T_GPOS = 289,
-     T_EID = 290,
-     T_NIMLOC = 291,
-     T_ATMA = 292,
-     T_NAPTR = 293,
-     T_KX = 294,
-     T_A6 = 295,
-     T_DNAME = 296,
-     T_SINK = 297,
-     T_OPT = 298,
-     T_APL = 299,
-     T_UINFO = 300,
-     T_UID = 301,
-     T_GID = 302,
-     T_UNSPEC = 303,
-     T_TKEY = 304,
-     T_TSIG = 305,
-     T_IXFR = 306,
-     T_AXFR = 307,
-     T_MAILB = 308,
-     T_MAILA = 309,
-     T_DS = 310,
-     T_DLV = 311,
-     T_SSHFP = 312,
-     T_RRSIG = 313,
-     T_NSEC = 314,
-     T_DNSKEY = 315,
-     T_SPF = 316,
-     T_NSEC3 = 317,
-     T_IPSECKEY = 318,
-     T_DHCID = 319,
-     T_NSEC3PARAM = 320,
-     T_TLSA = 321,
-     T_URI = 322,
-     T_NID = 323,
-     T_L32 = 324,
-     T_L64 = 325,
-     T_LP = 326,
-     T_EUI48 = 327,
-     T_EUI64 = 328,
-     T_CAA = 329,
-     T_CDS = 330,
-     T_CDNSKEY = 331,
-     DOLLAR_TTL = 332,
-     DOLLAR_ORIGIN = 333,
-     NL = 334,
-     SP = 335,
-     STR = 336,
-     PREV = 337,
-     BITLAB = 338,
-     T_TTL = 339,
-     T_RRCLASS = 340,
-     URR = 341,
-     T_UTYPE = 342
-   };
+  enum yytokentype
+  {
+    T_A = 258,
+    T_NS = 259,
+    T_MX = 260,
+    T_TXT = 261,
+    T_CNAME = 262,
+    T_AAAA = 263,
+    T_PTR = 264,
+    T_NXT = 265,
+    T_KEY = 266,
+    T_SOA = 267,
+    T_SIG = 268,
+    T_SRV = 269,
+    T_CERT = 270,
+    T_LOC = 271,
+    T_MD = 272,
+    T_MF = 273,
+    T_MB = 274,
+    T_MG = 275,
+    T_MR = 276,
+    T_NULL = 277,
+    T_WKS = 278,
+    T_HINFO = 279,
+    T_MINFO = 280,
+    T_RP = 281,
+    T_AFSDB = 282,
+    T_X25 = 283,
+    T_ISDN = 284,
+    T_RT = 285,
+    T_NSAP = 286,
+    T_NSAP_PTR = 287,
+    T_PX = 288,
+    T_GPOS = 289,
+    T_EID = 290,
+    T_NIMLOC = 291,
+    T_ATMA = 292,
+    T_NAPTR = 293,
+    T_KX = 294,
+    T_A6 = 295,
+    T_DNAME = 296,
+    T_SINK = 297,
+    T_OPT = 298,
+    T_APL = 299,
+    T_UINFO = 300,
+    T_UID = 301,
+    T_GID = 302,
+    T_UNSPEC = 303,
+    T_TKEY = 304,
+    T_TSIG = 305,
+    T_IXFR = 306,
+    T_AXFR = 307,
+    T_MAILB = 308,
+    T_MAILA = 309,
+    T_DS = 310,
+    T_DLV = 311,
+    T_SSHFP = 312,
+    T_RRSIG = 313,
+    T_NSEC = 314,
+    T_DNSKEY = 315,
+    T_SPF = 316,
+    T_NSEC3 = 317,
+    T_IPSECKEY = 318,
+    T_DHCID = 319,
+    T_NSEC3PARAM = 320,
+    T_TLSA = 321,
+    T_URI = 322,
+    T_NID = 323,
+    T_L32 = 324,
+    T_L64 = 325,
+    T_LP = 326,
+    T_EUI48 = 327,
+    T_EUI64 = 328,
+    T_CAA = 329,
+    T_CDS = 330,
+    T_CDNSKEY = 331,
+    DOLLAR_TTL = 332,
+    DOLLAR_ORIGIN = 333,
+    NL = 334,
+    SP = 335,
+    STR = 336,
+    PREV = 337,
+    BITLAB = 338,
+    T_TTL = 339,
+    T_RRCLASS = 340,
+    URR = 341,
+    T_UTYPE = 342
+  };
 #endif
 /* Tokens.  */
 #define T_A 258
@@ -220,13 +219,12 @@
 #define URR 341
 #define T_UTYPE 342
 
-
-
+/* Value type.  */
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
-typedef union YYSTYPE
+typedef union YYSTYPE YYSTYPE;
+union YYSTYPE
 {
-/* Line 2058 of yacc.c  */
-#line 50 "zparser.y"
+#line 50 "./zparser.y" /* yacc.c:1909  */
 
 	domain_type	 *domain;
 	const dname_type *dname;
@@ -236,29 +234,15 @@
 	uint16_t	  type;
 	uint16_t	 *unknown;
 
-
-/* Line 2058 of yacc.c  */
-#line 242 "zparser.h"
-} YYSTYPE;
+#line 238 "zparser.h" /* yacc.c:1909  */
+};
 # define YYSTYPE_IS_TRIVIAL 1
-# define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
 #endif
 
+
 extern YYSTYPE yylval;
 
-#ifdef YYPARSE_PARAM
-#if defined __STDC__ || defined __cplusplus
-int yyparse (void *YYPARSE_PARAM);
-#else
-int yyparse ();
-#endif
-#else /* ! YYPARSE_PARAM */
-#if defined __STDC__ || defined __cplusplus
 int yyparse (void);
-#else
-int yyparse ();
-#endif
-#endif /* ! YYPARSE_PARAM */
 
 #endif /* !YY_YY_ZPARSER_H_INCLUDED  */
